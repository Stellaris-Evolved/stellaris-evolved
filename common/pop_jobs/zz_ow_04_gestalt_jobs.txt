# - - - - - - - - - - - - - - - - - - - - - ##
# Gestalt Jobs
# - - - - - - - - - - - - - - - - - - - - - ##
spawning_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_spawning_pool

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_robot_pop = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_pop_assemblers
		inline_script = {
			script = jobs/resources/tec_bio_assembly_upkeep
			base = @[tec_spawning_assembly_cost * 2]
			mult = 1
			trigger = ""
		}
	}

	inline_script = {
		script = modifiers/tec_assembly_hive
		trigger = ""
		mult = 2
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = jobs/effects/tec_necrophage_spawning_drone

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}

		# Robots can't get this job
		modifier = {
			factor = 0
			has_trait = trait_mechanical
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

offspring_drone = {	# Digievolved
	category = tec_brood_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_offspring_nest
	icon = spawning_drone

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_robot_pop = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		species = {
			is_same_species = root.owner	
		}
	}
	
	resources = {
		category = planet_administrators
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 5
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 5
		}
		produces = {
			unity = 5 # maybe comment this if too strong
		}
		produces = {
			trigger = {
				planet = {
					has_unity_designation = no
					has_research_designation = no
					has_foundry_designation = no
					has_mining_designation = no
					has_generator_designation = no
					has_farming_designation = no
					has_rural_designation = no
				}
			}
			unity = 5
		}
		produces = {
			trigger = {
				planet = {
					has_unity_designation = yes
				}
			}
			unity = 10
		}
		produces = {
			trigger = {
				planet = {
					has_research_designation = yes
				}
			}
			physics_research = 10
			society_research = 10
			engineering_research = 10
		}
		produces = {
			trigger = {
				planet = {
					has_foundry_designation = yes
				}
			}
			alloys = 5
		}
		produces = {
			trigger = {
				planet = {
					has_mining_designation = yes
				}
			}
			minerals = 10
		}
		produces = {
			trigger = {
				planet = {
					has_farming_designation = yes
				}
			}
			food = 10
		}
		produces = {
			trigger = {
				planet = {
					has_generator_designation = yes
				}
			}
			energy = 10
		}
		produces = {
			trigger = {
				planet = {
					has_rural_designation = yes
				}
			}
			minerals = 5
			food = 5
			energy = 5
		}
	}

	planet_modifier = {
		planet_jobs_simple_drone_produces_mult = 0.1
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				is_capital = yes
			}
		}
		planet_stability_add = 5
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = jobs/effects/tec_necrophage_spawning_drone

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 2
			has_job = offspring_drone
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

#assembler
replicator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_robot_assembly_plant

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_pop_assemblers
		inline_script = {
			script = jobs/resources/tec_robotic_assembly_upkeep
			base = 1
			mult = 1
			trigger = ""
		}
	}

	inline_script = {
		script = modifiers/tec_assembly_robotic
		trigger = ""
		mult = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_tradition = tr_modularity_2
			}
		}
		planet_pop_assembly_add = 0.5 #If this changes, update tr_modularity_2_modifier_desc
	}

	weight = {
		weight = 10000
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				tec_control_crisis_country = yes
			}
		}

		# Robots can't get this job
		modifier = {
			factor = 0
			has_trait = trait_mechanical
		}
	}
}

gestation_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_clinic
	icon = healthcare

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_doctors
		upkeep = {
			alloys = 4
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = growing_species
					growing_species = {
						is_lithoid = no
						tec_is_cybernetic_species = yes
					}
				}
			}
			food = 5
		}
		upkeep = {
			trigger = {
				exists = planet
				planet = {
					exists = growing_species
					growing_species = {
						is_lithoid = yes
						tec_is_cybernetic_species = yes
					}
				}
			}
			minerals = 5
		}
		produces = {
			society_research = 2
			engineering_research = 2
		}
	}

	planet_modifier = {
		pop_growth_speed = 0.10
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 5
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = "jobs/automodding_priority_amenities"

	weight = {
		weight = @spawner_drone_job_weight
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

# Complex
coordinator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_machine_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			physics_research = 2
			society_research = 2
			engineering_research = 2
		}
	}

	triggered_country_modifier = {
		potential = {
			always = yes
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
	}

	inline_script = jobs/effects/type/tec_coordinator_effect

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|coordinator|RESOURCE|unity|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}
		modifier = {
			factor = 2
			has_job = coordinator
		}

		# Robots can't get this job
		modifier = {
			factor = 0
			has_trait = trait_mechanical
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

evaluator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_simulation_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible = {
		drone_job_check_trigger = yes
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_evaluators
		produces = {
			unity = 4
		}
		upkeep = {
			energy = 4
		}
	}

	# NOTE - ROADD: Removed amenities as we provide aditional bonuses from evaluators
	# cause culture workers no longer give amenities
	# at best

	#triggered_planet_modifier = {
	#	potential = {
	#		always = yes
	#	}
	#	planet_amenities_no_happiness_add = 3
	#	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	#}

	inline_script = jobs/evaluator_outputs

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|evaluator|RESOURCE|unity|
		#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = "jobs/automodding_priority_unity"
}

synapse_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_hive_capital

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_robot_pop = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_administrators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 2
			energy = 2
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 2
			energy = 2
		}
	}

	triggered_country_modifier = {
		potential = {
			always = yes
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
	}

	inline_script = jobs/effects/type/tec_synapse_effect

	weight = {
		weight = @synapse_drone_job_weight
		mult = value:job_weights_modifier|JOB|synapse_drone|RESOURCE|unity|
		#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 1.5
			has_job = synapse_drone
		}

		# Robots can't get this job
		modifier = {
			factor = 0
			has_trait = trait_mechanical
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

brain_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_robot_pop = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}

		inline_script = {
			script = jobs/resources/tec_researcher_gestalt_upkeep
			mult = 1
		}

		inline_script = {
			script = jobs/resources/tec_science_requisition_resources
			consumer_goods = 0
			energy = 3
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		inline_script = {
			script = jobs/resources/tec_science_requisition_overlord_resources
			research = 2
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_brain_drone_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|brain_drone|

		# Robots can't get this job
		modifier = {
			factor = 0
			has_trait = trait_mechanical
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

calculator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_research_lab_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 3
			engineering_research = 3
			society_research = 3
		}
		upkeep = {
			energy = 4
		}
		inline_script = {
			script = jobs/resources/tec_science_requisition_resources
			consumer_goods = 0
			energy = 2
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		inline_script = {
			script = jobs/resources/tec_science_requisition_overlord_resources
			research = 2
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_calculator_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|calculator|
		modifier = {
			factor = 1.25
			has_job = calculator
		}

		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}
	}

	inline_script = "jobs/automodding_priority_research"
}

artisan_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_factory_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_artisans
		produces = {
			consumer_goods = 6
		}
		inline_script = {
			script = jobs/resources/tec_cg_job_upkeep
			upkeep = 6
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = jobs/resources/tec_produce_artisan_requisition_resources
			minerals = 1
			consumer_goods = @requisitorium_consumer_goods_reduction
			mult = 1
		}
	}

	
	overlord_resources = {
		category = planet_requisitioned_consumer_goods
		inline_script = {
			script = jobs/resources/tec_produce_artisan_requisition_overlord_resources
			consumer_goods = @requisitorium_consumer_goods_overlord
			mult = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|artisan_drone|RESOURCE|consumer_goods|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}
		modifier = {
			factor = 2
			OR = {
				has_job = artisan_drone
				AND = {
					exists = owner
					owner = { has_deficit = consumer_goods }
				}
			}
		}

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}

	inline_script = "jobs/automodding_priority_industry"
}

fabricator = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 4
		}

		inline_script = {
			script = jobs/resources/tec_alloy_and_refinery_job_upkeep
			minerals = 8
			multiplier = 1
			trigger = ""
		}

		inline_script = {
			script = jobs/resources/tec_material_foundry_requisition_resources
			minerals = 2
			alloys = @requisitorium_alloys_reduction
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		inline_script = {
			script = jobs/resources/tec_material_foundry_requisition_overlord_resources
			alloys = @requisitorium_alloys_overlord
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_foundry_drone_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|fabricator|RESOURCE|alloys|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}

	inline_script = "jobs/automodding_priority_industry"
}

alloy_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3
		}

		inline_script = {
			script = jobs/resources/tec_alloy_and_refinery_job_upkeep
			minerals = 6
			multiplier = 1
			trigger = ""
		}

		inline_script = {
			script = jobs/resources/tec_material_foundry_requisition_resources
			minerals = 2
			alloys = @requisitorium_alloys_reduction
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		inline_script = {
			script = jobs/resources/tec_material_foundry_requisition_overlord_resources
			alloys = @requisitorium_alloys_overlord
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_foundry_drone_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|alloy_drone|RESOURCE|alloys|
	
		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}

	inline_script = "jobs/automodding_priority_industry"
}

catalytic_drone = {
	icon = catalytic_technician
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_foundry_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 3
		}
		produces = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
				}
			}
			alloys = 1
		}

		upkeep = {
			food = @[6 * tec_catalytic_conversion_rate]
		}

		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_robot_empire = yes
				}
			}
			food = @[2 * tec_catalytic_conversion_rate]
		}

		inline_script = {
			script = jobs/resources/tec_material_foundry_requisition_resources
			minerals = 2
			alloys = @requisitorium_alloys_reduction
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_alloys
		inline_script = {
			script = jobs/resources/tec_material_foundry_requisition_overlord_resources
			alloys = @requisitorium_alloys_overlord
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_foundry_drone_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|catalytic_drone|RESOURCE|alloys|

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}

	inline_script = "jobs/automodding_priority_industry"
}

chemist_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_chemical_plant

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_chemists
		produces = {
			volatile_motes = 2
		}
		# Civic swaps
			inline_script = {
				script = jobs/resources/tec_alloy_and_refinery_job_upkeep
				minerals = 10
				multiplier = 1
				trigger = ""
			}
		# /
		# Extra upkeep
			upkeep = {
				energy = 5
			}
		# /
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|chemist_drone|RESOURCE|volatile_motes|

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}
}

translucer_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_crystal_plant

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_translucers
		produces = {
			rare_crystals = 2
		}
		# Civic swaps
			inline_script = {
				script = jobs/resources/tec_alloy_and_refinery_job_upkeep
				minerals = 10
				multiplier = 1
				trigger = ""
			}
		# /
		# Extra upkeep
			upkeep = {
				minerals = 5
			}
		# /
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|translucer_drone|RESOURCE|rare_crystals|

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}
}

gas_refiner_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_refinery

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_refiners
		produces = {
			exotic_gases = 2
		}
		# Civic swaps
			inline_script = {
				script = jobs/resources/tec_alloy_and_refinery_job_upkeep
				minerals = 10
				multiplier = 1
				trigger = ""
			}
		# /
		# Extra upkeep
			upkeep = {	# Extra upkeep
				food = 5
			}
		# /
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|gas_refiner_drone|RESOURCE|exotic_gases|

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}
}

patrol_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		battle_thrall_job_check_trigger = { cached = yes }
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_enforcers
	}

	planet_modifier = {
		planet_crime_no_happiness_add = -25
		planet_stability_add = 1
	}

	pop_modifier = {
		pop_defense_armies_add = 2
	}

	inline_script = jobs/effects/type/tec_patrol_drone_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|patrol_drone|RESOURCE|unity|FACTOR|0.5|
		modifier = {
			factor = 1.5
			has_job = patrol_drone
		}
		# Produce armies
		modifier = {
			factor = 5
			tec_greatly_boost_armies = yes
		}
		modifier = {
			factor = 3
			tec_boost_armies = yes
		}
		modifier = {
			factor = 0.5
			tec_reduces_armies = yes
		}
		modifier = {
			factor = 0.25
			tec_greatly_reduces_armies = yes
		}

		modifier = {
			factor = 1
			planet = { planet_crime >= 10 }
		}
		modifier = {
			factor = 5
			planet = { planet_crime >= 15 }
		}
		modifier = {
			factor = 25
			planet = { planet_crime >= 20 }
		}
		modifier = {
			weight = 25
			exists = owner
			owner = { is_at_war = yes }
		}

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
		}
	}
}

#Menial

crystal_mining_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_crystal_mines

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_sr_miners
		produces = {
			rare_crystals = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|crystal_mining_drone|RESOURCE|rare_crystals|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}

		#Prioritize serving species
		modifier = {
			factor = 3
			OR = {
				tec_has_stapled_trait ={ cached = yes }
			}
		}
	}
}

mote_harvesting_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_mote_harvesting_traps

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_sr_miners
		produces = {
			volatile_motes = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|mote_harvesting_drone|RESOURCE|volatile_motes|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}

		#Prioritize serving species
		modifier = {
			factor = 3
			OR = {
				tec_has_stapled_trait ={ cached = yes }
			}
		}
	}
}

gas_extraction_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_gas_extractors

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		if = {
			limit = {
				exists = owner
				owner = {
					NAND = {
						has_valid_civic = civic_tec_origin_elders
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
	}

	resources = {
		category = planet_sr_miners
		produces = {
			exotic_gases = 2
		}
		upkeep = {
			energy = 1
		}
	}

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|gas_extraction_drone|RESOURCE|exotic_gases|
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}
		modifier = {
			factor = 5
			has_job = gas_extraction_drone
		}

		#Prioritize serving species
		modifier = {
			factor = 3
			OR = {
				tec_has_stapled_trait ={ cached = yes }
			}
		}
	}
}

mining_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_mineral_purification_plant

	possible_pre_triggers = {
		has_owner = yes
		#is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 4
		}
		# Species bonuses/maluses
			#produces = {
			#	trigger = {
			#		is_lithoid = yes
			#	}
			#	minerals = 1
			#}
		# /
		inline_script = {
			script = jobs/resources/tec_material_miner_requisition_resources
			minerals = @requisitorium_minerals_reduction
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_minerals
		inline_script = {
			script = jobs/resources/tec_material_miner_requisition_overlord_resources
			minerals = @requisitorium_minerals_overlord
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_mining_drone_effect

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|mining_drone|RESOURCE|minerals|
		modifier = {
			factor = 1.2
			has_job = mining_drone
		}

		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}

		#Prioritize serving species
		modifier = {
			factor = 3
			OR = {
				tec_has_stapled_trait ={ cached = yes }
			}
		}

		modifier = {
			factor = 0.9
			NOT = { has_job = mining_drone }
			owner = {
				has_monthly_income = {
					resource = minerals
					value > 85
				}
			}
		}

		modifier = {
			factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
			is_pop_category = tec_free_agent
		}
	}

	inline_script = "jobs/automodding_priority_minerals"
}

agri_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_food_processing_facility

	possible_pre_triggers = {
		has_owner = yes
		#is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_farmers
		produces = {
			food = 6
		}
		# Species bonuses/maluses
			#produces = {
			#	trigger = {
			#		is_lithoid = no
			#		is_robotic_species = no
			#	}
			#	food = 1
			#}
			#produces = {
			#	trigger = {
			#		exists = owner
			#		owner = {
			#			is_robot_empire = yes
			#		}
			#	}
			#	food = -1
			#}
		# /
		inline_script = {
			script = jobs/resources/tec_produce_farmer_requisition_resources
			food = @requisitorium_food_reduction
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_food
		inline_script = {
			script = jobs/resources/tec_produce_farmer_requisition_overlord_resources
			food = @requisitorium_food_overlord
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_agri_drone_effect

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|agri_drone|RESOURCE|food|
		modifier = {
			factor = 1.2
			has_job = agri_drone
		}
				
		modifier = {
			factor = 0.9
			owner = {
				is_robot_empire = yes
			}
		}
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}

		modifier = {
			factor = 0.5
			has_trait = trait_lithoid

			owner = {
				is_lithoid_empire = yes
				has_monthly_income = {
					resource = food
					value >= 0
				}
			}
		}

		#Prioritize serving species
		modifier = {
			factor = 3
			OR = {
				tec_has_stapled_trait ={ cached = yes }
			}
		}
		
		modifier = {
			factor = 0.9
			NOT = { has_job = agri_drone }
			owner = {
				has_monthly_income = {
					resource = food
					value > 50
				}
			}
		}
		modifier = {
			factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
			is_pop_category = tec_free_agent
		}
	}

	inline_script = "jobs/automodding_priority_food"
}

technician_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_energy_grid

	possible_pre_triggers = {
		has_owner = yes
		#is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_technician
		produces = {
			energy = 6
		}
		# Species bonuses/maluses
			#produces = {
			#	trigger = {
			#		exists = owner
			#		owner = {
			#			is_robot_empire = yes
			#		}
			#	}
			#	energy = 2
			#}
		# /
		inline_script = {
			script = jobs/resources/tec_energy_requisition_resources
			energy = @requisitorium_energy_reduction
			mult = 1
		}
	}
	overlord_resources = {
		category = planet_requisitioned_energy
		inline_script = {
			script = jobs/resources/tec_energy_requisition_overlord_resources
			energy = @requisitorium_energy_overlord
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_technician_drone_effect

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_modifier|JOB|technician_drone|RESOURCE|energy|
		modifier = {
			factor = 1.2
			has_job = technician_drone
		}
		
		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}

		#Prioritize serving species
		modifier = {
			factor = 1.5
			OR = {
				tec_has_stapled_trait = { cached = yes }
			}
		}

		modifier = {
			factor = 0.9
			NOT = { has_job = technician_drone }
			owner = {
				has_monthly_income = {
					resource = energy
					value > 50
				}
			}
		}
		modifier = {
			factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
			is_pop_category = tec_free_agent
		}
	}

	inline_script = "jobs/automodding_priority_energy"
}

maintenance_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_maintenance_depot

	possible_pre_triggers = {
		has_owner = yes
		#is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_maintenancedrones
	}

	overlord_resources = {
		category = planet_corporate_franchising_meddling
		inline_script = jobs/resources/tec_franchise_headquarters_overlord_resources
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 4
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = jobs/effects/type/tec_maintenance_drone_effect

	weight = {
		weight = @maintenance_drone_job
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 1.1
			has_job = maintenance_drone
		}

		#modifier = {
		#	mult = value:job_weights_modifier|JOB|maintenance_drone|RESOURCE|unity|FACTOR|0.25|
		#	exists = owner
		#	owner = {
		#		OR = {
		#			has_valid_civic = civic_machine_maintenance_protocols
		#			has_active_tradition = tr_versatility_operational_proxies
		#		}
		#	}
		#}

		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}

		# Lets test if this works as it should
		modifier = {
			factor = 100 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			NOT = { has_job = maintenance_drone }
			planet = {
				free_amenities < 3
			}
		}

		modifier = {
			factor = 100 # <- hive mind amenities jobs are non specialist so they have base weight 1 instead of 1000 but we still want them
			has_job = maintenance_drone
			planet = {
				free_amenities < 8
			}
		}

		modifier = {
			factor = 10 # encourage free individuals to work these so normal drones become unemployed for higher strata
			is_pop_category = tec_free_agent
		}

		inline_script = jobs/weights/tec_maintenance_drone
	}

	inline_script = "jobs/automodding_priority_amenities"
}

warrior_drone = {
	category = simple_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_stronghold

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = {
		battle_thrall_job_check_trigger = { cached = yes }
	}

	resources = {
		category = planet_soldiers
	}
	
	triggered_country_modifier = {	# Navalcap rework
		potential = {
			always = yes
		}
		country_naval_cap_add = 1
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_naval_mult|
	}

	pop_modifier = {
		pop_defense_armies_add = 4
	}

	inline_script = jobs/effects/type/tec_warrior_drone_effect

	weight = {
		weight = 5
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_naval_mult|
		modifier = {
			weight = 100
			exists = owner
			owner = { is_at_war = yes }
		}
		modifier = {
			factor = 10
			planet = {
				OR = {
					has_modifier = compliance_protocols
					has_modifier = hunter_killer_drones
				}
			}
		}

		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}
		modifier = {
			factor = 0
			planet = { num_pops < 12 }
			owner = { is_ai = yes }
		}

		# Crafted pops modifier
		modifier = {
			factor = 2
			tec_is_crafted_sentient_pop = yes
		}

		# Produce armies
		modifier = {
			factor = 2
			tec_greatly_boost_armies = yes
		}
		modifier = {
			factor = 1.5
			tec_boost_armies = yes
		}
		modifier = {
			factor = 0.5
			tec_reduces_armies = yes
		}
		modifier = {
			factor = 0.25
			tec_greatly_reduces_armies = yes
		}

		#Prioritize serving species
		modifier = {
			factor = 1.05
			OR = {
				tec_has_stapled_trait ={ cached = yes }
			}
		}

		# Robots can't get this job, unless droid
		modifier = {
			factor = 0
			tec_is_non_advanced_robot = yes
			has_military_service_type = {
				type = military_service_limited
			}
		}

		modifier = {
			factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
			is_pop_category = tec_free_agent
		}
	}
}

bluelotus_drone = {
	category = complex_drone
	is_capped_by_modifier = yes
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_illicit_research_labs
	icon = foundry

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait ={ cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_metallurgists
		produces = {
			alloys = 4
		}

		inline_script = {
			script = pop_categories/tec_pop_upkeep_basics
			trigger = ""
		}
	}

	inline_script = jobs/effects/type/tec_foundry_drone_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_modifier|JOB|bluelotus_drone|RESOURCE|alloys|
	}

	inline_script = "jobs/automodding_priority_industry"
}

chronicle_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_galactic_memorial_1

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job
	possible = {
		NOT = { tec_has_stapled_trait = { cached = yes } }
		drone_individual_pop_check_trigger = no	#prevents free individuals
	}

	resources = {
		category = planet_evaluators
		produces = {
			unity = 4
		}
		upkeep = {
			trigger = {
				is_robotic_or_voidspawn_species = yes
				exists = owner
				owner = {
					tec_is_cyberhive = no
				}
			}
			minerals = 1
			energy = 2
		}
		upkeep = {
			trigger = {
				has_food_upkeep = yes
				exists = owner
				owner = {
					tec_is_cyberhive = no
				}
			}
			energy = 1
			food = 2
		}
		upkeep = {
			trigger = {
				has_mineral_upkeep = yes
				exists = owner
				owner = {
					tec_is_cyberhive = no
				}
			}
			energy = 1
			minerals = 2
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					tec_is_cyberhive = yes
				}
			}
			physics_research = 2
			society_research = 2
			engineering_research = 2
		}
	}

	planet_modifier = {
		planet_stability_add = 2.5
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_no_happiness_add = 3
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	inline_script = jobs/effects/tec_synchronicity_integrated_preservation

	inline_script = jobs/evaluator_outputs

	weight = {
		weight = @complex_drone_job_weight
		mult = 2
		mult = value:job_weights_modifier|JOB|chronicle_drone|RESOURCE|unity|

		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}

		# Robots can't get this job
		modifier = {
			factor = 0
			has_trait = trait_mechanical
		}
	}

	inline_script = "jobs/automodding_priority_unity"
}

scrap_miner_drone = {
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_mineral_purification_plant
	icon = miner

	possible_pre_triggers = {
		has_owner = yes
		#is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	resources = {
		category = planet_miners
		produces = {
			minerals = 2
			alloys = 1
		}
		# Species bonuses/maluses
			#produces = {
			#	trigger = {
			#		is_lithoid = yes
			#	}
			#	minerals = 1
			#}
		# /

		inline_script = {
			script = jobs/resources/tec_material_miner_requisition_resources
			minerals = @[ requisitorium_minerals_reduction / 2 ]
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_minerals
		inline_script = {
			script = jobs/resources/tec_material_miner_requisition_overlord_resources
			minerals = @[ requisitorium_minerals_overlord / 2 ]
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_mining_drone_effect

	weight = {
		weight = @simple_drone_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|scrap_miner_drone|RESOURCE1|minerals|WEIGHT1|0.7|RESOURCE2|alloys|WEIGHT2|0.3|

		modifier = {
			factor = 1.1
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			tec_is_cyborg_species = yes
		}


		#Prioritize serving species
		modifier = {
			factor = 3
			OR = {
				tec_has_stapled_trait ={ cached = yes }
			}
		}

		modifier = {
			factor = 0.9
			NOT = { has_job = scrap_miner_drone }
			owner = {
				has_monthly_income = {
					resource = minerals
					value > 85
				}
			}
		}

		modifier = {
			factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
			is_pop_category = tec_free_agent
		}
	}

	inline_script = "jobs/automodding_priority_minerals"
}


bath_attendant_hive = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_toxic_bath

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_pop_assembly_organic_mult = 0.02
		pop_environment_tolerance = -0.0075
		mult = planet.value:toxic_attendant_growth
	}

	resources = {
		category = planet_bath_attendants_hive
		upkeep = {
			trigger = {
				is_lithoid = no
			}
			food = 4
		}
		upkeep = {
			trigger = {
				is_lithoid = yes
			}
			minerals = 4
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.5 # job is less useful if pop control is active, but still gives amenities
			planet = {
				has_modifier = planet_population_control_gestalt
			}
		}
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

bath_attendant_machine = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_toxic_bath

	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_pop_assembly_mult = 0.02
		pop_amenities_usage_mult = 0.0075
		mult = planet.value:toxic_attendant_growth
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_machine_servitor
			}
		}
		pop_growth_speed = 0.01
		pop_happiness = 0.0025
		mult = planet.value:toxic_attendant_growth
	}

	resources = {
		category = planet_bath_attendants_machine
		upkeep = {
			minerals = 4
		}
	}

	weight = {
		weight = @spawner_drone_job_weight
		modifier = {
			factor = 0.01 # crisis purge
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_amenities"
}

archaeo_drone = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_archaeostudies_faculty

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 3
			society_research = 3
			engineering_research = 3
			minor_artifacts = 0.15
		}
		produces = {
			trigger = {
				planet = {
					is_artificial = no
					OR = {
						tec_is_relic_world = yes
						has_deposit = d_central_spire
						has_deposit = d_former_relic_world
					}
				}
			}
			society_research = 2
			minor_artifacts = 0.25
			# Moved from 0.3 to 0.25
		}
		produces = {
			trigger = {
				planet = {
					is_artificial = yes
					OR = {
						tec_is_relic_world = yes
						has_deposit = d_central_spire
						has_deposit = d_former_relic_world
					}
				}
			}
			physics_research = 1
			society_research = -1
			engineering_research = 2
			minor_artifacts = 0.25
			# Moved from 0.3 to 0.25
		}
		inline_script = {
			script = jobs/resources/tec_researcher_gestalt_upkeep
			mult = 1.25
		}

		inline_script = {
			script = jobs/resources/tec_science_requisition_resources
			consumer_goods = 0
			energy = 2
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		inline_script = {
			script = jobs/resources/tec_science_requisition_overlord_resources
			research = 2
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_brain_drone_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|archaeo_drone|
	}

	inline_script = "jobs/automodding_priority_research"
}

archaeo_unit = {
	category = complex_drone
	condition_string = DRONE_JOB_TRIGGER
	building_icon = building_archaeostudies_faculty

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_drone_job

	possible = { can_think = yes }

	resources = {
		category = planet_researchers
		produces = {
			physics_research = 3
			society_research = 3
			engineering_research = 3
			minor_artifacts = 0.15
		}
		produces = {
			trigger = {
				planet = {
					is_artificial = no
					OR = {
						tec_is_relic_world = yes
						has_deposit = d_central_spire
						has_deposit = d_former_relic_world
					}
				}
			}
			society_research = 2
			minor_artifacts = 0.25
			# Moved from 0.3 to 0.25
		}
		produces = {
			trigger = {
				planet = {
					is_artificial = yes
					OR = {
						tec_is_relic_world = yes
						has_deposit = d_central_spire
						has_deposit = d_former_relic_world
					}
				}
			}
			physics_research = 1
			society_research = -1
			engineering_research = 2
			minor_artifacts = 0.25
			# Moved from 0.3 to 0.25
		}
		inline_script = {
			script = jobs/resources/tec_researcher_gestalt_upkeep
			mult = 1.25
		}

		inline_script = {
			script = jobs/resources/tec_science_requisition_resources
			consumer_goods = 0
			energy = 2
			mult = 1
		}
	}

	overlord_resources = {
		category = planet_requisitioned_research
		inline_script = {
			script = jobs/resources/tec_science_requisition_overlord_resources
			research = 2
			mult = 1
		}
	}

	inline_script = jobs/effects/type/tec_calculator_effect

	weight = {
		weight = @complex_drone_job_weight
		mult = value:job_weights_research_modifier|JOB|archaeo_unit|
		modifier = {
			factor = 0.9
			exists = owner
			years_passed < 1
			owner = { has_valid_civic = civic_machine_assimilator }
			has_trait = trait_cybernetic
		}
	}

	inline_script = "jobs/automodding_priority_research"
}
