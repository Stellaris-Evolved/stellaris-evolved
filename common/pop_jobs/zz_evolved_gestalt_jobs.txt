# common\pop_jobs\zz_evolved_gestalt_jobs.txt

# --------------- Brood Drones
 # Eusociality
	tec_broodqueen_drone = {				# Growth
		category = tec_brood_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_hive_major_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_robot_pop = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait = { cached = yes } }
			species = {
				is_same_species = root.owner	
			}
		}

		resources = {
			category = planet_pop_assemblers

			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 10
				mult = planet.value:tec_broodlord_count|MULT|0.5|
				trigger = ""
			}

			produces = {
				unity = 6
				mult = planet.value:tec_broodlord_count|MULT|1|
			}
		}

		# Assembly interactions
			triggered_planet_modifier = {
				potential = {
					planet = { tec_has_assembly_buildings = no }
				}
				planet_pop_assembly_organic_add = 1
			}
			triggered_planet_modifier = {
				potential = {
					planet = { tec_has_assembly_buildings = no }
				}
				planet_pop_assembly_organic_add = 1
				mult = planet.value:tec_broodlord_count|MULT|1|
			}
		# /
		# has assemblies
			triggered_planet_modifier = {
				potential = {
					planet = { tec_has_assembly_buildings = yes }
				}
				pop_growth_speed = 0.1
			}
			triggered_planet_modifier = {
				potential = {
					planet = { tec_has_assembly_buildings = yes }
				}
				pop_growth_speed = 0.05
				mult = planet.value:tec_broodlord_count|MULT|1|
			}
		# /

		weight = {
			weight = @spawner_drone_job_weight
			factor = 100
			modifier = {
				factor = 100
				species = {
					is_same_value = owner_main_species
				}
			}
			modifier = {
				factor = 0.5 # job is less useful if pop control is active, but still gives amenities
				planet = {
					has_modifier = planet_population_control_gestalt
				}
			}
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_broodlord_drone = {					# Defensive
		category = tec_brood_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_hive_major_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_robot_pop = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait = { cached = yes } }
			species = {
				is_same_species = root.owner	
			}
		}

		resources = {
			category = planet_soldiers
			upkeep = {
				trigger = {
					is_lithoid = no
				}
				food = 2
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = 2
			}
		}

		planet_modifier = {
			planet_stability_add = 2
		}
	
		triggered_country_modifier = {	# Navalcap rework
			potential = {
				always = yes
			}
			country_naval_cap_add = 1
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_naval_mult|
		}

		#triggered_planet_modifier = {
		#	potential = {
		#		always = yes
		#	}
		#	planet_amenities_no_happiness_add = 5
		#	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		#}

		pop_modifier = {
			pop_defense_armies_add = 2
		}

		inline_script = jobs/effects/type/tec_warrior_drone_effect

		weight = {
			weight = @spawner_drone_job_weight
			factor = 1
			modifier = {
				factor = 100
				species = {
					is_same_value = owner_main_species 
				}
			}
			modifier = {
				factor = 0
				planet = {
					has_available_jobs = tec_broodqueen_drone
				}
			}
		}
	}
 # /
 # Sentient Cerebrates
	tec_brood_cerebrate_drone = {			# Research and boost
		inline_script = jobs/tec_disabled
	}
 # /
 # Brood Adjutants
	# Note: done this way so they are of the specific category
	tec_brood_adjutant_fallback_drone = {	# Adapts itself to the colony type
		inline_script = jobs/tec_disabled
	}
	tec_brood_adjutant_research_drone = {	# researcher
		inline_script = jobs/tec_disabled
	}
	tec_brood_adjutant_alloys_drone = {		# foundry
		inline_script = jobs/tec_disabled
	}
	tec_brood_adjutant_unity_drone = {		# administrator
		inline_script = jobs/tec_disabled
	}
 # /
 # Overmind
	tec_brood_overmind_drone = {		# Unity
		inline_script = jobs/tec_disabled
	}
 # /
 # Synchronizer
	tec_brood_synchronizer_drone = {
		inline_script = jobs/tec_disabled
	}
 # /
 # Old
	tec_overmind_drone = {
		category = tec_brood_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_hive_major_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_robot_pop = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait = { cached = yes } }
			species = {
				is_same_species = root.owner	
			}
		}

		resources = {
			category = planet_soldiers
			upkeep = {
				trigger = {
					is_lithoid = no
				}
				food = 2
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = 2
			}
		}

		planet_modifier = {
			planet_stability_add = 2
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		pop_modifier = {
			pop_defense_armies_add = 2
		}

		weight = {
			weight = @spawner_drone_job_weight
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_zealot_drone = {
		category = tec_brood_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_hive_major_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_robot_pop = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			species = {
				is_same_species = root.owner	
			}
		}

		resources = {
			category = planet_jobs
			upkeep = {
				trigger = {
					is_lithoid = no
				}
				food = 2
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = 2
			}
		}

		planet_modifier = {
			planet_stability_add = 2
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		pop_modifier = {
			pop_defense_armies_add = 2
		}

		weight = {
			weight = @spawner_drone_job_weight
		}
	}

	#tec_chorus_drone
	# /
 # /
# /

# --------------- Prime Drones
	tec_prime_drone = {
		category = tec_prime_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				tec_is_machine_unit = yes
			}
		}

		resources = {
			category = planet_administrators
			produces = {	#BASE		6
				trigger = {
					exists = planet
				}
				unity = 6
				mult = planet.value:tec_prime_drone_scaling
			}
			# Note: let the produce above due to variants, variants use the resource inline
			inline_script = jobs/resources/tec_prime_drone_resources
			upkeep = {
				trigger = {
					exists = planet
				}
				energy = 3
				mult = planet.value:tec_prime_drone_scaling
			}
		}

		inline_script = jobs/effects/type/tec_coordinator_effect

		inline_script = jobs/effects/type/tec_prime_drone_effect

		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_prime_performance_drone = {
		category = tec_prime_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				tec_is_machine_unit = yes
			}
		}

		resources = {
			category = planet_administrators
			produces = {	#BASE		6 -> 8
				trigger = {
					exists = planet
				}
				unity = 8
				mult = planet.value:tec_prime_drone_scaling
			}
			# Note: let the produce above due to variants, variants use the resource inline
			inline_script = jobs/resources/tec_prime_drone_resources
			upkeep = { #BASE		3 -> 4
				trigger = {
					exists = planet
				}
				energy = 4
				mult = planet.value:tec_prime_drone_scaling
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_jobs_productive_upkeep_mult = 0.0125
			planet_jobs_productive_produces_mult = 0.025
			mult = planet.value:tec_prime_drone_scaling
		}

		inline_script = jobs/effects/type/tec_coordinator_effect

		inline_script = jobs/effects/type/tec_prime_drone_effect
		
		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_prime_research_drone = {
		category = tec_prime_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				tec_is_machine_unit = yes
			}
		}

		resources = {
			category = planet_researchers
			produces = {	#BASE		6 -> 4
				trigger = {
					exists = planet
				}
				unity = 3
				mult = planet.value:tec_prime_drone_scaling
			}
			produces = {	#BASE		0 -> 4
				trigger = {
					exists = planet
				}
				physics_research = 3
				engineering_research = 3
				society_research = 3
				mult = planet.value:tec_prime_drone_scaling
			}
			# Note: let the produce above due to variants, variants use the resource inline
			inline_script = jobs/resources/tec_prime_drone_resources
			upkeep = {	# BASE 3 -> 6 (energy to research is 1 to 1, so 3/4 to 1 here #more efficient XD
				trigger = {
					exists = planet
				}
				energy = 4
				mult = planet.value:tec_prime_drone_scaling
			}
		}

		inline_script = jobs/effects/type/tec_calculator_effect

		inline_script = jobs/effects/type/tec_prime_drone_effect

		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_research"
	}

	tec_prime_reimaginator_drone = {
		category = tec_prime_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				tec_is_machine_unit = yes
			}
		}

		resources = {
			category = planet_pop_assemblers
			produces = {	#BASE		6
				trigger = {
					exists = planet
				}
				unity = 6
				mult = planet.value:tec_prime_drone_scaling
			}
			# Note: let the produce above due to variants, variants use the resource inline
			inline_script = jobs/resources/tec_prime_drone_resources
			upkeep = {	# BASE 3 -> 4 efficiency of combining all replicator jobs into one
				trigger = {
					exists = planet
				}
				energy = 4
				mult = planet.value:tec_prime_drone_scaling
			}

			inline_script = { # Added assembly upkeep
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = planet.value:tec_reimaginator_assembly
				trigger = ""
			}
		}

		inline_script = {
			script = modifiers/tec_assembly_generic
			trigger = ""
			mult = planet.value:tec_reimaginator_assembly
		}

		#triggered_planet_modifier = {
		#	potential = {
		#		always = yes
		#	}
		#	planet_amenities_no_happiness_add = 5
		#	mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		#}

		inline_script = jobs/effects/type/tec_prime_drone_effect

		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_prime_debugger_drone = {
		category = tec_prime_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				tec_is_machine_unit = yes
			}
		}

		resources = {
			category = planet_administrators
			produces = {	#BASE		6 -> 12
				trigger = {
					exists = planet
				}
				unity = 12
				mult = planet.value:tec_prime_drone_scaling
			}
			# Note: let the produce above due to variants, variants use the resource inline
			inline_script = jobs/resources/tec_prime_drone_resources
			upkeep = { # BASE	3 -> 6
				trigger = {
					exists = planet
				}
				energy = 6
				mult = planet.value:tec_prime_drone_scaling
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_crime_no_happiness_add = -15
			mult = planet.value:tec_prime_drone_scaling
		}

		inline_script = jobs/effects/type/tec_patrol_drone_effect

		inline_script = jobs/effects/type/tec_coordinator_effect

		inline_script = jobs/effects/type/tec_prime_drone_effect
			
		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_prime_warform_drone = {
		category = tec_prime_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				tec_is_machine_unit = yes
			}
		}

		resources = {
			category = planet_soldiers
			produces = {	#BASE		6 -> 8
				trigger = {
					exists = planet
				}
				unity = 8
				mult = planet.value:tec_prime_drone_scaling
			}
			# Note: let the produce above due to variants, variants use the resource inline
			inline_script = jobs/resources/tec_prime_drone_resources
			upkeep = { # Base 3 -> 4
				trigger = {
					exists = planet
				}
				energy = 4
				mult = planet.value:tec_prime_drone_scaling
			}
		}

		triggered_pop_modifier = {
			potential = {
				always = yes
			}
			pop_defense_armies_add = 4
			mult = planet.value:tec_prime_drone_scaling
		}

		# Navalcap
			triggered_planet_modifier = {
				potential = {
					always = yes
				}
				pop_job_naval_mult = 0.025
				mult = planet.value:tec_prime_drone_scaling
			}
		# /

		inline_script = jobs/effects/type/tec_warrior_drone_effect

		inline_script = jobs/effects/type/tec_prime_drone_effect

		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_prime_acquisition_drone = {
		inline_script = jobs/tec_disabled
	}

	tec_prime_industrial_drone = {
		inline_script = jobs/tec_disabled
	}

	tec_prime_signal_drone = {
		inline_script = jobs/tec_disabled
	}

	tec_prime_umbral_drone = {
		inline_script = jobs/tec_disabled
	}

	tec_prime_derivator_drone = {
		category = tec_prime_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				tec_is_machine_unit = yes
			}
		}

		resources = {
			category = planet_administrators
			produces = {	#BASE		6 -> 8
				unity = 8
				trigger = {
					exists = planet
				}
				mult = planet.value:tec_prime_drone_scaling
			}
			# Note: let the produce above due to variants, variants use the resource inline
			inline_script = jobs/resources/tec_prime_drone_resources
			upkeep = { # Base 3 -> 5
				trigger = {
					exists = planet
				}
				energy = 5
				mult = planet.value:tec_prime_drone_scaling
			}
		}

		triggered_planet_modifier = {
			planet_stability_add = 2
			mult = planet.value:tec_prime_drone_scaling
		}
		inline_script = jobs/effects/type/tec_coordinator_effect

		inline_script = jobs/effects/type/tec_prime_drone_effect


		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}
# /

# --------------- Complex drones
	tec_pherodrone_drone = {	# Body Snatchers
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_galactic_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_robot_pop = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			species = {
				is_same_species = root.owner	
			}
		}

		resources = {
			category = planet_soldiers
			upkeep = {
				trigger = {
					exists = owner
					owner = {
						is_lithoid_empire = no
					}
				}
				food = 5
			}
			upkeep = {
				trigger = {
					exists = owner
					owner = {
						is_lithoid_empire = yes
					}
				}
				minerals = 5
			}
		}

		planet_modifier = {
			planet_stability_add = 2
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		pop_modifier = {
			pop_defense_armies_add = 2
		}

		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_resonance_drone = {		# Regular hive unity
		icon = synapse_drone
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_hive_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_robot_pop = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_administrators
			produces = {
				unity = 4
			}
			upkeep = {
				trigger = {
					is_lithoid = no
				}
				food = 2
				energy = 2
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = 2
				energy = 2
			}
		}

		triggered_planet_modifier = {	# Regular hives
			potential = {
				exists = owner
				owner = {
					tec_is_regular_hive = yes
				}
			}
			planet_jobs_simple_drone_produces_mult = 0.01
		}

		triggered_country_modifier = {
			potential = {
				always = yes
			}
			country_edict_fund_add = 2
			mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
		}

		inline_script = jobs/effects/type/tec_synapse_effect

		weight = {
			weight = @synapse_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_resonance_drone|RESOURCE|unity|
			#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 1.5
				has_job = tec_resonance_drone
			}
			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_podtender_drone = {		# Unused
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_spawning_pool

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_robot_pop = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		planet_modifier = {
			planet_pop_assembly_organic_add = 2
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		resources = {
			category = planet_pop_assemblers
			upkeep = {
				trigger = {
					is_lithoid = no
				}
				food = 10
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = 10
			}
		}

		weight = {
			weight = 10000
			modifier = {
				factor = 0.01 # job is less useful if pop control is active, but still gives amenities
				planet = {
					has_modifier = planet_population_control_gestalt
				}
			}
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}

			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_network_drone = {		# Cyberhive unity
		icon = coordinator
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_cyberhive_node

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_administrators
			produces = {
				trigger = {
					exists = owner
				}
				unity = 4
			}

			upkeep = {
				physics_research = 2
				society_research = 2
				engineering_research = 2
			}
		}

		triggered_country_modifier = {
			potential = {
				always = yes
			}
			country_edict_fund_add = 3
			mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
		}

		inline_script = jobs/effects/type/tec_synapse_effect

		weight = {
			weight = @synapse_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_network_drone|RESOURCE|unity|
			#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 5
				has_job = tec_network_drone
			}
			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_spareparts_drone = {	# Amenities
		icon = maintenance_drone
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_gestalt_parts_1

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}
		
		resources = {
			category = planet_maintenancedrones
			produces = {
				unity = 1
			}
			upkeep = {
				alloys = 2
			}
		}

		triggered_planet_modifier = {
			potential = {
				planet = {
					NOR = {
						tec_is_arcology = { cached = yes }
						tec_is_perfect_planet = { cached = yes }
						tec_is_machine_world = yes
						tec_is_hive_world = yes
						is_capital = yes
					}
				}
			}
			pop_environment_tolerance = 0.05
		}
		triggered_planet_modifier = {
			potential = {
				planet = {
					OR = {
						tec_is_arcology = { cached = yes }
						tec_is_perfect_planet = { cached = yes }
						tec_is_machine_world = yes
						tec_is_hive_world = yes
						is_capital = yes
					}
				}
			}
			planet_jobs_complex_drone_produces_mult = 0.02
		}
		
		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 10
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		inline_script = jobs/effects/type/tec_maintenance_drone_effect

		weight = {
			weight = @synapse_drone_job_weight 	# amenities = good
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			
			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = {
					has_valid_civic = civic_machine_assimilator 
				}
				tec_is_cyborg_species = yes
			}

			modifier = {
				factor = 10
				planet = {
					free_amenities < 20
				}
			}

			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
			inline_script = jobs/weights/tec_maintenance_drone
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_replicator_drone = {	# Robot assembly
		icon = roboticist
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_robot_assembly_plant

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_pop_assemblers
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = @[tec_robot_assembly_cost * 2]
				mult = 1
				trigger = ""
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			trigger = ""
			mult = 2
		}

		weight = {
			weight = 50000
			# prio job, right?
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_master_replicator_drone = {
		icon = roboticist
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_robot_assembly_complex
			
		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_pop_assemblers
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = @tec_robot_assembly_cost
				mult = value:tec_assembly_building_tier
				trigger = ""
			}
			produces = {
				trigger = {	exists = owner }
				engineering_research = 0.5
				mult = value:tec_master_assembler_research_output
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 10
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			trigger = ""
			mult = value:tec_assembly_building_tier
		}

		weight = {
			weight = 50000
			# prio job, right?
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_cloner_drone = {		# Cloning
		icon = tec_cloner
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_clone_vats_2
		clothes_texture_index = 3
			
		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_pop_assemblers
			
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = @[tec_cloning_assembly_cost * 2]
				mult = 1
				trigger = ""
			}

			upkeep = {
				unity = 2
			}
		}

		inline_script = {
			script = modifiers/tec_assembly_organic
			trigger = ""
			mult = 2
		}

		weight = {
			weight = 50000
			# prio job, right?
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}

	tec_master_cloner_drone = {
		icon = tec_cloner
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_clone_vats_2
		clothes_texture_index = 3
			
		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_pop_assemblers
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = @tec_cloning_assembly_cost
				mult = value:tec_assembly_building_tier
				trigger = ""
			}
			produces = {
				trigger = {	exists = owner }
				society_research = 0.5
				mult = value:tec_master_assembler_research_output
			}
		}

		inline_script = {
			script = modifiers/tec_assembly_organic
			trigger = ""
			mult = value:tec_assembly_building_tier
		}

		weight = {
			weight = 50000
			# prio job, right?
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}

	tec_bioengineer_drone = {
		icon = tec_bioengineer
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_bioservant_plant_1
		clothes_texture_index = 3
			
		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}
		
		inline_script = {
			script = modifiers/tec_assembly_bioservant
			trigger = ""
			mult = 2
		}

		resources = {
			category = planet_pop_assemblers
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = @[tec_bioservant_assembly_cost * 2]
				mult = 1
				trigger = ""
			}
		}

		weight = {
			weight = 50000
			# prio job, right?
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}

	tec_master_bioengineer_drone = {
		icon = tec_bioengineer
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_bioservant_plant_2
		clothes_texture_index = 3
			
		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_pop_assemblers
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = @tec_bioservant_assembly_cost
				mult = value:tec_assembly_building_tier
				trigger = ""
			}
			produces = {
				trigger = {	exists = owner }
				society_research = 0.5
				mult = value:tec_master_assembler_research_output
			}
		}

		inline_script = {
			script = modifiers/tec_assembly_bioservant
			trigger = ""
			mult = value:tec_assembly_building_tier
		}

		weight = {
			weight = 50000
			# prio job, right?
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}

	tec_cyborg_ripperdoc_drone = {
		inline_script = jobs/tec_disabled
	}

	tec_ecoresearcher_drone = {	# Preservation
		icon = tec_xenobiologist
		category = complex_drone 
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_executive_retreat

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_researchers
			produces = {
				physics_research = 1
				engineering_research = 5
				society_research = 5
			}
			inline_script = {
				script = jobs/resources/tec_researcher_gestalt_upkeep
				mult = 1
			}
		}

		inline_script = jobs/effects/type/tec_brain_drone_effect
		inline_script = jobs/effects/type/tec_calculator_effect

		weight = {
			weight = @complex_drone_job_weight
			mult = value:job_weights_research_modifier|JOB|tec_ecoresearcher_drone|
			factor = 1.1
			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}

		inline_script = "jobs/automodding_priority_research"
	}

	tec_naval_operator_drone = {	# Naval rework
		icon = tec_naval_operator
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_stronghold

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		resources = {
			category = planet_soldiers
			upkeep = {
				trigger = {
					species = {
						is_lithoid = no
						is_robotic = no
					}
				}
				food = 2
			}
			upkeep = {
				trigger = {
					species = {
						is_lithoid = yes
						is_robotic = no
					}
				}
				minerals = 2
			}
			upkeep = {
				trigger = {
					species = {
						is_robotic = yes
					}
				}
				energy = 3
			}
			upkeep = {
				alloys = 1
			}
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			battle_thrall_job_check_trigger = { cached = yes }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		triggered_country_modifier = {	# Navalcap rework
			potential = {
				always = yes
			}
			country_naval_cap_add = 4
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_naval_mult|
		}

		pop_modifier = {
			pop_defense_armies_add = 1
		}
		
		inline_script = jobs/effects/type/tec_naval_operator_drone_effect

		weight = {
			weight = @complex_drone_job_weight
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_naval_mult|
			modifier = {
				factor = 0
				species = {
					can_be_soldier = no
				}
			}
			modifier = {
				factor = 1.5
				has_job = tec_naval_operator_drone
			}

			modifier = {
				weight = 100
				exists = owner
				owner = { is_at_war = yes }
			}

			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}
			
			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}

			# Produce armies
			modifier = {
				factor = 2
				tec_greatly_boost_armies = yes
			}
			modifier = {
				factor = 1.5
				tec_boost_armies = yes
			}
			modifier = {
				factor = 0.5
				tec_reduces_armies = yes
			}
			modifier = {
				factor = 0.25
				tec_greatly_reduces_armies = yes
			}

			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
				has_military_service_type = {
					type = military_service_limited
				}
			}
		}
	}

	tec_shipyard_technician_drone = {
		icon = tec_shipyard_technician
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_research_lab_1
		clothes_texture_index = 3

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			battle_thrall_job_check_trigger = { cached = yes }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_soldiers
			upkeep = {
				alloys = 2
			}
		}

		pop_modifier = {
			pop_defense_armies_add = 1
		}

		country_modifier = {
			starbase_shipyard_build_speed_mult = 0.005
		}

		triggered_country_modifier = {	# Navalcap rework
			potential = {
				always = yes
			}
			country_naval_cap_add = 4
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_naval_mult|
		}
		
		inline_script = jobs/effects/type/tec_naval_operator_drone_effect

		weight = {
			weight = @soldier_job_weight
			factor = 6 # Cooler job
			modifier = {
				factor = 1.5
				has_job = tec_shipyard_engineer
			}
			modifier = {
				factor = 0
				species = {
					can_be_soldier = no
				}
			}

			modifier = {
				factor = 0.1
				is_enslaved = yes
				NOT = { has_slavery_type = { type = slavery_military } }
			}
			modifier = {
				factor = 10
				is_enslaved = yes
				has_slavery_type = { type = slavery_military }
			}
			modifier = {
				factor = 0.1
				can_take_servant_job = yes
			}

			# Produce armies
			modifier = {
				factor = 2
				tec_greatly_boost_armies = yes
			}
			modifier = {
				factor = 1.5
				tec_boost_armies = yes
			}
			modifier = {
				factor = 0.5
				tec_reduces_armies = yes
			}
			modifier = {
				factor = 0.25
				tec_greatly_reduces_armies = yes
			}
			
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}

	tec_shipyard_engineer_drone = {
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_research_lab_1
		icon = tec_shipyard_engineer
		clothes_texture_index = 3

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_researchers
			produces = {
				engineering_research = 4
			}
			upkeep = {
				alloys = 2
			}
		}

		triggered_country_modifier = {	# Navalcap rework
			potential = {
				always = yes
			}
			country_naval_cap_add = 4
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_naval_mult|
		}

		inline_script = jobs/effects/type/tec_brain_drone_effect
		inline_script = jobs/effects/type/tec_calculator_effect
		inline_script = jobs/effects/type/tec_naval_operator_drone_effect
			
		weight = {
			weight = @soldier_job_weight
			factor = 5 # Cool job
			modifier = {
				weight = 100
				exists = owner
				owner = { is_at_war = yes }
			}
					
			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}
			modifier = {
				factor = 0
				planet = { count_owned_pop = { limit = { }count < 12 } }
				owner = { is_ai = yes }
			}
			modifier = {
				factor = 0.1
				can_take_servant_job = yes
			}
			
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}

		inline_script = "jobs/automodding_priority_research"
	}

	tec_megastructure_logistician_drone = {	# Orbital logistics
		icon = tec_megastructure_logistician
		category = complex_drone 
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_maintenance_depot

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_researchers
			produces = {
				physics_research = 1
				engineering_research = 1
			}
			upkeep = {
				alloys = @tec_megastructure_logistician_upkeep
			}
		}

		inline_script = jobs/effects/type/tec_brain_drone_effect
		inline_script = jobs/effects/type/tec_calculator_effect

		planet_modifier = {
			tec_mega_production_mult = 0.025
			tec_subhabitat_all_add = 2
			tec_subhabitat_research_add = @[-tec_subhabitat_menial_job_boost]
		}

		weight = {
			weight = @complex_drone_job_weight
			mult = value:job_weights_research_modifier|JOB|tec_megastructure_logistician_drone|
			factor = 1.1
			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}

		inline_script = "jobs/automodding_priority_research"
	}

# /

# --------------- Civics
	tec_trade_drone = {			# Machine traders
		icon = tec_trade_specialist
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_galactic_stock_exchange

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_tec_trade_drones
			upkeep = {
				energy = 2
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			trade_value_add = 12
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
		}

		weight = {
			weight = @complex_drone_job_weight
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|

			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			#Resource
			modifier = {
				factor = 0
				planet = {
					owner = {
						is_ai = yes
						has_resource = { type = energy amount < 500 }
						has_monthly_income = {
							resource = energy
							value < 25
						}
					}
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}

		inline_script = "jobs/automodding_priority_trade"
	}

	tec_numismatic_drone = {			# Machine traders
		icon = numistic_priest
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_nuumismatic_shrine

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait = { cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_tec_trade_drones
			produces = {
				unity = 2
			}
			upkeep = {
				energy = 2
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			trade_value_add = 10
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_trade_mult|
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_add = 2
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		weight = {
			weight = @complex_drone_job_weight
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_trade_mult|

			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			#Resource
			modifier = {
				factor = 0
				planet = {
					owner = {
						is_ai = yes
						has_resource = { type = energy amount < 500 }
						has_monthly_income = {
							resource = energy
							value < 25
						}
					}
				}
			}
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}

		inline_script = "jobs/automodding_priority_trade"
	}

	tec_depth_drone = {			# Aquatic
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_maintenance_depot

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
		}

		resources = {
			category = planet_enforcers
			produces = {
				unity = 2
			}
			upkeep = {
				trigger = {
					exists = owner
					owner = {
						is_lithoid_empire = no
					}
				}
				food = 2
			}
			upkeep = {
				trigger = {
					exists = owner
					owner = {
						is_lithoid_empire = yes
					}
				}
				minerals = 2
			}
		}

		planet_modifier = {
			planet_crime_no_happiness_add = -10
		}

		#triggered_planet_modifier = {
		#	potential = {
		#		exists = owner
		#		NOR = {
		#			owner = {
		#				OR = { 
		#					has_origin = origin_clone_army
		#					has_origin = origin_tec_clones
		#					has_origin = origin_tec_hive_biomorph
		#					has_valid_civic = civic_tec_hive_eusocial
		#				}
		#			}
		#			owner_main_species = {
		#				has_trait = trait_tec_lithoid_sedimentary
		#			}
		#		}
		#	}
		#	pop_growth_speed = 0.01
		#}

		#triggered_planet_modifier = {
		#	potential = {
		#		exists = owner
		#		OR = {
		#			owner = {
		#				OR = { 
		#					has_origin = origin_clone_army
		#					has_origin = origin_tec_clones
		#					has_origin = origin_tec_hive_biomorph
		#					has_valid_civic = civic_tec_hive_eusocial
		#				}
		#			}
		#			owner_main_species = {
		#				has_trait = trait_tec_lithoid_sedimentary
		#			}
		#		}
		#	}
		#	planet_pop_assembly_organic_mult = 0.01
		#}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_jobs_worker_produces_mult = 0.015
		}

		inline_script = jobs/effects/type/tec_patrol_drone_effect

		weight = {
			weight = @high_prio_specialist_job_weight
			modifier = { # Important job that produces growth
				factor = 5
				planet = {
					num_pops < 120
				}
			}

			# Produce armies
			modifier = {
				factor = 5
				tec_greatly_boost_armies = yes
			}
			modifier = {
				factor = 3
				tec_boost_armies = yes
			}
			modifier = {
				factor = 0.5
				tec_reduces_armies = yes
			}
			modifier = {
				factor = 0.25
				tec_greatly_reduces_armies = yes
			}

			# Crime autotrigger - Gestalts handle crime in a worse way than regular empires
			modifier = {
				factor = 1
				planet = { planet_crime >= 10 }
			}
			modifier = {
				factor = 5
				planet = { planet_crime >= 15 }
			}
			modifier = {
				factor = 25
				planet = { planet_crime >= 20 }
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}

	tec_reef_drone = {
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_mineral_purification_plant

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job

		resources = {
			category = planet_miners
			produces = {
				minerals = 5
			}
			# Species bonuses/maluses
				#produces = {
				#	trigger = {
				#		is_lithoid = yes
				#	}
				#	minerals = 1
				#}
			# /
			inline_script = {
				script = jobs/resources/tec_material_miner_requisition_resources
				minerals = @requisitorium_minerals_reduction
				mult = 1
			}
		}

		overlord_resources = {
			category = planet_requisitioned_minerals
			inline_script = {
				script = jobs/resources/tec_material_miner_requisition_overlord_resources
				minerals = @requisitorium_minerals_overlord
				mult = 1
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 2
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		inline_script = jobs/effects/type/tec_mining_drone_effect

		weight = {
			weight = @simple_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_reef_drone|RESOURCE|minerals|
			#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 1.2
				has_job = mining_drone
			}

			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}
			
			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}

			#Prioritize serving species
			modifier = {
				factor = 3
				OR = {
					tec_has_stapled_trait ={ cached = yes }
				}
			}

			modifier = {
				factor = 0.9
				NOT = { has_job = tec_reef_drone }
				owner = {
					has_monthly_income = {
						resource = minerals
						value > 85
					}
				}
			}
			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}

		inline_script = "jobs/automodding_priority_minerals"
	}

	tec_aqua_drone = {
		icon = angler
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_food_processing_facility

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job

		resources = {
			category = planet_farmers
			produces = {
				food = 7
			}
			# Species bonuses/maluses
				#produces = {
				#	trigger = {
				#		is_lithoid = no
				#		is_robotic_species = no
				#	}
				#	food = 1
				#}
				#produces = {
				#	trigger = {
				#		exists = owner
				#		owner = {
				#			is_robot_empire = yes
				#		}
				#	}
				#	food = -1
				#}
			# /
			inline_script = {
				script = jobs/resources/tec_produce_farmer_requisition_resources
				food = @requisitorium_food_reduction
				mult = 1
			}
		}
		overlord_resources = {
			category = planet_requisitioned_food
			inline_script = {
				script = jobs/resources/tec_produce_farmer_requisition_overlord_resources
				food = @requisitorium_food_overlord
				mult = 1
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 2
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		inline_script = jobs/effects/type/tec_agri_drone_effect

		weight = {
			weight = @simple_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_aqua_drone|RESOURCE|food|
			#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 1.2
				has_job = agri_drone
			}
					
			modifier = {
				factor = 0.9
				owner = {
					is_robot_empire = yes
				}
			}
			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			modifier = {
				factor = 0.5
				has_trait = trait_lithoid

				owner = {
					is_lithoid_empire = yes
					has_monthly_income = {
						resource = food
						value >= 0
					}
				}
			}

			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}

			#Prioritize serving species
			modifier = {
				factor = 3
				OR = {
					tec_has_stapled_trait ={ cached = yes }
				}
			}
			modifier = {
				factor = 5
				owner = {
					has_monthly_income = {
						resource = food
						value < 0
					}
				}
			}
			modifier = {
				factor = 0.9
				NOT = { has_job = tec_aqua_drone }
				owner = {
					has_monthly_income = {
						resource = food
						value > 50
					}
				}
			}
			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}

		inline_script = "jobs/automodding_priority_food"
	}

	tec_thermogenerator_drone = {	# Desicattors
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_energy_grid
		icon = technician_drone

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job

		resources = {
			category = planet_technician
			produces = {
				energy = 7
			}
			# Species bonuses/maluses
				#produces = {
				#	trigger = {
				#		exists = owner
				#		owner = {
				#			is_robot_empire = yes
				#		}
				#	}
				#	energy = 2
				#}
			# /
			inline_script = {
				script = jobs/resources/tec_energy_requisition_resources
				energy = @requisitorium_energy_reduction
				mult = 1
			}
		}
		overlord_resources = {
			category = planet_requisitioned_energy
			inline_script = {
				script = jobs/resources/tec_energy_requisition_overlord_resources
				energy = @requisitorium_energy_overlord
				mult = 1
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 2
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}


		inline_script = jobs/effects/type/tec_technician_drone_effect

		weight = {
			weight = @simple_drone_job_weight
			mult = value:job_weights_modifier|JOB|technician_drone|RESOURCE|energy|
			modifier = {
				factor = 1.2
				has_job = technician_drone
			}
			
			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}
			#Prioritize serving species
			modifier = {
				factor = 1.5
				OR = {
					tec_has_stapled_trait ={ cached = yes }
				}
			}

			modifier = {
				factor = 0.9
				NOT = { has_job = technician_drone }
				owner = {
					has_monthly_income = {
						resource = energy
						value > 50
					}
				}
			}
			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}

		inline_script = "jobs/automodding_priority_energy"
	}

	tec_hydrorelay_drone = {		# Desicattors
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_energy_grid

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait = { cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_researchers
			produces = {
				physics_research = 4
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		inline_script = jobs/effects/type/tec_maintenance_drone_effect
		inline_script = jobs/effects/type/tec_calculator_effect

		weight = {
			weight = @complex_drone_job_weight
			mult = value:job_weights_research_modifier|JOB|tec_hydrorelay_drone|
			#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}
			inline_script = jobs/weights/tec_maintenance_drone
		}

		inline_script = "jobs/automodding_priority_research"
	}

	tec_mental_servant = {		# Thought Harvesters
		category = simple_drone
		is_capped_by_modifier = no
		building_icon = building_slave_huts
		clothes_texture_index = 2
		icon = servant

		possible_pre_triggers = {
			is_sapient = yes
			is_enslaved = yes
			is_robot_pop = no
		}

		possible = {
			NOT = {
				species = {
					is_same_value = root.owner
				}
			}
			has_slavery_type = {
				type = slavery_domestic
			}
			is_organic_species = yes
			exists = owner
			owner = {
				has_valid_civic = civic_tec_hive_mindflayers	
			}
		}
		
		resources = {
			category = planet_livestock
			produces = {
				physics_research = 1
				society_research = 1
				engineering_research = 1
			}
			produces = {
				trigger = {
					tec_is_any_psionic_species = yes
				}
				physics_research = 1
				society_research = 1
				engineering_research = 1
			}
		}
		
		triggered_pop_modifier = {
			potential = {
				is_organic_species = yes
			}
			pop_housing_usage_add = -0.5
		}
		
		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_add = 3
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}
				
		weight = {
			weight = @maintenance_drone_job
			#mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			mult = value:job_weights_research_modifier|JOB|brain_drone|
		}

		inline_script = "jobs/automodding_priority_research"
	}

	tec_scavenger_drone = {		# Scavengers
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_scavenge_center
		icon = miner

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
		}

		pop_modifier = {
			planet_pops_upkeep_mult = 0.5
		}

		resources = {
			category = planet_jobs_productive
			inline_script = jobs/resources/tec_scavanger_resources
		}

		weight = {
			weight = @complex_drone_job_weight
			modifier = {	# Important job
				factor = 10
			}
			modifier = {
				factor = 1.2
				has_job = tec_scavenger_drone
			}

			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}
			
			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}

			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}
	}

	tec_memorialist_drone = {	# Memorialists
		icon = death_chronicler
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_memorialist_site_1

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job

		resources = {
			category = planet_administrators
			produces = {
				unity = 3
				society_research = 1
			}
		}

		inline_script = {
			script = modifiers/tec_alternative_upkeep
			count = 1
			trigger = ""
		}

		triggered_planet_modifier = {	# Regular hives
			potential = {
				exists = owner
				owner = {
					tec_is_regular_hive = yes
				}
			}
			planet_jobs_simple_drone_produces_mult = 0.01
		}

		inline_script = jobs/effects/type/tec_synapse_effect

		weight = {
			weight = @simple_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_memorialist_drone|RESOURCE|unity|
			modifier = {
				factor = 5
				has_job = tec_memorialist_drone
			}
			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}

			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}
 # /
 # Researchers swap

 # /
 # Researchers half swap

 # /
 # Extra researchers
	tec_geneticist_drone = {				# Evolutionary
		icon = tec_geneticist
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_evolutionary_lab_1
	
		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_robot_pop = no
			is_sapient = yes
		}
	
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait = { cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}
	
		resources = {
			category = planet_researchers
			produces = {
				physics_research = 2
				society_research = 5
				engineering_research = 2
			}
	
			inline_script = {
				script = jobs/resources/tec_researcher_gestalt_upkeep
				mult = 1
			}
	
			inline_script = {
				script = jobs/resources/tec_science_requisition_resources
				consumer_goods = 0
				energy = 3
				mult = 1
			}
		}

		overlord_resources = {
			category = planet_requisitioned_research
			inline_script = {
				script = jobs/resources/tec_science_requisition_overlord_resources
				research = 1
				mult = 1
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_pop_assembly_organic_mult = 0.01
		}

		inline_script = jobs/effects/type/tec_brain_drone_effect

		weight = {
			weight = @complex_drone_job_weight
			mult = value:job_weights_research_modifier|JOB|tec_geneticist_drone|
	
			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
		}

		inline_script = "jobs/automodding_priority_research"
	}

# /

# --------------- Features
	tec_matterminer_drone = {	# Ringworld
		icon = tec_geoengineer
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_mineral_purification_hub

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
		}

		resources = {
			category = planet_miners
			produces = {
				minerals = 6
			}
			upkeep = {
				energy = 2
			}
			# Species bonuses/maluses
				#produces = {
				#	trigger = {
				#		is_lithoid = yes
				#	}
				#	minerals = 1
				#}
			# /
			inline_script = {
				script = jobs/resources/tec_material_miner_requisition_resources
				minerals = @requisitorium_minerals_reduction
				mult = 1
			}
		}

		overlord_resources = {
			category = planet_requisitioned_minerals
			inline_script = {
				script = jobs/resources/tec_material_miner_requisition_overlord_resources
				minerals = @requisitorium_minerals_overlord
				mult = 1
			}
		}

		inline_script = jobs/effects/type/tec_mining_drone_effect

		weight = {
			weight = @simple_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_matterminer|RESOURCE|minerals|
			modifier = {
				factor = 1.2
				has_job = tec_matterminer_drone
			}

			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}
			
			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}

			#Prioritize serving species
			modifier = {
				factor = 3
				OR = {
					tec_has_stapled_trait ={ cached = yes }
				}
			}

			modifier = {
				factor = 0.9
				owner = {
					has_monthly_income = {
						resource = minerals
						value > 85
					}
				}
			}
			# low energy
			modifier = {
				factor = 0.5
				owner = {
					has_monthly_income = {
						resource = minerals
						value < 0
					}
				}
			}

			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}

		inline_script = "jobs/automodding_priority_minerals"
	}
# /

# --------------- Traditions
	tec_hive_admin_drone = {	# Statecraft
		icon = administrator
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_imperial_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_robot_pop = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_maintenancedrones
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		# Playstyle
			triggered_planet_modifier = {	# Regular hiv
				potential = {
					exists = owner
					owner = {
						is_hive_empire = yes
						tec_is_cyberhive = no
						tec_is_biohive = no
					}
				}
				modifier = {
					planet_crime_no_happiness_add = -10
				}
			}
			triggered_planet_modifier = {	# Cyberhiv
				potential = {
					exists = owner
					owner = {
						is_hive_empire = yes
						tec_is_cyberhive = yes
						tec_is_biohive = no
					}
				}
				modifier = {
					planet_cyborg_jobs_produces_mult = 0.025
				}
			}
			triggered_planet_modifier = {	# BioHiv
				potential = {
					exists = owner
					owner = {
						is_hive_empire = yes
						tec_is_cyberhive = no
						tec_is_biohive = yes
					}
				}
				modifier = {
					planet_jobs_food_produces_mult = 0.05
				}
			}
		# /
		# Ethics
			triggered_planet_modifier = {	# Extro
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_extrospective
					}
				}
				modifier = {
					planet_researchers_produces_mult = 0.025
				}
			}
			triggered_planet_modifier = {	# Intro
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_introspective
					}
				}
				modifier = {
					planet_jobs_unity_produces_mult = 0.05
				}
			}

			triggered_planet_modifier = {	# Apa
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_apathy
					}
				}
				modifier = {
					planet_orbital_bombardment_damage = -0.05
				}
			}
			triggered_planet_modifier = {	# Empa
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_introspective
					}
				}
				modifier = {
					planet_pops_upkeep_mult = -0.05
				}
			}

			triggered_planet_modifier = {	# Pres
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_preservation
					}
				}
				modifier = {
					planet_districts_upkeep_mult = -0.05
				}
			}
			triggered_planet_modifier = {	# Dis
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_overconsumption
					}
				}
				modifier = {
					planet_buildings_upkeep_mult = -0.05
				}
			}
		# /
		
		inline_script = jobs/effects/type/tec_maintenance_drone_effect

		weight = {
			weight = @ruler_job_weight
			#mult = value:job_weights_modifier|JOB|tec_hive_admin_drone|RESOURCE|unity|
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 5
				has_job = tec_hive_admin_drone
			}

			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
			inline_script = jobs/weights/tec_maintenance_drone
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_machine_admin_drone = {
		icon = administrator
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_machine_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}
		resources = {
			category = planet_maintenancedrones
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 5
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_jobs_tec_cybernetics_produces_mult = 0.025
		}

		# Ethics
			triggered_planet_modifier = {	# Extro
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_extrospective
					}
				}
				modifier = {
					planet_researchers_produces_mult = 0.025
				}
			}
			triggered_planet_modifier = {	# Intro
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_introspective
					}
				}
				modifier = {
					planet_jobs_unity_produces_mult = 0.05
				}
			}

			triggered_planet_modifier = {	# Apa
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_apathy
					}
				}
				modifier = {
					planet_orbital_bombardment_damage = -0.05
				}
			}
			triggered_planet_modifier = {	# Empa
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_introspective
					}
				}
				modifier = {
					planet_pops_upkeep_mult = -0.05
				}
			}

			triggered_planet_modifier = {	# Pres
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_preservation
					}
				}
				modifier = {
					planet_districts_upkeep_mult = -0.05
				}
			}
			triggered_planet_modifier = {	# Dis
				potential = {
					exists = owner
					owner = {
						has_ethic = ethic_gestalt_overconsumption
					}
				}
				modifier = {
					planet_buildings_upkeep_mult = -0.05
				}
			}
		# /

		inline_script = jobs/effects/type/tec_maintenance_drone_effect

		weight = {
			weight = @ruler_job_weight
			#mult = value:job_weights_modifier|JOB|tec_machine_admin_drone|RESOURCE|unity|
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 5
				has_job = tec_machine_admin_drone
			}

			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
			inline_script = jobs/weights/tec_maintenance_drone
		}

		inline_script = "jobs/automodding_priority_amenities"
	}

	tec_planner_drone = {		# Outreach
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_outreach_platform
		icon = miner

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
		}

		resources = {
			category = planet_maintenancedrones
			produces = {
				unity = 4
			}
			inline_script = jobs/resources/tec_planner_resources
			upkeep = {
				energy = 2
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 3
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		weight = {
			weight = @complex_drone_job_weight
			modifier = {	# Important job
				factor = 10
			}
			modifier = {
				factor = 1.2
				has_job = tec_planner_drone
			}

			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}
			
			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}
		}

		inline_script = "jobs/automodding_priority_unity"
	}
# /

# --------------- Ascension
 # Genetic
	tec_gene_recombinator_drone = {
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_regular_genetic_archive
		icon = tec_geneticist

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_robot_pop = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			if = {
				limit = {
					exists = owner
					owner = {
						NAND = {
							has_valid_civic = civic_tec_origin_elders
							has_ethic = ethic_gestalt_empathy
						}
					}
				}
				drone_individual_pop_check_trigger = no	#prevents free individuals
			}
		}

		resources = {
			category = planet_tec_gene_recombinators
			produces = {
				society_research = 5
				unity = 2
			}

			inline_script = {
				script = jobs/resources/tec_researcher_gestalt_upkeep
				mult = 1
			}

			inline_script = {
				script = jobs/resources/tec_science_requisition_resources
				consumer_goods = 0
				energy = 3
				mult = 1
			}
		}

		overlord_resources = {
			category = planet_requisitioned_research
			inline_script = {
				script = jobs/resources/tec_science_requisition_overlord_resources
				research = 3
				mult = 1
				PHYSICS = no
				ENGINEERING = no
			}
		}

		inline_script = jobs/effects/type/tec_brain_drone_effect

		# Genetic situation decisions
			triggered_country_modifier = {
				potential = {
					exists = owner
					owner = {
						has_country_flag = tec_gene_recombinator_genemod
					}
				}
				modify_species_cost_mult = -0.01
			}
			triggered_planet_modifier = {
				potential = {
					exists = owner
					owner = {
						has_country_flag = tec_gene_recombinator_growth
					}
				}
				pop_growth_speed = 0.025
				planet_pop_assembly_organic_mult = 0.025
			}
			triggered_planet_modifier = {
				potential = {
					exists = owner
					owner = {
						has_country_flag = tec_gene_recombinator_output
					}
				}
				planet_jobs_organics_produces_mult = 0.025
			}
		# /

		weight = {
			weight = @complex_drone_job_weight
			mult = value:job_weights_research_modifier|JOB|tec_gene_recombinator_drone|

			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
		}

		inline_script = "jobs/automodding_priority_research"
	}
 # /
# /

# --------------- Assimilation Jobs
	tec_spliced = {
		category = tec_integrated
		is_capped_by_modifier = yes
		can_set_priority = no
		contributes_to_diplo_weight = no
		clothes_texture_index = 2
			
		possible = { #deliberately allows slaves!
			species = {
				species_can_be_necrophaged = yes
			}
			owner = {
				always = no
				has_country_flag = tec_can_genesplice
			}
		}

		resources = {
			category = planet_jobs
			upkeep = {
				trigger = {
					is_organic_species = yes
					is_lithoid = no
				}
				food = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					owner = {
						is_regular_empire = yes
					}
				}
				consumer_goods = @living_standard_luxuries_high
			}
			upkeep = {
				trigger = {
					is_robotic_species = yes
				}
				energy = @living_standard_energy_normal
			}
		}
			
		weight = {
			weight = 200 #@special_job_weight

			modifier = {
				factor = 200 # brings @special_job_weight up to 2
				exists = owner
				owner = {
					has_country_flag = tec_can_genesplice
				}
			}

			modifier = {
				factor = 0.001
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}
	}

	tec_composed = {
		category = tec_integrated
		is_capped_by_modifier = yes
		can_set_priority = no
		contributes_to_diplo_weight = no
		clothes_texture_index = 2
			
		possible = { #deliberately allows slaves!
			species = {
				species_can_be_necrophaged = yes
			}
			owner = {
				always = no
				has_country_flag = tec_can_genesplice
			}
		}

		resources = {
			category = planet_jobs
			upkeep = {
				trigger = {
					is_organic_species = yes
					is_lithoid = no
				}
				food = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					owner = {
						is_regular_empire = yes
					}
				}
				consumer_goods = @living_standard_luxuries_high
			}
			upkeep = {
				trigger = {
					is_robotic_species = yes
				}
				energy = @living_standard_energy_normal
			}
		}
			
		weight = {
			weight = 200 #@special_job_weight

			modifier = {
				factor = 200 # brings @special_job_weight up to 2
				exists = owner
				owner = {
					has_country_flag = tec_can_genesplice
				}
			}

			modifier = {
				factor = 0.001
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}
	}

	tec_encased = {
		category = tec_integrated
		is_capped_by_modifier = yes
		can_set_priority = no
		contributes_to_diplo_weight = no
		clothes_texture_index = 2
			
		possible = { #deliberately allows slaves!
			species = {
				species_can_be_necrophaged = yes
			}
			owner = {
				always = no
				has_country_flag = tec_can_genesplice
			}
		}

		resources = {
			category = planet_jobs
			upkeep = {
				trigger = {
					is_organic_species = yes
					is_lithoid = no
				}
				food = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					owner = {
						is_regular_empire = yes
					}
				}
				consumer_goods = @living_standard_luxuries_high
			}
			upkeep = {
				trigger = {
					is_robotic_species = yes
				}
				energy = @living_standard_energy_normal
			}
		}
			
		weight = {
			weight = 200 #@special_job_weight

			modifier = {
				factor = 200 # brings @special_job_weight up to 2
				exists = owner
				owner = {
					has_country_flag = tec_can_genesplice
				}
			}

			modifier = {
				factor = 0.001
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}
	}

	tec_metamorphed = {
		category = tec_integrated
		is_capped_by_modifier = yes
		can_set_priority = no
		contributes_to_diplo_weight = no
		clothes_texture_index = 2
			
		possible = { #deliberately allows slaves!
			species = {
				species_can_be_necrophaged = yes
			}
			owner = {
				always = no
				has_country_flag = tec_can_genesplice
			}
		}

		resources = {
			category = planet_jobs
			upkeep = {
				trigger = {
					is_organic_species = yes
					is_lithoid = no
				}
				food = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = @living_standard_food_normal
			}
			upkeep = {
				trigger = {
					owner = {
						is_regular_empire = yes
					}
				}
				consumer_goods = @living_standard_luxuries_high
			}
			upkeep = {
				trigger = {
					is_robotic_species = yes
				}
				energy = @living_standard_energy_normal
			}
		}
			
		weight = {
			weight = 200 #@special_job_weight

			modifier = {
				factor = 200 # brings @special_job_weight up to 2
				exists = owner
				owner = {
					has_country_flag = tec_can_genesplice
				}
			}

			modifier = {
				factor = 0.001
				planet.controller = {
					tec_control_crisis_country = yes
				}
			}
		}
	}
# /

# ------------ Special worlds ---------------
	# Assembly helpers
	tec_hive_germinator_drone = {					# Hive worlds
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_biohive_spawning_pool_3
		icon = overlord_breeder

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_robot_pop = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait = { cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_pop_assemblers
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 4
				mult = 1
				trigger = ""
			}
		}

		inline_script = {
			script = modifiers/tec_assembly_organic
			trigger = ""
			mult = 0.25
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_carry_cap_add = 5
		}

		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = {
					is_lithoid = no
				}
			}
			planet_jobs_food_produces_mult = 0.05
		}

		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = {
					is_lithoid = yes
				}
			}
			planet_jobs_minerals_produces_mult = 0.05
		}

		weight = {
			weight = @spawner_drone_job_weight
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			modifier = {
				factor = 0.5 # job is less useful if pop control is active, but still gives amenities
				planet = {
					has_modifier = planet_population_control_gestalt
				}
			}
			modifier = {
				factor = 0.01 # crisis purge
				exists = planet
				exists = planet.controller
				planet.controller = {
					OR = {
						is_country_type = swarm
						is_country_type = ai_empire
					}
				}
			}

			# Robots can't get this job
			modifier = {
				factor = 0
				has_trait = trait_mechanical
			}
		}
	}
	# Converters
	tec_biomass_agri_drone = {							# Minerals + energy > food
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_biohive_food_processing_complex

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job

		resources = {
			category = planet_farmers
			produces = {
				food = 8
			}
			upkeep = {
				minerals = 1
				energy = 1
			}

			inline_script = {
				script = jobs/resources/tec_produce_farmer_requisition_resources
				food = @requisitorium_food_reduction
				mult = 1
			}
		}

		overlord_resources = {
			category = planet_requisitioned_food
			inline_script = {
				script = jobs/resources/tec_produce_farmer_requisition_overlord_resources
				food = @requisitorium_food_overlord
				mult = 1
			}
		}

		inline_script = jobs/effects/type/tec_agri_drone_effect

		weight = {
			weight = @simple_drone_job_weight
			mult = value:job_weights_modifier|JOB|agri_drone|RESOURCE|food|
			modifier = {
				factor = 1.2
				has_job = agri_drone
			}
					
			modifier = {
				factor = 0.9
				owner = {
					is_robot_empire = yes
				}
			}
			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			modifier = {
				factor = 0.5
				has_trait = trait_lithoid

				owner = {
					is_lithoid_empire = yes
					has_monthly_income = {
						resource = food
						value >= 0
					}
				}
			}

			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}

			#Prioritize serving species
			modifier = {
				factor = 3
				OR = {
					tec_has_stapled_trait ={ cached = yes }
				}
			}
			
			modifier = {
				factor = 0.9
				NOT = { has_job = agri_drone }
				owner = {
					has_monthly_income = {
						resource = food
						value > 50
					}
				}
			}
			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}

		inline_script = "jobs/automodding_priority_food"
	}
	tec_biomass_mining_drone = {						# food + energy > minerals
		category = simple_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_biohive_mineral_purification_hub

		possible_pre_triggers = {
			has_owner = yes
			#is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job

		resources = {
			category = planet_miners
			produces = {
				minerals = 6
			}
			upkeep = {
				energy = 2
			}

			inline_script = {
				script = jobs/resources/tec_material_miner_requisition_resources
				minerals = @requisitorium_minerals_reduction
				mult = 1
			}
		}

		overlord_resources = {
			category = planet_requisitioned_minerals
			inline_script = {
				script = jobs/resources/tec_material_miner_requisition_overlord_resources
				minerals = @requisitorium_minerals_overlord
				mult = 1
			}
		}

		inline_script = jobs/effects/type/tec_mining_drone_effect

		weight = {
			weight = @simple_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_biomass_mining_drone|RESOURCE|minerals|
			modifier = {
				factor = 1.2
				has_job = tec_biomass_mining_drone
			}

			modifier = {
				factor = 1.1
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			# Crafted pops modifier
			modifier = {
				factor = 2
				tec_is_crafted_sentient_pop = yes
			}
			modifier = {
				factor = 200
				tec_is_crafted_nonsapient_pop = yes
			}

			#Prioritize serving species
			modifier = {
				factor = 3
				OR = {
					tec_has_stapled_trait ={ cached = yes }
				}
			}

			# low income modifier
			modifier = {
				factor = 1.1

				owner = {
					has_monthly_income = {
						resource = minerals
						value < 30
					}
				}
			}

			modifier = {
				factor = 2 # encourage free individuals to work these so normal drones become unemployed for higher strata
				is_pop_category = tec_free_agent
			}
		}

		inline_script = "jobs/automodding_priority_minerals"
	}
# /

# --------------- Unused / Discarded
	tec_development_drone = {
		icon = evaluator
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_tec_cyberhive_capital

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_administrators
			produces = {
				unity = 4
			}
			upkeep = {
				trigger = {
					is_lithoid = no
					is_robot_pop = no
				}
				food = 1
				energy = 2
			}
			upkeep = {
				trigger = {
					is_lithoid = yes
				}
				minerals = 1
				energy = 2
			}
			upkeep = {
				trigger = {
					is_robot_pop = yes
				}
				energy = 3
			}
		}

		triggered_country_modifier = {
			potential = {
				always = yes
			}
			country_edict_fund_add = 2
			mult = value:job_total_output_modifier|JOB|bureaucrat|RESOURCE|unity|
		}

		weight = {
			weight = @synapse_drone_job_weight
			mult = value:job_weights_modifier|JOB|tec_development_drone|RESOURCE|unity|
			mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}

	tec_nanite_researcher_drone = {
		icon = tec_nanite_researcher
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_research_lab_1

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}

		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_researchers
			produces = {
				physics_research = 4
				engineering_research = 4
				society_research = 4
				nanites = 0.5
			}
			upkeep = {
				minerals = 6
			}
		}

		inline_script = jobs/effects/type/tec_brain_drone_effect
		inline_script = jobs/effects/type/tec_calculator_effect

		weight = {
			weight = @complex_drone_job_weight
			mult = value:job_weights_research_modifier|JOB|brain_drone|
			factor = 1.5
			modifier = {
				factor = 1.5
				has_job = tec_nanite_researcher_drone
			}
			

			# Living standard weight
			modifier = {
				factor = 0.9
				exists = owner
				years_passed < 1
				owner = { has_valid_civic = civic_machine_assimilator }
				tec_is_cyborg_species = yes
			}

			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}

	tec_nurturer_drone = {
		category = complex_drone
		condition_string = DRONE_JOB_TRIGGER
		building_icon = building_maintenance_depot

		possible_pre_triggers = {
			has_owner = yes
			is_enslaved = no
			is_being_purged = no
			is_being_assimilated = no
			is_sapient = yes
		}
		
		possible_precalc = can_fill_drone_job
		possible = {
			NOT = { tec_has_stapled_trait ={ cached = yes } }
			drone_individual_pop_check_trigger = no	#prevents free individuals
		}

		resources = {
			category = planet_maintenancedrones
			produces = {
				trigger = {
					exists = owner
					owner = { tec_is_bioarch_empire = yes }
				}
				food = 1
			}
		}

		triggered_planet_modifier = {
			potential = {
				always = yes
			}
			planet_amenities_no_happiness_add = 10
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		triggered_planet_modifier = {
			potential = {
				exists = planet.orbital_defence
				planet.orbital_defence = {
					exists = starbase
					starbase = {
						has_starbase_building = ring_maintenance_hub
					}
				}
			}
			planet_amenities_no_happiness_add = 1
			mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
		}

		weight = {
			weight = 1
			
			# Robots can't get this job, unless droid
			modifier = {
				factor = 0
				tec_is_non_advanced_robot = yes
			}
		}
	}
# /
