
# ETHIC TRIGGERS
# ---------------------------------------------------
is_socialism = {
	OR = {
		has_ethic = ethic_fanatic_socialism
		has_ethic = ethic_socialism
		
		has_ethic = @ethic_cooperative
		has_ethic = @ethic_fanatic_cooperative
	}
}

is_capitalism = {
	OR = {
		has_ethic = ethic_fanatic_capitalism
		has_ethic = ethic_capitalism
		
		has_ethic = @ethic_competitive
		has_ethic = @ethic_fanatic_competitive
	}
}

is_ecologist = {
	OR = {
		has_ethic = ethic_fanatic_green
		has_ethic = ethic_green

		has_ethic = @ethic_ecocentric
		has_ethic = @ethic_fanatic_ecocentric
	}
}

is_industrialist = {
	OR = {
		has_ethic = ethic_fanatic_industrial
		has_ethic = ethic_industrial
		
		has_ethic = @ethic_anthropocentric
		has_ethic = @ethic_fanatic_anthropocentric
	}
}

is_elitist = {
	OR = {
		has_ethic = ethic_fanatic_elitist 
		has_ethic = ethic_elitist 
	}
}

is_pluralist = {
	OR = {
		has_ethic = ethic_fanatic_pluralist 
		has_ethic = ethic_pluralist 
	}
}


# CIVIC TRIGGERS
# ---------------------------------------------------
tec_has_special_ruler_feature = {
	# NOTE: USE ONLY FOR PLANETS!!!! NOT OTHER SCRIPTS
	#OR = {
		tec_has_toxic_knights_feature = yes
		#AND = {
		#	has_planet_flag = 
		#}
	#}
}

tec_has_toxic_knights_feature = {
	AND = {
		has_planet_flag = toxic_knights_habitat
		owner = {
			has_origin = origin_toxic_knights
		}
	}
}

tec_has_ruler_civic = {
	OR = {
		tec_has_ruler_civic_regular = yes
		tec_has_ruler_civic_mega = yes
	}
}

tec_has_ruler_civic_regular = {
	OR = {
		has_valid_civic = civic_exalted_priesthood 
		has_valid_civic = civic_aristocratic_elite
		has_valid_civic = civic_merchant_guilds
		has_valid_civic = civic_technocracy
		has_valid_civic = civic_tec_stratocracy
		has_valid_civic = civic_tec_archivist
		has_valid_civic = civic_tec_irenic_bureaucracy
		has_valid_civic = civic_tec_occultist
		has_valid_civic = civic_tec_inventinkers
		has_valid_civic = civic_tec_science_directorate
		has_valid_civic = civic_tec_overseers
		has_valid_civic = civic_tec_procurators
		has_valid_civic = civic_tec_inquisitors	
		has_valid_civic = civic_tec_diplomats
		has_valid_civic = civic_tec_socialguards
		has_valid_civic = civic_tec_senators

		# LIST ---------------------------------
		# materialist
		# has_valid_civic = civic_technocracy
		# has_valid_civic = civic_tec_science_directorate
		# has_valid_civic = civic_tec_archivist
		# spiritualist
		# has_valid_civic = civic_exalted_priesthood
		# has_valid_civic = civic_tec_occultist
		# has_valid_civic = civic_tec_zealots
		# has_valid_civic = civic_tec_cosmocult
		
		# Industrial
		# has_valid_civic = civic_tec_inventinkers
		# has_valid_civic = civic_tec_
		# Ecologist
		# has_valid_civic = civic_tec_gardeners
		# has_valid_civic = civic_tec_

		# Egalitarian
		# has_valid_civic = civic_tec_procurators
		# has_valid_civic = civic_tec_
		# Elitist
		# has_valid_civic = civic_aristocratic_elite
		# has_valid_civic = civic_tec_

		# Cooperative
		# has_valid_civic = civic_tec_cooperators
		# has_valid_civic = civic_tec_
		# Competitive
		# has_valid_civic = civic_merchant_guilds
		# has_valid_civic = civic_tec_

		# Xenophile
		# has_valid_civic = civic_tec_diplomats
		# has_valid_civic = civic_tec_xenohosters
		# Xenophobe
		# has_valid_civic = civic_tec_inquisition
		# has_valid_civic = civic_tec_xenohunters

		# Authoritarian
		# has_valid_civic = civic_tec_overseers
		# Liberal
		# has_valid_civic = civic_tec_

		# Militarist
		# has_valid_civic = civic_tec_stratocracy
		# has_valid_civic = civic_tec_
		# Pacifist
		# has_valid_civic = civic_tec_irenic_bureaucracy
		# has_valid_civic = civic_tec_peacenforcers
		# has_valid_civic = civic_tec_
	}
}

tec_has_ruler_civic_mega = {
	OR = {
		has_valid_civic = civic_tec_corporate_patentscorp
		has_valid_civic = civic_tec_corporate_megabank
		has_valid_civic = civic_tec_corporate_exploiters
		has_valid_civic = civic_tec_corporate_megareclamators
		has_valid_civic = civic_tec_corpo_parabellum
		has_valid_civic = civic_tec_corporate_inventcorp
		has_valid_civic = civic_tec_corporate_overseers
		#has_valid_civic = civic_tec_corporate_diplomats
		has_valid_civic = civic_tec_corporate_procurators
	}
}

tec_has_ruler_civic_hive = {				# Rulers = brood drones or whatever
	OR = {
		has_valid_civic = civic_tec_hive_eusocial
		has_valid_civic = civic_tec_hive_overminds
		has_valid_civic = civic_tec_hive_zealots
		# Specific for cyberhives
		has_valid_civic = civic_tec_hive_cyberclusters
		# Specific for biohives
		has_valid_civic = civic_tec_hive_bioshapers
	}
}

tec_has_maintenance_swap_civic_hive = {	# poor maintenance drones
	OR = {
		has_valid_civic = civic_tec_hive_necrophage
		#has_valid_civic = civic_tec_hive_x

	}
}

tec_has_ruler_civic_machine = {
	OR = {
		has_valid_civic = civic_tec_machine_prime
		has_valid_civic = civic_tec_machine_hypercluster
		#has_valid_civic = civic_tec_machine_reimaginators	# Exception
		has_valid_civic = civic_tec_machine_debuggers
		has_valid_civic = civic_tec_machine_warform
		has_valid_civic = civic_tec_machine_performance
	}
}

# Spiritualist cults
tec_is_spiritualist_main_cult = {			# Replaces priest building
	OR = {
		tec_is_death_cult = yes
		tec_is_machine_cult = yes
		tec_is_paperwork_cult = yes
		tec_is_atom_cult = yes
		tec_is_paranormal_cult = yes
	}
}

tec_is_spiritualist_secondary_cult = {		# Replaces priests or alike
	OR = {
		tec_is_occult_cult = yes
		tec_is_starseeker_cult = yes
		tec_is_cycle_cult = yes
		tec_is_wealth_cult = yes
		tec_is_butlerian_cult = yes
	}
}

tec_is_death_cult = {
	is_death_cult_empire = yes
}

tec_is_machine_cult = {
	OR = {
		has_valid_civic = civic_tec_machine_cult
		#has_valid_civic = civic_tec_corporate_machine_cult
	}
}

tec_is_occult_cult = {
	OR = {
		has_valid_civic = civic_tec_occultist
		#has_valid_civic = civic_tec_corporate_occultist
	}
}

tec_is_paperwork_cult = {
	always = no
	OR = {
		has_valid_civic = civic_tec_paperwork_cult
		has_valid_civic = civic_tec_corporate_paperwork_cult
	}
}

tec_is_starseeker_cult = {
	always = no
	OR = {
		has_valid_civic = civic_tec_starseeker_cult
		has_valid_civic = civic_tec_corporate_starseeker_cult
	}
}

tec_is_atom_cult = {
	always = no
	OR = {
		has_valid_civic = civic_tec_atom_cult
		has_valid_civic = civic_tec_corporate_atom_cult
	}
}

tec_is_cycle_cult = {
	always = no
	OR = {
		has_valid_civic = civic_tec_cycle_cult
		has_valid_civic = civic_tec_corporate_cycle_cult
	}
}

tec_is_wealth_cult = {
	always = no
	OR = {
		has_valid_civic = civic_tec_wealth_cult
		has_valid_civic = civic_tec_corporate_wealth_cult
	}
}

tec_is_paranormal_cult = {
	always = no
	OR = {
		has_valid_civic = civic_tec_paranormal_cult
		has_valid_civic = civic_tec_corporate_paranormal_cult
	}
}

tec_is_butlerian_cult = {
	always = no
	OR = {
		has_valid_civic = civic_tec_butlerian_cult
		has_valid_civic = civic_tec_corporate_butlerian_cult
	}
}

# Researcher replace
tec_is_special_researcher_empire = {		# Replaces research building
	OR = {
		tec_is_psychohistorian_researcher_empire = yes
		tec_is_technomancer_researcher_empire = yes
		tec_is_starseeker_researcher_empire = yes
		tec_is_psi_researcher_empire = yes		# Note = psi = paranormal
		tec_is_bio_researcher_empire = yes
		tec_is_mecha_researcher_empire = yes
	}
}

tec_replaces_half_researcher_empire = {		# Replaces half researchers
	OR = {
		tec_is_labrat_researcher_empire = yes
		tec_is_diversifier_researcher_empire = yes
		tec_is_singularity_researcher_empire = yes
	}
}

tec_is_psychohistorian_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_historians
		has_valid_civic = civic_tec_corporate_historians
	}
}

tec_is_technomancer_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_technomancer
		has_valid_civic = civic_tec_corporate_technomancer
	}
}

tec_is_starseeker_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_starseekers
		has_valid_civic = civic_tec_corporate_starseekers
	}
}

tec_is_psi_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_psi_researchers
		has_valid_civic = civic_tec_corporate_psi_researchers
	}
}

tec_is_bio_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_bio_researchers
		has_valid_civic = civic_tec_corporate_bio_researchers
	}
}

tec_is_mecha_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_mecha_researchers
		has_valid_civic = civic_tec_corporate_mecha_researchers
	}
}

tec_is_labrat_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_labrats
		has_valid_civic = civic_tec_corporate_labrats
	}
}

tec_is_diversifier_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_diversifier
		has_valid_civic = civic_tec_corporate_diversifier
	}
}

tec_is_astrologer_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_astrologers
		has_valid_civic = civic_tec_corporate_astrologers
	}
}

tec_is_singularity_researcher_empire = {
	OR = {
		has_valid_civic = civic_tec_singularity_researchers
		has_valid_civic = civic_tec_corporate_singularity_researchers
	}
}

#Regular empire triggers
tec_is_default_country = {
	OR = {
		is_country_type = default
		#is_country_type = prikki
		# From evolved
		is_country_type = default_exocolonist
		is_country_type = default_exocolonist_ai
		# /

		# Acot/zofe/acofe/zofacot/whatever lol (don't know how may fallen empire cache branches are but uh)
		AND = {
			has_global_flag = zofe_activated
			is_zofe_compatible = yes
		}
	}
}

tec_is_robot_lover_spiritualist = {
	OR = {
		has_valid_civic = civic_tec_machine_cult
		has_valid_civic = civic_tec_occultist
		has_origin = origin_mechanists
		has_country_flag = synthetic_empire
	}
}

tec_is_robot_lover = {
	OR = {
		has_origin = origin_mechanists
		has_country_flag = synthetic_empire
		has_origin = origin_tec_robosapiens
	}
}

tec_is_synthetic_empire = {
	OR = {
		has_country_flag = synthetic_empire
		has_origin = origin_tec_slavetothesystem
		has_origin = origin_tec_robosapiens
	}
}

tec_is_synthetic_controlled_empire = {
	OR = {
		has_country_flag = synthetic_empire
		has_origin = origin_tec_slavetothesystem
		has_origin = origin_tec_robosapiens
		has_authority = auth_tec_ai
		has_authority = auth_tec_ai_corporate
	}
}

tec_is_aiauth_empire = {
	OR = {
		has_authority = auth_tec_ai
		has_authority = auth_tec_ai_corporate
	}
}


tec_is_communist = {
	OR = {
		has_valid_civic = civic_shared_burden
		has_valid_civic = civic_tec_corporate_comunistcorp
	}
}

tec_is_criminal_corp = {
	OR = {
		has_valid_civic = civic_criminal_heritage
	}
}

tec_adds_buildings_from_industrial_district = {	# Adds building slots from industrial
	OR = {
		is_crafter_empire = yes
	}
}

tec_is_aquatic_empire = {	# Swaps certain districts
	OR = {
		has_valid_civic = civic_anglers
		has_valid_civic = civic_corporate_anglers
		has_valid_civic = civic_tec_hive_anglers
		has_valid_civic = civic_tec_machine_anglers
		has_country_flag = tec_test_aquatic_empire
	}
}
# for planets see tec_is_wet_planet_exceptions

tec_is_bioarch_empire = {	# Swaps certain costs
	OR = {
		has_valid_civic = civic_tec_hive_organicarch
		#has_valid_civic = civic_tec_gardeners
		#has_valid_civic = civic_tec_corporate_gardeners
		has_country_flag = tec_test_bioarch_empire
	}
}


tec_is_cyberarch_empire = {
	OR = {
		has_valid_civic = civic_tec_machine_digitalization
		has_country_flag = tec_test_cyberarch_empire
	}
}

tec_is_megacity_empire = {	# Swaps certain districts and etc
	OR = {
		#has_valid_civic = civic_tec_megacities
		#has_valid_civic = civic_tec_corporate_megacities
		#has_valid_civic = civic_tec_hive_megacities
		#has_valid_civic = civic_tec_hive_megacities_organic
		#has_valid_civic = civic_tec_machine_megacities
		has_country_flag = tec_test_megacity_empire
	}
}

tec_is_pompous_empire = {	# Contacts
	OR = {
		has_valid_civic = civic_pompous_purists
		has_valid_civic = civic_tec_corporate_pompous
		has_valid_civic = civic_tec_hive_pompous
		has_valid_civic = civic_tec_machine_pompous
	}
}

tec_is_reanimator_empire = {	# Brainz
	OR = {
		has_valid_civic = civic_reanimated_armies
		has_valid_civic = civic_tec_corporate_reanimators
	}
}

tec_is_zombie_empire = {	# Brainz
	OR = {
		has_valid_civic = civic_permanent_employment
		#has_valid_civic = civic_tec_zombies
		#has_valid_civic = civic_tec_hive_zombies
		#has_valid_civic = civic_tec_machine_zombies
	}
}

tec_is_memorialist_empire = {	# Sanctuaries of repose
	OR = {
		is_memorialist_empire = yes
		has_valid_civic = civic_tec_corporate_memorialist
	}
}

tec_is_engineer_empire = {	# Soft reengineering mechanic
	OR = {
		has_valid_civic = civic_tec_master_engineers
		has_valid_civic = civic_tec_corporate_engineers
		has_valid_civic = civic_tec_hive_engineers
		has_valid_civic = civic_tec_machine_engineers
	}
}

tec_is_automated_empire = {	# Automatic empire production but reduces available jobs
	OR = {
		# Mechanist origin - usable by regular, mega and hive
		has_valid_civic = civic_tec_mecha_automation
		# Machine automatization
		#has_valid_civic = civic_tec_machine_automation
		is_machine_empire = yes
		# test
		has_country_flag = tec_test_automation
	}
}

tec_is_wastelander_empire = {	# Scraps!
	OR = {
		# Postapoc and remnants
		has_valid_civic = civic_tec_wastelander
		has_valid_civic = civic_tec_wastelander_hive
		has_valid_civic = civic_tec_wastelander_machine
	}
}

# Other civic qol things
tec_is_agrarian_idyll_empire = {	# Agrarian Idyll
	OR = {
		has_valid_civic = civic_agrarian_idyll
	}
}

tec_is_idyllic_bloom_empire = {
	OR = {
		has_valid_civic = civic_idyllic_bloom
		has_valid_civic = civic_hive_idyllic_bloom
	}
}

tec_is_quantum_alloys_empire = {	# Agrarian Idyll
	OR = {
		has_valid_civic = civic_tec_quantum_alloys
		has_valid_civic = civic_tec_corporate_quantum_alloys
		has_valid_civic = civic_tec_hive_quantum_alloys
		has_valid_civic = civic_tec_machine_quantum_alloys
	}
}


tec_waives_starbase_module_upkeep = {	# self descriptive
	OR = {
		has_valid_civic = civic_tec_machine_engineers
	}
}

tec_increases_starbase_module_production = {	# self descriptive
	OR = {
		has_valid_civic = civic_tec_hive_engineers
		has_valid_civic = civic_tec_computerized_extraction
	}
}

tec_district_generate_basic_resources = {	# self descriptive
	OR = {
		has_valid_civic = civic_tec_computerized_extraction
	}
}

tec_gains_influence_with_tech_or_traditions = {	# self descriptive
	OR = {
		has_valid_civic = civic_tec_hive_pompous
	}
}

tec_gains_influence_with_tech_or_traditions = {	# self descriptive
	OR = {
		has_valid_civic = civic_tec_hive_pompous
	}
}


# leader civic triggers
tec_produces_unity_from_leaders = {		# Unity from ALL leaders
	always = no
}

tec_removes_unity_upkeep_from_all_leaders = {		# Upkeep from ALL leaders
	OR = {
		has_valid_civic = civic_feudal_realm
	}
}

tec_add_cg_upkeep_to_leaders = {
	is_idle = no
	exists = owner
	owner = {
		is_regular_empire = yes
	}
	switch = {
		trigger = leader_class
		governor = {
			owner = {
				OR = {
					tec_produces_unity_from_governors = yes
					tec_produces_research_from_governors = yes
				}
			}
		}
		scientist = {
			owner = {
				OR = {
					tec_produces_unity_from_scientists = yes
					tec_produces_research_from_scientists = yes
				}
			}
		}
		admiral = {
			owner = {
				OR = {
					tec_produces_unity_from_admirals = yes
				}
			}
		}
		general = {
			owner = {
				tec_produces_unity_from_generals = yes
			}
		}
		default = {
			always = no
		}
	}
}

tec_add_energy_upkeep_to_leaders = {
	is_idle = no
	exists = owner
	owner = {
		is_regular_empire = no
		is_lithoid_empire = no
		OR = {
			tec_is_cyberhive = yes
			is_machine_empire = yes
		}
	}
	switch = {
		trigger = leader_class
		governor = {
			owner = {
				OR = {
					tec_produces_unity_from_governors = yes
					tec_produces_research_from_governors = yes
				}
			}
		}
		scientist = {
			owner = {
				OR = {
					tec_produces_unity_from_scientists = yes
					tec_produces_research_from_scientists = yes
				}
			}
		}
		admiral = {
			owner = {
				OR = {
					tec_produces_unity_from_admirals = yes
				}
			}
		}
		general = {
			owner = {
				tec_produces_unity_from_generals = yes
			}
		}
		default = {
			always = no
		}
	}
}
tec_add_minerals_upkeep_to_leaders = {
	is_idle = no
	exists = owner
	owner = {
		is_regular_empire = no
		is_lithoid_empire = yes
		is_machine_empire = no
		tec_is_cyberhive = no
	}
	switch = {
		trigger = leader_class
		governor = {
			owner = {
				OR = {
					tec_produces_unity_from_governors = yes
					tec_produces_research_from_governors = yes
				}
			}
		}
		scientist = {
			owner = {
				OR = {
					tec_produces_unity_from_scientists = yes
					tec_produces_research_from_scientists = yes
				}
			}
		}
		admiral = {
			owner = {
				OR = {
					tec_produces_unity_from_admirals = yes
				}
			}
		}
		general = {
			owner = {
				tec_produces_unity_from_generals = yes
			}
		}
		default = {
			always = no
		}
	}
}
tec_add_food_upkeep_to_leaders = {
	is_idle = no
	exists = owner
	owner = {
		is_regular_empire = no
		is_lithoid_empire = no
		is_machine_empire = no
		tec_is_cyberhive = no
	}
	switch = {
		trigger = leader_class
		governor = {
			owner = {
				OR = {
					tec_produces_unity_from_governors = yes
					tec_produces_research_from_governors = yes
				}
			}
		}
		scientist = {
			owner = {
				OR = {
					tec_produces_unity_from_scientists = yes
					tec_produces_research_from_scientists = yes
				}
			}
		}
		admiral = {
			owner = {
				OR = {
					tec_produces_unity_from_admirals = yes
				}
			}
		}
		general = {
			owner = {
				tec_produces_unity_from_generals = yes
			}
		}
		default = {
			always = no
		}
	}
}

# Governors
tec_removes_unity_upkeep_from_governors = {
	OR = {
		has_valid_civic = civic_feudal_realm
		has_valid_civic = civic_tec_executive_committee
		has_valid_civic = civic_tec_divine_circle

		has_valid_civic = civic_tec_corporate_flagshipbureau

		has_valid_civic = civic_hive_divided_attention
		has_valid_civic = civic_tec_hive_myoneural
	}
}

tec_produces_energy_from_governors = {
	always = no
}
tec_produces_unity_from_governors = {
	OR = {
		has_valid_civic = civic_tec_executive_committee
		has_valid_civic = civic_tec_divine_circle
		has_valid_civic = civic_tec_corporate_flagshipbureau

		has_valid_civic = civic_hive_divided_attention
	}
}
tec_produces_research_from_governors = {
	has_valid_civic = civic_tec_hive_myoneural
}

# Scientists
tec_is_head_researcher = {
	OR = {
		is_researching_area = physics
		is_researching_area = society
		is_researching_area = engineering
	}
}

tec_removes_unity_upkeep_from_scientists = {
	OR = {
		has_valid_civic = civic_feudal_realm
		has_valid_civic = civic_tec_research_council
		has_valid_civic = civic_tec_scientific_belief

		has_valid_civic = civic_tec_corporate_researchbureau
		has_valid_civic = civic_tec_corporate_innovative

		has_valid_civic = civic_tec_hive_anaxiomatic
	}
}

tec_produces_energy_from_scientists = {
	always = no
}

tec_produces_unity_from_scientists = {
	always = no
}
tec_produces_scaled_unity_from_scientists = {
	OR = {
		has_valid_civic = civic_tec_scientific_belief
		has_valid_civic = civic_tec_corporate_innovative	
		has_valid_civic = civic_tec_hive_anaxiomatic
	}
}

tec_produces_research_from_scientists = {
	always = no
}
tec_produces_scaled_research_from_scientists = {
	OR = {
		has_valid_civic = civic_tec_research_council
		has_valid_civic = civic_tec_corporate_researchbureau	
		has_valid_civic = civic_tec_hive_anaxiomatic
	}
}

# Admirals
tec_removes_unity_upkeep_from_admirals = {
	OR = {
		has_valid_civic = civic_feudal_realm
		has_valid_civic = civic_tec_military_council

		has_valid_civic = civic_tec_corporate_militarybureau

		has_valid_civic = civic_tec_hive_percussive
	}
}

tec_produces_energy_from_admirals = {
	OR = {
		always = no
	}
}

tec_produces_unity_from_admirals = {
	always = no
}
tec_produces_scaled_unity_from_admirals = {
	OR = {
		has_valid_civic = civic_tec_military_council
		has_valid_civic = civic_tec_corporate_militarybureau

		has_valid_civic = civic_tec_corporate_militarybureau

		has_valid_civic = civic_tec_hive_percussive
	}
}

tec_produces_research_from_admirals = {
	always = no
}
tec_produces_scaled_research_from_admirals = {
	always = no
}

# Generals
tec_removes_unity_upkeep_from_generals = {
	OR = {
		has_valid_civic = civic_feudal_realm
		has_valid_civic = civic_tec_military_council
		has_valid_civic = civic_tec_corporate_militarybureau
	}
}
tec_produces_unity_from_generals = {
	OR = {
		always = no	# Exploity 
	}
}


tec_provides_1_level_leaders = {		# Leader levels
	always = no
}
tec_provides_2_level_leaders = {
	always = no
}

tec_provides_2_level_governors = {
	always = no
}
tec_provides_2_level_scientists = {
	always = no
}
tec_provides_2_level_admirals = {
	always = no
}
tec_provides_2_level_generals = {
	always = no
}



# AI auth triggers
tec_aiauth_empire = {	# self descriptive
	OR = {
		has_authority = auth_tec_ai
		has_authority = auth_tec_ai_corporate
		has_country_flag = tec_test_aiauth
	}
}

tec_aiauth_swaps_all_leaders = {	# self descriptive
	OR = {
		#has_valid_civic = civic_tec_ai_leaders
		has_country_flag = tec_test_aiauth_all_leaders
		has_country_flag = tec_test_aiauth
	}
}

tec_aiauth_swaps_leader_governors = {	# self descriptive
	OR = {
		#has_valid_civic = civic_tec_ai_leaders
		has_country_flag = tec_test_aiauth_swaps_governors
	}
}

tec_aiauth_swaps_leader_researchers = {	# self descriptive
	OR = {
		#has_valid_civic = civic_tec_ai_leaders
		has_country_flag = tec_test_aiauth_swaps_researchers
	}
}

tec_aiauth_swaps_leaders_militars = {	# self descriptive
	OR = {
		#has_valid_civic = civic_tec_ai_leaders
		has_country_flag = tec_test_aiauth_swaps_militars
	}
}

#Organic hives cant get robots
tec_hive_can_have_spawningpools = {
	is_hive_empire = yes
	NOR = {
		tec_is_cyberhive = yes
		has_valid_civic = civic_tec_hive_eusocial
	}
}

tec_is_biomorph = {
	is_hive_empire = yes
	OR = {
		has_origin = origin_tec_hive_biomorph
	}
}

tec_is_biohive = {
	has_authority = auth_tec_hive_biological
}

tec_is_cyberhive = {
	OR = {
		has_authority = auth_tec_hive_cybernetic
		has_civic = civic_tec_hive_cybernetic
	}
}

tec_is_regular_hive = {
	is_hive_empire = yes
	tec_is_biohive = no
	tec_is_cyberhive = no
}

tec_is_radical_hive = { # total war
	OR = {
		has_valid_civic = civic_hive_devouring_swarm
		has_valid_civic = civic_tec_hive_cyberhorror
	}
}

tec_is_servitor_hive = {
	has_valid_civic = civic_tec_hive_servitor
}

tec_is_servitor_gestalt = {
	OR = {
		has_valid_civic = civic_machine_servitor
		has_valid_civic = civic_tec_hive_servitor
	}
}

tec_is_organic_machine_empire = {
	OR = {
		has_valid_civic = civic_machine_assimilator
		has_valid_civic = civic_machine_servitor
	}
}

tec_is_parasite_hivemind = {
	OR = {
		has_valid_civic = civic_tec_hive_parasitic
		has_valid_civic = civic_tec_hive_parasitic_cyborg
	}
}

tec_is_symbiotic_hivemind = {
	OR = {
		has_valid_civic = civic_tec_hive_symbiotic
	#	has_valid_civic = civic_tec_hive_symbiotic_cyborg
	}
}

tec_is_symbiotic_machine = {
	OR = {
		has_valid_civic = civic_tec_machine_cooperators
	}
}

tec_is_trade_gestalt = {
	OR = {
		has_valid_civic = civic_tec_machine_traders
	}
}

tec_is_parasite_machine = {
	OR = {
		has_valid_civic = civic_tec_machine_hacker
	}
}

# Playstyle
tec_is_scifi_empire = {	# this is for the future
	always = no
	# has_valid_civic = civic_tec_scifi_empire
}

tec_is_old_machine = {	# this is for the future
	always = no
	# has_origin = x
}

tec_is_special_hive = {
	OR = {
		has_valid_civic = civic_tec_hive_eusocial
	}
}

tec_is_special_machine = {
	OR = {
		has_valid_civic = civic_machine_servitor
		has_valid_civic = civic_machine_assimilator
		has_valid_civic = civic_tec_machine_promethean
	}
}

tec_is_playstyle_gestalt = {
	OR = {
		has_valid_civic = civic_machine_assimilator
		has_valid_civic = civic_machine_servitor
		has_valid_civic = civic_machine_terminator

		has_valid_civic = civic_hive_devouring_swarm
	}
}

tec_is_organic_coexist_machine = {
	OR = {
		has_valid_civic = civic_machine_servitor
		#has_valid_civic = civic_tec_machine_mutualists
	}
}

# Other
tec_uses_food_buildings = {
	OR = {
		# Biomorphs
		has_origin = origin_tec_hive_biomorph
		# Others
		tec_is_bioarch_empire = yes
	}
}

tec_uses_energy_buildings = {
	OR = {
		has_valid_civic = civic_tec_machine_digitalization
		# Others
	}
}

tec_uses_food_buildings_smol = {	# for organic techs/secondary ascension path
	OR = {
		always = no
	}
}

# FEATURE TRIGGERS
# ---------------------------------------------------
tec_has_improved_designations = {	# Planet ap path
	OR = {
		always = no
	}
}

tec_has_statecraft_planet_designations = {	# Statecraft
	OR = {
		always = no
	}
}

# T R A D I T I O N S
# -------------- MERGERS ----------------
tec_can_adopt_outreach = {
	OR = {
		has_tradition = tr_expansion_finish
	}
}

tec_can_adopt_control = {
	OR = {
		has_tradition = tr_domination_finish
		has_tradition = tr_subterfuge_finish
	}
}

tec_can_adopt_artifice = {
	OR = {
		has_tradition = tr_prosperity_finish
		has_tradition = tr_mercantile_finish
	}
}

tec_can_adopt_balance = {
	OR = {
		has_tradition = tr_harmony_finish
		has_tradition = tr_synchronicity_finish
	}
}

tec_can_adopt_might = {
	OR = {
		has_tradition = tr_supremacy_finish
		has_tradition = tr_unyielding_finish
	}
}

tec_can_adopt_statecraft = {
	OR = {
		has_tradition = tr_diplomacy_finish
		has_tradition = tr_versatility_finish
		has_tradition = tr_adaptability_finish
	}
}

tec_can_adopt_invention = {
	OR = {
		has_tradition = tr_discovery_finish
	}
}



tec_has_outreach_traditions = {
	has_tradition = tr_tec_outreach_adopt
}
tec_has_outreach_traditions_finished = {
	has_tradition = tr_tec_outreach_finish
}

tec_has_control_traditions = {
	has_tradition = tr_tec_control_adopt
}
tec_has_control_traditions_finished = {
	has_tradition = tr_tec_control_finish
}

tec_has_artifice_traditions = {
	has_tradition = tr_tec_artifice_adopt
}
tec_has_artifice_traditions_finished = {
	has_tradition = tr_tec_artifice_finish
}

tec_has_balance_traditions = {
	has_tradition = tr_tec_balance_adopt
}
tec_has_balance_traditions_finished = {
	has_tradition = tr_tec_balance_finish
}

tec_has_might_traditions = {
	has_tradition = tr_tec_might_adopt
}
tec_has_might_traditions_finished = {
	has_tradition = tr_tec_might_finish
}

tec_has_statecraft_traditions = {
	has_tradition = tr_tec_statecraft_adopt
}
tec_has_statecraft_traditions_finished = {
	has_tradition = tr_tec_statecraft_finish
}

tec_has_invention_traditions = {
	has_tradition = tr_tec_invention_adopt
}
tec_has_invention_traditions_finished = {
	has_tradition = tr_tec_invention_finish
}

tec_has_governance_traditions = {
	always = no
}
tec_has_governance_traditions_finished = {
	always = no
}

tec_has_megalomania_traditions = {
	always = no
}
tec_has_megalomania_traditions_finished = {
	always = no
}

	# and these for vanilla
tec_has_expansion_traditions = {
	has_tradition = tr_expansion_adopt
}
tec_has_expansion_traditions_finished = {
	has_tradition = tr_expansion_finish
}

tec_has_domination_traditions = {
	has_tradition = tr_domination_adopt
}
tec_has_domination_traditions_finished = {
	has_tradition = tr_domination_finish
}

tec_has_subterfuge_traditions = {
	has_tradition = tr_subterfuge_adopt
}
tec_has_subterfuge_traditions_finished = {
	has_tradition = tr_subterfuge_finish
}

tec_has_prosperity_traditions = {
	has_tradition = tr_prosperity_adopt
}
tec_has_prosperity_traditions_finished = {
	has_tradition = tr_prosperity_finish
}

tec_has_mercantile_traditions = {
	has_tradition = tr_mercantile_adopt
}
tec_has_mercantile_traditions_finished = {
	has_tradition = tr_mercantile_finish
}

tec_has_harmony_traditions = {
	OR = {
		has_tradition = tr_harmony_adopt
		has_tradition = tr_synchronicity_adopt
	}
}
tec_has_harmony_traditions_finished = {
	OR = {
		has_tradition = tr_harmony_finish
		has_tradition = tr_synchronicity_finish
	}
}

tec_has_supremacy_traditions = {
	has_tradition = tr_supremacy_adopt
}
tec_has_supremacy_traditions_finished = {
	has_tradition = tr_supremacy_finish
}

tec_has_unyielding_traditions = {
	has_tradition = tr_unyielding_adopt
}
tec_has_unyielding_traditions_finished = {
	has_tradition = tr_unyielding_finish
}

tec_has_diplomacy_traditions = {
	OR = {
		has_tradition = tr_diplomacy_adopt
		has_tradition = tr_adaptability_adopt
	}
}
tec_has_diplomacy_traditions_finished = {
	OR = {
		has_tradition = tr_diplomacy_finish
		has_tradition = tr_adaptability_finish
	}
}

tec_has_discovery_traditions = {
	has_tradition = tr_discovery_adopt
}
tec_has_discovery_traditions_finished = {
	has_tradition = tr_discovery_finish
}

# ASCENSION PATHS
# -------------- MAIN PATHS ----------------

# Psionic

tec_has_psionic_ascension_path = {
	OR = {
		has_ascension_perk = ap_mind_over_matter		# Psi AP
		tec_has_psionic_ascension_origin = yes
	}
}
tec_has_psionic_ascension_origin = {
	OR = {
		has_origin = origin_shroudwalker_apprentice		# Origin
		has_origin = origin_tec_psionicspecies			# Origin
		# PD
		has_origin = @origin_pd_shroud
		# Origins Expanded
		has_origin = @origin_psionic_abilities
		# Origins Extended
		has_origin = @originsextended_psi
	}
}

tec_has_psionic_ascension_finished = {
	OR = {
		# Might include hybrid paths
		has_tradition = tr_psionics_finish 
	}
}

# Genetic

tec_has_genetic_ascension_path = {
	OR = {
		has_ascension_perk = ap_engineered_evolution
		tec_has_genetic_ascension_origin = yes
	}
}
tec_has_genetic_ascension_origin = {
	OR = {
		has_origin = origin_tec_genetics
	}
}

tec_has_genetic_ascension_finished = {
	OR = {
		# Might include hybrid paths
		has_tradition = tr_genetics_finish 
	}
}

# Cybernetic

tec_has_cybernetic_ascension_path = {
	OR = {
		has_ascension_perk = ap_the_flesh_is_weak		# Cyborg ap
		tec_has_cybernetic_ascension_origin = yes
	}
}
tec_has_cybernetic_ascension_origin = {
	OR = {
		has_origin = origin_tec_cyborgs					# Origin
		# Origins Extended
		has_origin = @originsextended_cyb
	}
}

tec_has_cybernetic_ascension_path_exception = {
	OR = {
		has_valid_civic = civic_machine_assimilator		# Assimilators can take cybernetic
		tec_is_cyberhive = yes							# Cyberhives 
	}
}

tec_has_cybernetic_ascension_finished = {
	OR = {
		# Might include hybrid paths
		has_tradition = tr_cybernetics_finish 
		has_tradition = tr_cybernetics_assimilator_finish 
	}
}

# Synthetic

tec_has_synthetic_ascension_path = {
	OR = {
		has_ascension_perk = ap_synthetic_evolution
		has_ascension_perk = ap_synthetic_age
		tec_has_synthetic_ascension_origin = yes
	}
}
tec_has_synthetic_ascension_origin = {
	OR = {
		always = no
	}
}

tec_has_synthetic_ascension_finished = {
	OR = {
		# Might include hybrid paths
		has_tradition = tr_synthetics_finish 
	}
}

# Generic

tec_has_main_ascension_path = {
	OR = {
		tec_has_psionic_ascension_path = yes
		tec_has_genetic_ascension_path = yes
		tec_has_cybernetic_ascension_path = yes
		tec_has_synthetic_ascension_path = yes
		# PD
		tec_has_pd_biosynth_ascension_path = yes
	}
}

tec_has_main_ascension_finished = {
	OR = {
		tec_has_psionic_ascension_finished = yes
		tec_has_genetic_ascension_finished = yes
		tec_has_cybernetic_ascension_finished = yes
		tec_has_synthetic_ascension_finished = yes
		# PD
		tec_has_pd_biosynth_ascension_finished = yes
	}
}


tec_has_secondary_ascension_path = {
	OR = {
		has_ascension_perk = ap_tec_genetic_perfection			# perfect bio			
		has_ascension_perk = ap_tec_psionic_ascendance			# perfect psi
		has_ascension_perk = ap_tec_synthetic_singularity		# perfect synth
		has_ascension_perk = ap_tec_cybernetic_revolution		# perfect cyborg
		has_ascension_perk = ap_tec_replicant					# biorobot
		has_ascension_perk = ap_tec_cyberpsionic				# psiorobot
		has_ascension_perk = ap_tec_biopsionic					# biopsi

		has_ascension_perk = ap_tec_hive_psionic_3		# hivepsi good
		has_ascension_perk = ap_tec_hive_psionic_shatter			# hivepsi bad
	}
}

# DECISIONS
# ---------------------------------------------------
tec_can_enact_overstrip = {
	OR = {
		has_ethic = ethic_gestalt_disregard
		has_valid_civic = civic_tec_corporate_exploiters
		has_valid_civic = civic_tec_surface_exploiters
	}
}

consumerism_check_trigger = {
	planet = {
		exists = owner
		OR = {
			owner = { has_valid_civic = civic_tec_corporate_productcorp }
		}
	}
}

# SPECIAL POP/SPECIES TRIGGERS
# ---------------------------------------------------
tec_is_replicant_species = {
	is_archetype = REPLICANT
}

tec_is_cyborg_species = {
	OR = {
		#	has_trait = @trait_tec_rudimentary_cyborg
		has_trait = trait_cybernetic
		has_trait = @trait_tec_advanced_cyborg
		has_trait = @trait_tec_cyberpsionic
		has_trait = @trait_tec_replicant_standard				# yes, they are real
	}
}

tec_is_advanced_cyborg_species = {
	OR = {
		has_trait = @trait_tec_advanced_cyborg
		has_trait = @trait_tec_cyberpsionic
		has_trait = @trait_tec_replicant_standard				# yes, they are real
	}
}

tec_is_cybernetic_species = {
	OR = {
		# Bots
		has_trait = trait_mechanical
		#has_trait = trait_machine_unit
		# Borgs
		#	has_trait = @trait_tec_rudimentary_cyborg
		has_trait = trait_cybernetic
		has_trait = @trait_tec_advanced_cyborg
		has_trait = @trait_tec_cyberpsionic
		has_trait = @trait_tec_replicant_standard
	}
}

tec_is_cyborg_species_no_repl = {
	OR = {
		#	has_trait = @trait_tec_rudimentary_cyborg
		has_trait = trait_cybernetic
		has_trait = @trait_tec_advanced_cyborg
		has_trait = @trait_tec_cyberpsionic
	}
}

tec_is_psionic_species = {			# Including latent
	OR = {
		has_trait = trait_latent_psionic
		has_trait = trait_psionic
		has_trait = @trait_tec_cyberpsionic
		has_trait = @trait_tec_pure_psionic
	}
}

tec_is_total_psionic_species = {	# Not latent
	OR = {
		has_trait = trait_psionic
		has_trait = @trait_tec_cyberpsionic
		has_trait = @trait_tec_pure_psionic
	}
}

tec_is_any_psionic_species = {
	OR = {
		tec_is_psionic_species = yes

		has_trait = @trait_tec_hive_psionic_resonance
		has_trait = @trait_tec_hive_psionic_entanglement

		has_trait = @trait_tec_pure_psionic
		has_trait = @trait_tec_cyberpsionic
	}
}

tec_is_psionic_leader = {
	OR = {
		# Regular psionic
		has_trait = leader_trait_admiral_psionic
		has_trait = leader_trait_general_psionic
		has_trait = leader_trait_governor_psionic
		has_trait = leader_trait_scientist_psionic
		has_trait = leader_trait_ruler_psionic
		has_trait = leader_trait_admiral_chosen
		has_trait = leader_trait_general_chosen
		has_trait = leader_trait_governor_chosen
		has_trait = leader_trait_scientist_chosen
		has_trait = leader_trait_ruler_chosen

		# Bio Psionic
		has_trait = leader_trait_admiral_tec_pure_psionic
		has_trait = leader_trait_general_tec_pure_psionic
		has_trait = leader_trait_governor_tec_pure_psionic
		has_trait = leader_trait_scientist_tec_pure_psionic
		has_trait = leader_trait_ruler_tec_pure_psionic

		# Cyber Psionic
		has_trait = leader_trait_admiral_tec_cyberpsionic
		has_trait = leader_trait_general_tec_cyberpsionic
		has_trait = leader_trait_governor_tec_cyberpsionic
		has_trait = leader_trait_scientist_tec_cyberpsionic
		has_trait = leader_trait_ruler_tec_cyberpsionic

		# Hive psionic
	}
}

tec_is_psionic_ruler = {
	OR = {
		# Regular psionic
		has_trait = leader_trait_ruler_psionic
		has_trait = leader_trait_ruler_chosen
		# Bio Psionic
		has_trait = leader_trait_ruler_tec_pure_psionic
		# CYberpsionics
		has_trait = leader_trait_ruler_tec_cyberpsionic
		# Hive psionic
	}
}

tec_is_self_replicating_species = {
	OR = {
		has_trait = trait_tec_robot_fractal
		# This includes plantoid and lithoid budding
		has_budding_trait = yes
		has_trait = trait_tec_lithoid_sedimentary
	}
}

tec_is_clone_origin_species = {
	OR = {
		has_trait = trait_clone_soldier_infertile
		has_trait = trait_clone_soldier_infertile_full_potential
	}
}

tec_can_assemble_fractal_species = {
	has_trait = trait_tec_robot_fractal
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					OR = {
						has_trait = trait_tec_robot_fractal
						is_robotic = yes
					}
				}
			}
		}
	}
}

tec_can_assemble_sedimentary_species = {
	has_trait = trait_tec_lithoid_sedimentary
	planet = {
		OR = {
			NOT = { exists = assembling_species }
			AND = {
				exists = assembling_species
				assembling_species = {
					OR = {
						has_trait = trait_tec_lithoid_sedimentary
						is_robotic = yes
					}
				}
			}
		}
	}
}


# PLANET SLOTS & DISTRICTS
# ---------------------------------------------------
tec_has_all_slots_unlocked = {
	OR = {
		tec_is_city_world = yes
		tec_is_elysium = yes
		tec_is_ringworld = yes
		tec_is_uncapped_planet = yes
		tec_has_infinite_menial_districts = yes
		tec_special_infinite_buildings = yes
	}
}

tec_has_infinite_menial_districts = {
	OR = {
		uses_district_set = hive_world
		uses_district_set = machine_world
		uses_district_set = shattered_ring_world
		AND = {
			uses_district_set = city_world
			has_planet_flag = tec_remnants_decadent_ecu
		}
		tec_is_pd_menial_uncapped = yes
	}
}

tec_is_uncapped_planet = {
	OR = {
		has_modifier = pm_tec_ecoworld_planet
		has_modifier = resort_colony
		tec_is_modded_uncapped_planet = yes
		
	}
}

tec_has_any_food_district = {
	OR = {
		uses_district_set = standard
		AND = {
			uses_district_set = ring_world
			NOR = {
				has_planet_flag = tec_rw_spec_admin
				has_planet_flag = tec_rw_spec_industry
				has_planet_flag = tec_rw_spec_science
			}
		}
		AND = {
			uses_district_set = city_world
			has_planet_flag = tec_remnants_decadent_ecu
		}
		AND = {
			uses_district_set = habitat
			has_planet_flag = tec_food_habitat
		}
		uses_district_set = hive_world
	}
}

tec_special_infinite_buildings = {
	OR = {
		always = no
	}
}

tec_is_special_colony = {	# Note: Identification, sort
	OR = {
		has_modifier = resort_colony
		has_modifier = slave_colony
		has_modifier = penal_colony
		has_modifier = crucible_colony
		#has_modifier = pm_tec_sanctuary_colony
		#has_modifier = pm_tec_necropolis_colony
		#has_modifier = pm_tec_preserve_colony
		#has_modifier = pm_tec_heritage_colony
	}
}

tec_is_special_colony_restrictive_all = {	# Note: mostly used for buildings
	always = no
}

tec_is_special_colony_restrictive_menial = {
	OR = {
		has_modifier = resort_colony
		has_modifier = crucible_colony
	}
}

tec_is_special_colony_restrictive_advanced = {
	OR = {
		has_modifier = resort_colony
		#has_modifier = pm_tec_sanctuary_colony
		#has_modifier = pm_tec_necropolis_colony
	}
}

# Compatibility scripts
tec_invalidates_arcology_project_comp = {
	OR = {
		tec_is_city_world = yes
		tec_is_special_colony = yes
		# Wenkwort
		has_modifier = pm_wenkwort_custodian

		# Planetary diversity compatibility
		tec_is_pd_necropolis = yes	# just in case - techincally does not exist
		is_pd_shroud_world = yes
		is_pd_unique = yes
		is_pd_planetary_megaproject = yes
	}
}

tec_invalidates_ecoworld_project_comp = {
	OR = {
		tec_is_city_world = yes
		tec_is_special_colony = yes

		tec_is_hive_world = yes
		tec_is_machine_world = yes
		tec_is_nuked_world = yes
		tec_is_relic_world = yes

		# PD
		tec_is_pd_necropolis = yes # just in case - techincally does not exist
		tec_is_pd_wasteland = yes
		is_pd_planetary_megaproject = yes
	} 
}

tec_has_any_menial_district = {
	OR = {
		check_variable_arithmetic = {
			which = value:farming_districts_value
			   value >= 0
		}
		check_variable_arithmetic = {
			which = value:mining_districts_value
			   value >= 0
		}
		check_variable_arithmetic = {
			which = value:generators_districts_value
			   value >= 0
		}
	}
}

tec_has_any_menial_building = {
	OR = {
		# Energy
		has_building = building_energy_grid
		has_building = building_energy_nexus
		has_building = building_energy_complex
		has_building = building_tec_energrid_1
		has_building = building_tec_energrid_2
		has_building = building_tec_energrid_3
		# Minerals
		has_building = building_mineral_purification_plant
		has_building = building_mineral_purification_hub
		has_building = building_mineral_purification_complex
		has_building = building_tec_stripmine_1
		has_building = building_tec_stripmine_2
		has_building = building_tec_stripmine_3
		# Food
		has_building = building_food_processing_center
		has_building = building_food_processing_facility
		has_building = building_food_processing_complex	
		has_building = building_hydroponics_farm
		has_building = building_hydroponics_farm_2
		has_building = building_hydroponics_farm_3
	}
}

tec_has_any_urban_district = {
	OR = {
		# Housing
		num_districts = {
			type = district_city
			value > 0
		}
		num_districts = {
			type = district_hive
			value > 0
		}
		num_districts = {
			type = district_nexus
			value > 0
		}
		# Industrial
		num_districts = {
			type = district_industrial
			value > 0
		}
	}
}
	
# PLANET TRIGGERS
# ---------------------------------------------------
tec_is_vanilla_habitable_regular_planet = {
	OR = {
		#dry
		is_planet_class = pc_desert
		is_planet_class = pc_arid
		is_planet_class = pc_savannah

		#wet
		is_planet_class = pc_tropical
		is_planet_class = pc_ocean
		is_planet_class = pc_continental
		
		#cold
		is_planet_class = pc_tundra
		is_planet_class = pc_alpine
		is_planet_class = pc_arctic
	}
}

tec_is_habitable_regular_planet = {
	OR = {
		tec_is_vanilla_habitable_regular_planet = yes
		# Generic
		uses_district_set = standard
		# PD
		is_pd_regular = yes
	}
}

tec_is_arcology = {
	OR = {
		tec_is_city_world = yes
		tec_is_space_arcology = yes
	}
}

tec_is_space_arcology = {
	OR = {
		tec_is_habitat = yes
		tec_is_ringworld = yes
		tec_is_elysium = yes
		tec_is_modded_space_arcology = yes
	}
}

tec_is_habitat = {
	OR = {
		uses_district_set = habitat
		# PD
		uses_district_set = @pdplanethab
		# gigas
		is_giga_habitat = yes
	}
}

tec_is_ringworld = {
	OR = {
		uses_district_set = ring_world
		is_giga_ringworld = yes
	}
}

tec_is_elysium = {
	OR = {
		#uses_district_set = elysium_phase_0
		uses_district_set = elysium_phase_2
	}
}

tec_is_city_world = {
	OR = {
		uses_district_set = city_world
		is_pd_arcology = yes
	}
}

tec_uses_habitat_districts = {
	OR = {
		uses_district_set = habitat
	}
}

tec_uses_ringworld_districts = {
	OR = {
		uses_district_set = ring_world
		uses_district_set = @penrose_ring
		uses_district_set = @interstellar_ring
	}
}



#void dweller traits
# neutral
tec_is_viable_voidwellerneutral_planet = {
	OR = {
		uses_district_set = ring_world
		uses_district_set = elysium_phase_2
		uses_district_set = city_world
		is_planet_class = pc_relic
		is_planet_class = pc_gaia
		has_modifier = pm_tec_ecoworld_planet
		#pd compo - DISABLED COMPO
		tec_is_pd_void_neutral_planets = yes
	}
}

#Lifeaffinity traits
# only for exotic and gaia worlds
tec_is_perfect_planet = {
	OR = {
		tec_is_gaia_world = yes
		tec_is_pd_perfect_planets = yes
	}
}

# for special arcologies
tec_is_neutral_planet = {
	OR = {
		tec_is_elysium = yes
		tec_is_ringworld = yes
		tec_is_pd_perfect_planets = yes
	}
}

# Aquatic species
tec_is_wet_planet_exceptions = {	# Outside is_wet trigger
	OR = {
		tec_is_gaia_world = yes
		tec_is_flooded = yes
		tec_is_wet_planet_origin_exceptions = yes
	}
}

tec_is_wet_planet_origin_exceptions = {
	OR = {
		# Nuked start 
		AND = {
			owner = {
				tec_has_nuked_world_origin = yes
			}
			tec_is_nuked_world = yes
		}
		AND = {
			from = {
				tec_has_nuked_world_origin = yes
			}
			tec_is_nuked_world = yes
		}
		# Hive start
		AND = {
			owner = {
				tec_has_hive_world_origin = yes
			}
			tec_is_hive_world = yes
		}
		AND = {
			from = {
				tec_has_hive_world_origin = yes
			}
			tec_is_hive_world = yes
		}
		# Machine Start
		AND = {
			owner = {
				tec_has_machine_world_origin = yes
			}
			tec_is_machine_world = yes
		}
		AND = {
			from = {
				tec_has_machine_world_origin = yes
			}
			tec_is_machine_world = yes
		}
		# 
	}
}

# This is for cleaning district code
tec_is_regular_bio_aquatic_from = {
}
tec_is_regular_litho_aquatic_from = {
}

tec_is_hive_bio_aquatic_from = {
}
tec_is_hive_litho_aquatic_from = {
}

tec_is_machine_aquatic_from = {
}

tec_is_regular_bio_aquatic_owner = {
}
tec_is_regular_litho_aquatic_owner = {
}

tec_is_hive_bio_aquatic_owner = {
}
tec_is_hive_litho_aquatic_owner = {
}

tec_is_machine_aquatic_owner = {
}

# By Roadd - need organisation
tec_is_ecoworld = {
	has_modifier = pm_tec_ecoworld_planet
}

tec_is_arcology_habitat = {
	OR = {
		has_planet_flag = tec_arcology_habitat
		has_modifier = pm_tec_arcology_habitat
	}
}

tec_is_hive_world = {
	OR = {
		is_planet_class = pc_hive
		# PD
		is_pd_hive_world = yes
	}
}

tec_is_machine_world = {
	OR = {
		is_planet_class = pc_machine
		# PD
		is_pd_machine = yes
	}
}

tec_is_nuked_world = {
	OR = {
		is_planet_class = pc_nuked
		tec_is_pd_nuked_world = yes
	}
}

tec_is_relic_world = {
	OR = {
		is_planet_class = pc_relic
		tec_is_pd_relic_world = yes
	}
}

tec_is_gaia_world = {
	OR = {
		is_planet_class = pc_gaia
		is_pd_gaia = yes
	}
}

tec_is_aquatic_planet = {
	OR = {
		is_planet_class = pc_ocean
		tec_is_pd_aquatic_planet = yes
		tec_is_flooded = yes
	}
}

tec_has_nuked_world_origin = {
	OR = {
		has_origin = origin_post_apocalyptic
		has_origin = @origin_pd_radiotrophic_mutants
		has_origin = @origin_disharmonious_unity
		has_origin = @originsextended_starless
		has_origin = @originsextended_magnetica
		has_origin = @originsextended_graveyard
	}
}

tec_has_hive_world_origin = {
	OR = {
		has_origin = @origin_tec_hiveplanet
		has_origin = @origin_pd_hive
		has_origin = @origin_hive
		has_origin = @originsextended_infest
	}
}

tec_has_machine_world_origin = {
	OR = {
		has_origin = origin_machine
		has_origin = @originsextended_core
	}
}

tec_has_relic_world_origin = {
	OR = {
		has_origin = origin_remnants
		has_origin = @origin_reliquary
		has_origin = @origin_mem_from_the_ashes
		has_origin = @origin_mem_ceaseless_gaze
		# has_origin = @origin_pd_scrapyard_world # Commented cause not relic planet type but similar enough
	}
}

tec_has_gaia_world_origin = {
	OR = {
		has_origin = origin_life_seeded
		has_origin = @originsextended_gaia
		has_origin = @origin_resort_world
	}
}

tec_district_ecoworld_swap = {
	tec_is_ecoworld = yes
}

tec_district_organic_swap = {
	tec_is_biomorph = yes
}

tec_generator_aqua_district_swap = {
	tec_is_aquatic_empire = yes
	is_machine_empire = yes
	root = {
		OR = {
			is_wet = yes
			tec_is_wet_planet_exceptions = yes
		}
	}
}

tec_has_infinite_generator_district = {
	root = {
		tec_has_infinite_menial_districts = yes
	}
	if = {
		limit = {
			root = { uses_district_set = shattered_ring_world }
		}
		OR = {
			is_gestalt = yes
			is_fallen_empire = yes
		}
	}
}

tec_mining_aqua_district_swap = {
	tec_is_aquatic_empire = yes
	is_lithoid_empire = yes
	is_machine_empire = no
	root = {
		OR = {
			is_wet = yes
			tec_is_wet_planet_exceptions = yes
		}
	}
}

tec_mining_subterranean_district_swap = {
	AND = {
		exists = owner
		owner = { is_subterranean_empire = yes }
	}
	root = {
		uses_district_set = standard
	}
}

tec_has_infinite_mining_district = {
	OR = {
		AND = {
			is_subterranean_empire = yes
			root = {
				is_artificial = no
			}
		}
		root = {
			tec_has_infinite_menial_districts = yes
		}
	}
}

tec_farming_aqua_district_swap = {
	tec_is_aquatic_empire = yes
	is_lithoid_empire = no
	is_machine_empire = no
	root = {
		OR = {
			is_wet = yes
			tec_is_wet_planet_exceptions = yes
		}
	}
}

tec_has_infinite_farming_district = {
	root = {
		tec_has_infinite_menial_districts = yes
		NOT = {
			uses_district_set = machine_world
		}
	}
}

tec_has_standard_habitation_district = {
	OR = {
		uses_district_set = standard
		uses_district_set = hive_world
		uses_district_set = machine_world
		uses_district_set = shattered_ring_world
		uses_district_set = @pdnecroplanet
		uses_district_set = @pdscrapyard
		uses_district_set = @pdbioforge
		uses_district_set = @pdbiofort
		uses_district_set = @pdfloraforge
		uses_district_set = @pdflorafort
		has_planet_flag = tec_remnants_decadent_ecu
	}
	tec_is_ecoworld = no
}

tec_has_standard_industrial_district = {
	OR = {
		uses_district_industrial = yes
		uses_district_set = @pdnecroplanet
		has_planet_flag = tec_remnants_decadent_ecu
	}
	NOR = {
		has_planet_flag = tec_ecumenopolis_spec_militarized
		has_planet_flag = tec_ecumenopolis_spec_science
		has_planet_flag = tec_ecumenopolis_spec_admin
	}
	tec_is_ecoworld = no
}

tec_allows_machine_alt_capitals = {
	OR = {
		uses_district_set = standard
		uses_district_set = machine_world
		uses_district_set = hive_world
	}
}

# B U I L D I N G S
# -------------- STATECRAFT BUILDINGS ----------------
tec_only_one_statecraft_building = {
	text = "tec_only_one_statecraft_building_on_planet"
	hidden_trigger = {
		OR = {
			has_building = building_tec_tr_statecraft_fallback

			has_building = building_tec_tr_nofan_diversity

			# mat vs spi
			has_building = building_tec_tr_mat_celestial_database
			has_building = building_tec_tr_spi_manifesto_faith

			# phile vs phobe
			has_building = building_tec_tr_phile_tribute_unity
			has_building = building_tec_tr_phobe_monument_purity

			# peace vs mil
			has_building = building_tec_tr_pac_garden_peace
			has_building = building_tec_tr_mil_comisariat

			# auth vs lib
			has_building = building_tec_tr_aut_throne
			has_building = building_tec_tr_lib_parliament

			# green vs ind
			has_building = building_tec_tr_eco_sculptor
			has_building = building_tec_tr_ind_mohole
			
			# comp vs coop
			has_building = building_tec_tr_comp_hypermall
			has_building = building_tec_tr_coop_distribution

			# elit vs egal
			has_building = building_tec_tr_eli_academy
			has_building = building_tec_tr_ega_repository

			# special gestalt ones goes here
			
		}
	}
}

# These ones are for backup
overlord_has_num_constructors_in_orbit = {
	planet = {
		count_fleet_in_orbit = {
			count = $NUM$
			limit = {
				count_controlled_ship = {
					count = all
					limit = {
						is_ship_size = constructor
						exists = owner
						exists = ROOT.owner
						ROOT.owner = { has_overlord = PREV.owner }
					}
				}
			}
		}
	}
}

overlord_has_more_than_num_constructors_in_orbit = {
	planet = {
		count_fleet_in_orbit = {
			count > $NUM$
			limit = {
				count_controlled_ship = {
					count = all
					limit = {
						is_ship_size = constructor
						exists = owner
						exists = ROOT.owner
						ROOT.owner = { has_overlord = PREV.owner }
					}
				}
			}
		}
	}
}

overlord_has_num_science_ships_in_orbit = {
	planet = {
		count_fleet_in_orbit = {
			count = $NUM$
			limit = {
				count_controlled_ship = {
					count = all
					limit = {
						is_ship_size = science
						exists = owner
						exists = ROOT.owner
						ROOT.owner = { has_overlord = PREV.owner }
					}
				}
			}
		}
	}
}

overlord_has_more_than_num_science_ships_in_orbit = {
	planet = {
		count_fleet_in_orbit = {
			count > $NUM$
			limit = {
				count_controlled_ship = {
					count = all
					limit = {
						is_ship_size = science
						exists = owner
						exists = ROOT.owner
						ROOT.owner = { has_overlord = PREV.owner }
					}
				}
			}
		}
	}
}

# This one is from evolved
tec_has_constructors_in_orbit = {
	planet = {
		count_fleet_in_orbit = {
			count = $NUM$
			limit = {
				count_controlled_ship = {
					count = all
					limit = {
						is_ship_size = constructor
					}
				}
			}
		}
	}
}
tec_has_more_than_num_constructors_in_orbit = {
	planet = {
		count_fleet_in_orbit = {
			count > $NUM$
			limit = {
				count_controlled_ship = {
					count = all
					limit = {
						is_ship_size = constructor
					}
				}
			}
		}
	}
}

# D E P O S I T S 
# -------------- SPECIAL RESOURCES ----------------
tec_adds_motes_deposit = {
	check_modifier_value = {
		modifier = building_mote_harvesters_max
		value > 0
	}
}

# Gas
tec_adds_gases_deposit = {
	check_modifier_value = {
		modifier = building_gas_extractors_max
		value > 0
	}
}

# Crystals
tec_adds_crystals_deposit = {
	check_modifier_value = {
		modifier = building_crystal_mines_max
		value > 0
	}
}

# Betharian
tec_has_betharian_deposit = {
	check_modifier_value = {
		modifier = building_betharian_power_plant_max
		value > 0
	}
}

# S H I P S
# -------------- Colossus ----------------
# De-evolution ray
tec_can_destroy_planet_with_PLANET_KILLER_TEC_DEVOLVERAY = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
	}
	custom_tooltip = {
		fail_text = is_shielded
		NOR = {
			is_planet_class = pc_shielded
			is_planet_class = pc_ringworld_shielded
			is_planet_class = pc_habitat_shielded
		}
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = {
					is_country_type = primitive
				}
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = tec_cannot_devolve_primitives
			always = no
		}
	}
	custom_tooltip = { # Replicants assimilate EVERYTHING
		fail_text = no_assimilatable_pops
		any_owned_pop = {
			is_valid_pop_for_PLANET_KILLER_NANOBOTS = yes
		}
	}
}
tec_is_valid_pop_for_PLANET_KILLER_TEC_REPLICANTRAY = {
	always = yes
}

tec_can_destroy_planet_with_PLANET_KILLER_TEC_REPLICANTRAY = {
	custom_tooltip = {
		fail_text = is_not_a_habitable_planet_or_megastructure
		is_a_habitable_planet_megastructure = yes
	}
	custom_tooltip = {
		fail_text = is_shielded
		NOR = {
			is_planet_class = pc_shielded
			is_planet_class = pc_ringworld_shielded
			is_planet_class = pc_habitat_shielded
		}
	}
	custom_tooltip = {
		fail_text = is_not_hostile_or_primitive
		OR = {
			planet_is_hostile = yes
			AND = {
				exists = owner
				owner = {
					is_country_type = primitive
				}
			}
		}
	}
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = primitive }
		}
		custom_tooltip = {
			fail_text = primitives_not_in_borders
			exists = space_owner
			space_owner = { is_same_value = from.owner }
		}
		custom_tooltip = {
			fail_text = primitives_not_full_interference
			from.owner = {
				has_policy_flag = interference_full
			}
		}
	}
	#custom_tooltip = { # Replicants assimilate EVERYTHING
	#	fail_text = no_assimilatable_pops
	#	any_owned_pop = {
	#		is_valid_pop_for_PLANET_KILLER_NANOBOTS = yes
	#	}
	#}
}
tec_is_valid_pop_for_PLANET_KILLER_TEC_REPLICANTRAY = {
	always = yes
}


# SORT SORT SORT

tec_has_entertainer_swap = {
	OR = {
		has_valid_civic = civic_warrior_culture
	}
}

tec_has_enforcer_swap = {
	always = no
}

tec_has_colonist_swap = {
	always = no
}

tec_has_clerk_swap = {
	always = no
}

tec_has_coordinator_swap = {
	always = no
}

tec_has_soldier_swap = {
	OR = {
		has_valid_civic = civic_tec_corporate_militarybureau
	}
}

tec_has_maintenance_swap = {
	always = no
}

tec_has_patrol_drone_swap = {
	always = no
}

tec_has_warrior_drone_swap = {
	always = no
}

tec_has_scrap_miner = {
	OR = {
		is_planet_class = pc_shattered_ring_habitable
	}
}


tec_has_matter_miner = {
	OR = {
		tec_uses_ringworld_districts = yes
	}
}

tec_has_special_miner = {
	OR = {
		tec_has_scrap_miner = yes
		tec_has_matter_miner = yes
	}
}



tec_is_unspecced_city_planet = {
	NOR = {
		has_planet_flag = tec_ecumenopolis_spec_militarized
		has_planet_flag = tec_ecumenopolis_spec_science
		has_planet_flag = tec_ecumenopolis_spec_admin
		has_planet_flag = tec_ecumenopolis_spec_precursor
	}
}

tec_is_precursor_city_planet = {
	has_planet_flag = tec_ecumenopolis_spec_precursor 
}

tec_is_military_city_planet = {
	has_planet_flag = tec_ecumenopolis_spec_militarized 
}

tec_is_admin_city_planet = {
	has_planet_flag = tec_ecumenopolis_spec_admin 
}

tec_is_science_city_planet = {
	has_planet_flag = tec_ecumenopolis_spec_science 
}

tec_is_decadent_city_planet = {
	has_planet_flag = tec_remnants_decadent_ecu
}

tec_is_specced_ringworld = {
	OR = {
		has_planet_flag = tec_rw_spec_science
		has_planet_flag = tec_rw_spec_admin
		has_planet_flag = tec_rw_spec_industry
	}
}

tec_is_unspecced_ringworld = {
	NOR = {
		has_planet_flag = tec_rw_spec_precursor
		has_planet_flag = tec_rw_spec_science
		has_planet_flag = tec_rw_spec_admin
		has_planet_flag = tec_rw_spec_industry
	}
}

tec_is_precursor_ringworld = {
	has_planet_flag = tec_rw_spec_precursor
}

tec_is_science_ringworld = {
	has_planet_flag = tec_rw_spec_science
}

tec_is_industry_ringworld = {
	has_planet_flag = tec_rw_spec_industry
}

tec_is_admin_ringworld = { # scrapped
	has_planet_flag = tec_rw_spec_admin
}

tec_is_unspecced_elysium = {
	NOR = {
		has_planet_flag = tec_civ_elysium
		has_planet_flag = tec_mil_elysium
	}
}

tec_is_civilian_elysium = {
	has_planet_flag = tec_civ_elysium
}

tec_is_military_elysium = {
	has_planet_flag = tec_mil_elysium
}

tec_has_extra_menial_district_job = {
	OR = {
		has_valid_civic = civic_tec_syndical
		# We can add similar civics to this for megacorps 
		# or gestalts or even traditions etc
	}
}

tec_is_flooded = {
	# Can be used to allow flooded elysiums and ringworlds
	OR = {
		has_modifier = flooded_habitat
		AND = {
			has_modifier = @hyceanfloodedhabitat
			owner = { has_origin = @origin_pd_hycean_aquatic }
		}
	}
}

tec_has_hired_job = {
	OR = {
		has_job = tec_hired_miner
		has_job = tec_hired_farmer
		has_job = tec_hired_technician
		has_job = tec_hired_catalytic
		has_job = tec_hired_soldier
		has_job = tec_hired_foundry
		has_job = tec_hired_artisan
		has_job = tec_hired_researcher
		has_job = tec_hired_entertainer
		# Preacher here too
		has_job = preacher
	}
}

tec_is_spiritual_seekers = {
	OR = {
		has_valid_civic = civic_tec_spiritual_seekers 
		has_valid_civic = civic_tec_corporate_seekers
	}
}

tec_has_toxic_baths = {
	OR = {
		has_valid_civic = civic_toxic_baths
		has_valid_civic = civic_corporate_toxic_baths
		has_valid_civic = civic_hive_toxic_baths
		has_valid_civic = civic_machine_toxic_baths
	}
}

tec_allows_machine_assembly_for_cyborg = {
	OR = {
		has_active_tradition = tr_cybernetics_assembly_standards
	}
}


tec_is_urbancorp = {
	optimize_memory
	OR = {
		has_civic = civic_tec_corporate_urbancorp
	}
}

# Ecu decisions

tec_arcology_project_potential = {
	optimize_memory
	tec_is_relic_world = no
	tec_invalidates_arcology_project_comp = no

	habitable_structure = no
	tec_is_arcology = no

	exists = owner
	owner = {
		has_ascension_perk = ap_arcology_project
		NOT = {
			has_ethic = ethic_fanatic_green
		}
		NOR = {
			has_civic = civic_agrarian_idyll
			has_civic = civic_tec_eco_keepers
		}
	}
}

tec_arcology_project_relic_potential = {
	optimize_memory
	# PD compat
	is_planet_class = pc_[[milarc]milarc_]relic
	
	tec_invalidates_arcology_project_comp = no
	habitable_structure = no
	tec_is_arcology = no
}

tec_ecoworld_project_potential = {
	tec_is_arcology = no
	tec_invalidates_ecoworld_project_comp = no

	tec_is_ecoworld = no

	habitable_structure = no
	tec_is_arcology = no

	exists = owner
		owner = {
			NOR = {
				has_ethic = ethic_fanatic_industrial
				has_valid_civic = civic_hive_devouring_swarm
			}
			OR = {
				is_ecologist = yes
				has_ascension_perk = ap_mastery_of_nature
			}
		}
}

tec_arcology_project_allow = {
	optimize_memory
	if = {	# Note: I feel this extremely cheesy, but whatever
		limit = { owner = { is_ai = no } }
		custom_tooltip = {
			# PD compat
			fail_text = decision_[[eco]eco_]arcology_project_requirements
			if = {
				limit = {
					owner = {
						tec_is_megacity_empire = no
					}
				}
				free_district_slots < 1

				# PD compat
				[[eco]num_districts = { type = district_industrial value < 1 }]
				check_variable_arithmetic = {
					which = value:farming_districts_value
           			value = 0
				}
				check_variable_arithmetic = {
					which = value:mining_districts_value
           			value = 0
				}
				check_variable_arithmetic = {
					which = value:generators_districts_value
           			value = 0
				}
			}
			if = {
				limit = {
					owner = {
						tec_is_megacity_empire = yes
					}
				}
				# MEMESIS MEGACITY CHANGES
			}
		}
	}
	custom_tooltip = {
		fail_text = decision_tec_arcology_blocker_tweaks
		OR = {
			num_uncleared_blockers < 1
			owner = {
				tec_can_enact_overstrip = yes
			}
		}
	}
}

tec_arcology_project_relic_allow = {
	optimize_memory
	owner = { 
		has_technology = tech_housing_2 
	}
	custom_tooltip = {
		fail_text = decision_tec_arcology_blocker_tweaks
		OR = {
			num_uncleared_blockers < 1
			owner = {
				tec_can_enact_overstrip = yes
			}
		}
	}
}

tec_ecoworld_project_allow = {
	optimize_memory
	custom_tooltip = {
		fail_text = decision_tec_ecoworld_project_requirements
		OR = {
			check_variable_arithmetic = {
				which = value:farming_districts_value
				   value >= 6
			}
			check_variable_arithmetic = {
				which = value:mining_districts_value
				   value >= 6
			}
			check_variable_arithmetic = {
				which = value:generators_districts_value
				   value >= 6
			}
		}
	}
	custom_tooltip = {
		fail_text = decision_tec_arcology_blocker_tweaks
		OR = {
			num_uncleared_blockers < 1
			owner = {
				tec_can_enact_overstrip = yes
			}
		}
	}
}