# common\scripted_triggers\zz_ow_01_scripted_triggers_jobs.txt
# 01_scripted_triggers_jobs.txt

complex_specialist_job_check_trigger = {
	hidden_trigger = {
		[[cached]
			has_pop_flag = tec_cache_complex_specialist_job_check_trigger
		]
		[[!cached]
		exists = owner
		OR = {
			NOT = { has_trait = trait_mechanical }
			AND = {
				owner = { has_technology = tech_droid_workers }
				owner = { NOT = { has_policy_flag = ai_outlawed } }
			}
		}
		OR = {
			NOT = { has_trait = trait_tec_bioservant }
			AND = {
				owner = { has_technology = tech_tec_bioservant_3 }
				owner = { NOT = { has_policy_flag = intelligent_bioservants_outlawed } }
			}
		}
		]
	}
}

entertainer_job_check_trigger = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		[[cached]
			has_pop_flag = tec_cache_entertainer_job_check_trigger
		]
		[[!cached]
		exists = owner
		OR = {
			is_enslaved = no
			has_slavery_type = { type = slavery_domestic }
		#	has_slavery_type = { type = slavery_indentured }
		}
		is_being_purged = no
		is_being_assimilated = no
		NOR = {
			tec_has_stapled_trait = yes
			tec_has_specialist_job_invalidation_trait = yes
		}
		NOT = {  }
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
		OR = {
			NOT = { has_trait = trait_tec_bioservant }
			owner = { has_technology = tech_tec_bioservant_2 }
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
		if = {
			limit = {
				divinity_right_to_work_job_check_trigger_exempt = no
			}
			divinity_right_to_work_job_check_trigger_specialist = yes
		}
		]
	}
}

battle_thrall_job_check_trigger = {
	custom_tooltip = BATTLE_THRALL_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		[[cached]
			has_pop_flag = tec_cache_battle_thrall_job_check_trigger
		]
		[[!cached]
		OR = {
			is_enslaved = no
			has_slavery_type = { type = slavery_military }
		}
		is_being_purged = no
		is_being_assimilated = no
		NOR = {
			tec_has_stapled_trait = yes
			tec_has_military_job_invalidation_trait = yes
		}
		NOT = {
			has_military_service_type = {
				type = military_service_none
			}
		}
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
		OR = {
			NOT = { has_trait = trait_tec_bioservant }
			owner = { has_technology = tech_tec_bioservant_2 }
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
		if = {
			limit = {
				divinity_right_to_work_job_check_trigger_exempt = no
			}
			divinity_right_to_work_job_check_trigger_specialist = yes
		}
		]
	}
}

soldier_job_check_trigger = {
	custom_tooltip = SOLDIER_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		is_being_purged = no
		is_being_assimilated = no
		NOT = {
			has_military_service_type = {
				type = military_service_none
			}
		}
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
		NAND = {
			has_citizenship_type = { type = citizenship_slavery country = owner }
			OR = {
				has_slavery_type = { type = slavery_livestock country = owner }
				has_slavery_type = { type = slavery_matrix country = owner }
			}
		}
		if = {
			limit = {
				divinity_right_to_work_job_check_trigger_exempt = no
			}
			divinity_right_to_work_job_check_trigger_worker = yes
		}
	}
}

worker_job_check_trigger = {
	custom_tooltip = WORKER_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		is_being_purged = no
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
		NAND = {
			has_citizenship_type = { type = citizenship_slavery country = owner }
			OR = {
				has_slavery_type = { type = slavery_livestock country = owner }
				has_slavery_type = { type = slavery_matrix country = owner }
			}
		}
		if = {
			limit = {
				divinity_right_to_work_job_check_trigger_exempt = no
			}
			divinity_right_to_work_job_check_trigger_specialist = yes
		}
	}
}

drone_job_check_trigger = {
	custom_tooltip = DRONE_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		owner = { is_gestalt = yes }
		is_being_purged = no
		is_enslaved = no
		is_being_assimilated = no
		NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
	}
}

drone_advanced_hive_robot_check_trigger = {
	custom_tooltip = DRONE_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		owner = {
			is_gestalt = yes
		}
		is_being_purged = no
		AND = {
			owner = {
				has_technology = tech_droid_workers
			}
			has_trait = trait_mechanical
		}
	}
}

drone_individual_pop_check_trigger = {
	custom_tooltip = DRONE_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		owner = {
			is_gestalt = yes
			has_ethic = ethic_gestalt_empathy
		}
		NOR = {
			has_trait = trait_hive_mind
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
		}
		NOR = {
			species = {
				has_species_flag = tec_original_biotrophy_@root.owner
			}
			has_citizenship_type = {
				type = citizenship_organic_trophy
				country = owner
			}
		}
	}
}


is_lithoid = {
	species = {
		OR = {
			is_archetype = LITHOID
			has_trait = trait_lithoid
		}
	}
}

# New
can_fill_ruler_job_trigger = {
	custom_tooltip = {
		[[cached]
			text = TEC_RULER_JOB_TRIGGER_DYNAMIC
			has_pop_flag = tec_cache_can_fill_ruler_job_trigger
		]
		[[!cached]
			if = {
				limit = {
					exists = owner
					owner = {
						has_origin = origin_necrophage
						has_trait = trait_necrophage
					}
				}
				custom_tooltip = {
					text = RULER_JOB_NECROPHAGE_TRIGGER
					has_trait = trait_necrophage
					is_enslaved = no
					is_being_purged = no
					is_being_assimilated = no
				}
			}
			# disabled for performance
			# else_if = {	# Evolved - wip
			# 	limit = {
			# 		has_global_flag = stellarisevolved
			# 		exists = owner
			# 		owner = {
			# 			has_origin = origin_tec_slavetothesystem
			# 			has_trait = trait_mechanical
			# 		}
			# 	}
			# 	custom_tooltip = {
			# 		text = RULER_JOB_NECROPHAGE_TRIGGER
			# 		has_trait = trait_mechanical
			# 		is_enslaved = no
			# 		is_being_purged = no
			# 		is_being_assimilated = no
			# 	}
			# }
			else = {
				custom_tooltip = RULER_JOB_TRIGGER
				hidden_trigger = {
					NOT = { has_ethic = ethic_gestalt_consciousness }
					exists = owner
					is_enslaved = no
					is_being_purged = no
					is_being_assimilated = no
					## Rule out Traits for servitude & lack of free will
					#NOR = {
					#	has_trait = trait_syncretic_proles
					#	has_trait = trait_zombie
					#	has_trait = trait_nerve_stapled
					#}	handled below
					# Evolved -----------------------------------------------------
					NOR = {
						tec_has_ruler_job_invalidation_trait = yes
						tec_has_stapled_trait = yes
					}
					NAND = {	# Avoid elevated pops becoming specialists
						has_trait = trait_tec_se_subspecies
						days_passed < 2
					}
					# /
					# Rule out Machine Pops, unless they're rendered sapient
					OR = {
						NOT = { has_trait = trait_mechanical }
						AND = {
							owner = { has_technology = tech_synthetic_workers }
							owner = { has_policy_flag = ai_full_rights }
						}
					}
					# Rule out Organic Trophies
					NOT = {
						has_citizenship_type = {
							type = citizenship_organic_trophy
							country = owner
						}
					}
					# Evolved -----------------------------------------------------
					OR = {
						NOT = { has_trait = trait_tec_bioservant }
						AND = {
							owner = { has_technology = tech_tec_bioservant_3 }
							owner = { has_policy_flag = bioservant_full_rights }
						}
					}
					# JOB POLICIES
					#if = {	# Xenos
					#	limit = {
					#		NOR = {
					#			tec_is_crafted_nonsapient_pop = yes
					#			tec_is_crafted_sentient_pop = yes
					#		}
					#		owner = {
					#			OR = {
					#				has_policy_flag = tec_xenos_jobs_norulers
					#				has_policy_flag = tec_xenos_jobs_restricted
					#				has_policy_flag = tec_xenos_jobs_servants
					#			}
					#		}
					#		is_same_species = owner_species
					#	}
					#}
					#if = {	# Crafted jobs
					#	limit = {
					#		OR = {
					#			tec_is_crafted_nonsapient_pop = yes
					#			tec_is_crafted_sentient_pop = yes
					#		}
					#		owner = {
					#			OR = {
					#				has_policy_flag = tec_crafted_jobs_norulers
					#				has_policy_flag = tec_crafted_jobs_restricted
					#				has_policy_flag = tec_crafted_jobs_servants
					#			}
					#		}
					#		NOR = {
					#			has_trait = trait_mechanical
					#			has_trait = trait_tec_bioservant
					#		}
					#	}
					#}
					# /
					NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
					# Rule out violations of the 'Right to Work' Resolution (prioritises organic workers)
					if = {
						limit = {
							divinity_right_to_work_job_check_trigger_exempt = no
						}
						divinity_right_to_work_job_check_trigger_ruler = yes
					}
				}
			}
		]
	}
}

divinity_right_to_work_job_check_trigger_ruler = {
	NOT = {
		planet = {
			tec_planet_divinity_right_to_work_job_check_trigger_ruler = { cached = yes }
		}
	}
}

tec_planet_divinity_right_to_work_job_check_trigger_ruler = {
	[[cached]
		has_planet_flag = tec_cache_tec_planet_divinity_right_to_work_job_check_trigger_ruler
	]
	[[!cached]
	any_owned_pop = {
		is_unemployed = yes
		is_robotic_species = no
	}
	]
}

can_fill_specialist_job_trigger = {
	custom_tooltip = SPECIALIST_JOB_TRIGGER
	hidden_trigger = {
		[[cached]
			has_pop_flag = tec_cache_can_fill_specialist_job_trigger
		]
		[[!cached]
			NOT = { has_ethic = ethic_gestalt_consciousness }
			exists = owner
			OR = {
				is_enslaved = no
				has_slavery_type = { type = slavery_indentured }
			}
			is_being_purged = no
			is_being_assimilated = no
			# Rule out Traits for servitude & lack of free will
			NOR = {
				tec_has_specialist_job_invalidation_trait = yes
				tec_has_stapled_trait = yes
			}
			OR = {
				NOT = {
					has_trait = trait_mechanical
				}
				owner = { has_technology = tech_droid_workers }
			}
			# Evolved -----------------------------------------------------
				OR = {
					NOT = {
						has_trait = trait_tec_bioservant
					}
					owner = { has_technology = tech_tec_bioservant_2 }
				}
				# JOB POLICIES
				#if = {	# Xenos
				#	limit = {
				#		NOR = {
				#			tec_is_crafted_nonsapient_pop = yes
				#			tec_is_crafted_sentient_pop = yes
				#		}
				#		owner = {
				#			OR = {
				#				has_policy_flag = tec_xenos_jobs_restricted
				#				has_policy_flag = tec_xenos_jobs_servants
				#			}
				#		}
				#		is_same_species = owner_species
				#	}
				#}
				#if = {	# Crafted jobs
				#	limit = {
				#		OR = {
				#			tec_is_crafted_nonsapient_pop = yes
				#			tec_is_crafted_sentient_pop = yes
				#		}
				#		owner = {
				#			OR = {
				#				has_policy_flag = tec_crafted_jobs_restricted
				#				has_policy_flag = tec_crafted_jobs_servants
				#			}
				#		}
				#		NOR = {
				#			has_trait = trait_mechanical
				#			has_trait = trait_tec_bioservant
				#		}
				#	}
				#}
			# /
			NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
			if = {
				limit = {
					divinity_right_to_work_job_check_trigger_exempt = no
				}
				divinity_right_to_work_job_check_trigger_specialist = yes
			}
		]
	}
}

divinity_right_to_work_job_check_trigger_specialist = {
	NOT = {
		planet = {
			tec_planet_divinity_right_to_work_job_check_trigger_specialist = { cached = yes }
		}
	}
}

tec_planet_divinity_right_to_work_job_check_trigger_specialist = {
	[[cached]
		has_planet_flag = tec_cache_tec_planet_divinity_right_to_work_job_check_trigger_specialist
	]
	[[!cached]
		any_owned_pop = {
			is_unemployed = yes
			is_robotic_species = no
			OR = {
				is_pop_category = specialist
				is_pop_category = worker
			}
		}
	]
}


can_fill_worker_job_trigger = {
	custom_tooltip = WORKER_JOB_TRIGGER
	hidden_trigger = {
		[[cached]
			has_pop_flag = tec_cache_can_fill_worker_job_trigger
		]
		[[!cached]
			if = {
				limit = {
					planet = {
						is_planet_class = pc_cosmogenesis_world #Everyone can become a chip slave
					}
				}
				always = yes
			}
			else = {
				NOT = { has_ethic = ethic_gestalt_consciousness }
				exists = owner
				is_being_purged = no
				is_being_assimilated = no
				NOT = { has_citizenship_type = { type = citizenship_organic_trophy country = owner } }
				NAND = {
					has_citizenship_type = { type = citizenship_slavery country = owner }
					OR = {
						has_slavery_type = { type = slavery_livestock country = owner }
						has_slavery_type = { type = slavery_matrix country = owner }
					}
				}
				if = {
					limit = {
						divinity_right_to_work_job_check_trigger_exempt = no
					}
					divinity_right_to_work_job_check_trigger_worker = yes
				}
				# Evolved
					# JOB POLICIES
					#if = {	# Xenos
					#	limit = {
					#		NOR = {
					#			tec_is_crafted_nonsapient_pop = yes
					#			tec_is_crafted_sentient_pop = yes
					#		}
					#		owner = {
					#			has_policy_flag = tec_xenos_jobs_servants
					#		}
					#		is_same_species = owner_species
					#	}
					#}
					#if = {	# Crafted jobs
					#	limit = {
					#		OR = {
					#			tec_is_crafted_nonsapient_pop = yes
					#			tec_is_crafted_sentient_pop = yes
					#		}
					#		owner = {
					#			has_policy_flag = tec_crafted_jobs_servants
					#		}
					#		NOR = {
					#			has_trait = trait_mechanical
					#			has_trait = trait_tec_bioservant
					#		}
					#	}
					#}
				# /
			}
		]
	}
}

divinity_right_to_work_job_check_trigger_worker = {
	NOT = {
		planet = {
			tec_planet_divinity_right_to_work_job_check_trigger_worker = { cached = yes }
		}
	}
}

tec_planet_divinity_right_to_work_job_check_trigger_worker = {
	[[cached]
		has_planet_flag = tec_cache_tec_planet_divinity_right_to_work_job_check_trigger_worker
	]
	[[!cached]
		any_owned_pop = {
			is_unemployed = yes
			is_robotic_species = no
			is_pop_category = worker
		}
	]
}


is_organic_species = {
	species = {
		OR = {
			is_archetype = BIOLOGICAL # original trigger did not include pre-sapient classes
			is_archetype = LITHOID
			is_archetype = REPLICANT
			is_archetype = BIOSERVANT
		}
	}
}


has_shared_burden_living_standard_type = {
	OR = {
		has_living_standard = { type = living_standard_shared_burden }
		has_living_standard = { type = living_standard_tec_shared_ownership }
	}
}

has_worker_ownership_living_standard_type = {
	OR = {
		has_living_standard = { type = living_standard_worker_ownership }
		has_living_standard = { type = living_standard_tec_shared_ownership }
	}
}

has_dystopian_society_living_standard_type = {
	OR = {
		has_living_standard = { type = living_standard_dystopian_society }
		has_living_standard = { type = living_standard_tec_chemical_dystopian_society }
	}
}




# Deprecated
drone_simple_hive_robot_check_trigger = {
	custom_tooltip = DRONE_JOB_TRIGGER
	hidden_trigger = {
		exists = owner
		owner = {
			is_gestalt = yes
			has_technology = tech_robotic_workers
		}
		is_being_purged = no
		AND = {
			has_trait = trait_mechanical
		}
	}
}

prosperity_gospel_check_trigger = {
	has_ethic = ethic_spiritualist
	planet = {
		inline_script = {
			script = tec_read_cache
			scope = planet
			trigger = tec_planet_prosperity_gospel_check_trigger
		}
	}
}

has_research_job = {
	OR = {
		tec_has_research_job = yes
	}
}

is_domestic_robot = {
	OR = {
		has_trait = trait_robot_domestic_protocols
		has_trait = trait_tec_bioservant_domestic_servant
	}

	exists = owner
	has_citizenship_type = {
		type = citizenship_robot_servitude
		country = owner
	}
}