tec_ai_should_reengineer = {
	OR = {
		num_pops > 25
		is_capital = yes
		AND = {
			exists = owner
			owner = { has_void_dweller_origin = yes }
			tec_is_habitat = yes
			tec_is_upgraded_habitat = yes
		}
	}
}

tec_ai_should_enhance = {
	OR = {
		num_pops > 25
		is_capital = yes
	}
}


tec_ai_wants_defensive_starbases = {
	OR = {
		is_homicidal = yes
		has_valid_civic = civic_inwards_perfection
		has_valid_civic = civic_tec_regular_secured_domain
		# hive
		has_valid_civic = civic_tec_hive_eyesinthesky
		has_valid_civic = civic_tec_hive_territorial
		# Machine
		has_valid_civic = civic_tec_machine_voidfirewall
		has_valid_civic = civic_tec_machine_territorial
	}
}

tec_ai_wants_production_starbases = {
	OR = {
		tec_is_trade_gestalt = yes
		has_valid_civic = civic_tec_corporate_navaltraders
	}
}

tec_ai_can_sidereal_habitat = {
	OR = {
		num_pops >= 50
		is_capital = yes
	}
	free_district_slots = 0
}

tec_ai_can_ecu = {
	OR = {
		num_pops >= 70
		is_capital = yes
	}
}

# Ai budgets specific

tec_ai_vd_should_not_stop_expansion_for_habitats = {
	if = {
		limit = {
			is_void_dweller_empire = yes
			years_passed < 50
		}
		check_variable_arithmetic = {
			which = value:tec_ai_vd_habitat_meet_target
			value <= 0
		}

	} else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_should_allocate_ecu_or_relic_budget = {
	OR = {
		# Relic
		AND = {
			has_technology = tech_housing_2
			any_owned_planet = {
				exists = this
				tec_arcology_project_relic_potential = yes
				tec_arcology_project_relic_allow = yes
			}
		}
		# Ecu
		AND = {
			has_ascension_perk = ap_arcology_project
			any_owned_planet = {
				exists = this
				tec_arcology_project_potential = yes
				tec_arcology_project_allow = yes
				tec_ai_can_ecu = yes
			}
		}
	}
}

tec_ai_should_allocate_sidereal_budget = {
	AND = {
		has_ascension_perk = ap_tec_sidereal_arcologies
		any_owned_planet = {
			exists = this
			AND = {
				is_planet_class = pc_habitat
				tec_is_arcology_habitat = no
				OR = {
					tec_is_fully_upgraded_habitat = yes
					has_planet_flag = payback_habitat
				}
			}
			NOT = { has_planet_flag = tec_block_other_specializations }
			tec_ai_can_sidereal_habitat = yes
		}
	}
}

tec_ai_should_allocate_ecu_spec_budget = {
	AND = {
		has_ascension_perk = ap_arcology_project
		any_owned_planet = {
			exists = this
			uses_district_set = city_world
			tec_is_unspecced_city_planet = yes
		}
	}
}

tec_ai_should_allocate_ecoworld_budget = {
	NOR = {
		has_ethic = ethic_fanatic_industrialist
		has_valid_civic = civic_hive_devouring_swarm
	}
	OR = {
		is_ecologist = yes
		has_ascension_perk = ap_mastery_of_nature
	}
	any_owned_planet = {
		exists = this
		NOT = { has_planet_flag = tec_undergoing_ecoworld_project }
		tec_ecoworld_project_potential = yes
		tec_ecoworld_project_allow = yes
		tec_ai_can_ecu = yes
	}
}

tec_ai_should_allocate_repair_shattered_ring_budget = {
	has_technology = tech_mega_engineering
	any_owned_planet = {
		exists = this
		is_planet_class = pc_shattered_ring_habitable
		num_uncleared_blockers < 1
	}
}

tec_ai_should_allocate_reengineer_budget = {
	tec_is_engineer_empire = yes
	any_owned_planet = {
		tec_is_space_arcology = yes
		# Exception - Shattered rings can't be upgraded
			NOT = {
				uses_district_set = shattered_ring_world
			}
		# /
		tec_allow_enhance_planet = yes
		tec_ai_should_reengineer = yes
		if = {
			limit = {
				tec_is_habitat = yes
			}
			free_district_slots = 0 
		}
	}
}

tec_ai_should_allocate_ecologist_fix_budget = {
	tec_is_terraformer_empire = yes
	any_owned_planet = {
		exists = this
		tec_ecologists_have_modifiers_to_fix = yes
		tec_ai_should_enhance = yes
	}
}

tec_ai_should_allocate_ecologist_enhance_budget = {
	tec_is_terraformer_empire = yes
	any_owned_planet = {
		exists = this
		OR = {
			uses_district_set = standard
			tec_is_ringworld = yes
			tec_is_elysium = yes
			tec_is_ecoworld = yes
		}
		tec_allow_enhance_planet = yes
		tec_ai_should_enhance = yes
		num_uncleared_blockers = 0
	}
}

tec_ai_should_allocate_ringworld_blocker_1_budget = {
	has_technology = tech_housing_2
	any_owned_planet = {
		exists = this
		# removed planet check since maybe giga patch would add it to giga rings too
		has_deposit = d_tec_rw_minor_structural_damage
	}
}

tec_ai_should_allocate_ringworld_blocker_2_budget = {
	has_technology = tech_mega_engineering
	any_owned_planet = {
		exists = this
		# removed planet check since maybe giga patch would add it to giga rings too
		NOT = {
			has_deposit = d_tec_rw_minor_structural_damage
		}
		has_deposit = d_tec_rw_minor_structural_damage
	}
}

# Buildings

tec_ai_allow_assembly_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		owner = {
			if = {
				limit = {
					OR = {
						is_machine_empire = yes # machine empires make robots, always
						is_individual_machine = yes
					}
				}
				always = $ROBOTS|no$
			}
			else_if = {
				limit = {
					OR = {
						has_active_tradition = tr_genetics_efficient_cloning
						tec_has_psionic_ascension_path = yes
					}
					# sanity check to not block ai from using other assembly 
					# in case somehow they do not have this type unlocked
					has_technology = tech_cloning
				}
				always = $CLONES|no$
			}
			else_if = {
				limit = {
					OR = {
						tec_is_bioservant_empire = yes
					}
					# sanity check to not block ai from using other assembly 
					# in case somehow they do not have this type unlocked
					has_technology = tech_tec_bioservant
				}
				always = $BIO|no$
			}
			else_if = {
				limit = {
					OR = {
						tec_allows_machine_assembly_for_cyborg = yes
						tec_has_synthetic_ascension_path = yes
						tec_is_machine_cult = yes
					}
					# sanity check to not block ai from using other assembly 
					# in case somehow they do not have this type unlocked
					has_technology = tech_robotic_workers
				}
				always = $ROBOTS|no$
			}
			else_if = {
				limit = {
					has_global_flag = tec_desired_assembly_distributed
					OR = {
						always = $CLONES|no$
						always = $ROBOTS|no$
						always = $BIO|no$
					}
				}
				[[ROBOTS]
					OR = {
						has_country_flag = tec_desires_to_build_robots
					}
				]
				[[!ROBOTS]
					NOR = {
						has_country_flag = tec_desires_to_build_robots
					}
				]
				[[BIO]
					OR = {
						has_country_flag = tec_desires_to_build_bio
					}
				]
				[[!BIO]
					NOR = {
						has_country_flag = tec_desires_to_build_bio
					}
				]
				[[CLONES]
					OR = {
						has_country_flag = tec_desires_to_be_pure
						has_country_flag = tec_desires_to_build_clones
					}
				]
				[[!CLONES]
					NOR = {
						has_country_flag = tec_desires_to_be_pure
						has_country_flag = tec_desires_to_build_clones
					}
				]
			}
			else = {
				always = yes
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_assembly_buildings = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		AND = {
			free_district_slots = 0
			free_housing <= 0
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_housing_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		AND = {
			free_building_slots = 0
			free_housing > 10
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_housing_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		AND = {
			free_district_slots = 0
			free_building_slots > 2
			free_housing < 0
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_amenity_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		tec_has_amenity_jobs_available = no
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_amenity_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		free_amenities > $amenities$
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_trade_building = {
	if = {
		limit = {
			owner = {
				is_ai = yes
			}
		}
		OR = {
			owner = { has_valid_civic = civic_tec_regular_distributism }
			owner = { should_ai_focus_on_trade = yes }
			owner = { has_active_tradition = tr_mercantile_commercial_enterprise }
			has_trade_designation = yes
			num_unemployed > 3
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_trade_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		owner = {
			should_ai_focus_on_trade = no
			NOT = { has_active_tradition = tr_mercantile_commercial_enterprise }
			NOT = { has_valid_civic = civic_tec_regular_distributism }
		}
		has_trade_designation = no

	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_crime_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		tec_has_crime_jobs_available = no
		NOR = {
			has_modifier = crime_lord_deal
			has_modifier = pm_tec_gestalt_crime
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_crime_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		OR = {
			has_modifier = crime_lord_deal
			planet_crime < $crime$
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_foundry_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		OR = {
			tec_has_any_foundry_district = no
			has_factory_designation = yes
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_factory_building = {
	if = {
		limit = {
			owner = { is_ai = yes }
		}
		OR = {
			owner = {
				should_ai_focus_on_trade = yes
				OR = {
					has_policy_flag = trade_conversion_consumer_goods
					has_policy_flag = trade_conversion_trade_league
				}
			}
			tec_has_any_factory_district = no
			has_foundry_designation = yes
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_exotic_dependant_building = { # to not block ai build plans
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		OR = {
			has_building_construction = yes
			owner = {
				resource_stockpile_compare = {
					resource = $exotic$
					value >= @b_exotic_cost
					mult = 2
				}
				has_monthly_income = {
					resource = $exotic$
					value >= @b_exotic_upkeep
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_rare_dependant_building = { # Still blocked the AI so increased stockpile requirements (budgets issue)
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		OR = {
			#works well
			#This allows the building to not get instantly unupgraded by the AI if the allows are not met AFTER the construction started (there is also a problem with it not refunding resources if the construction gets cancelled under these circumstances)
			#Since the AI can't queue stuff, this is a good solution
			has_building_construction = yes
			owner = {
				resource_stockpile_compare = {
					resource = $rare$
					value >= @b$tier$_rare_cost
					mult = 2
				}
				has_monthly_income = {
					resource = $rare$
					value >= @b$tier$_rare_upkeep
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_artifacts_dependant_building = { # to not block ai build plans
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		#See above
		OR = {
			has_building_construction = yes
			owner = {
				resource_stockpile_compare = {
					resource = minor_artifacts
					value >= @b2_rare_cost
					mult = 2
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_fe_alloy_dependant_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		OR = {
			has_building_construction = yes
			owner = {
				resource_stockpile_compare = {
					resource = alloys
					value >= @b$tier$_minerals
					mult = 2
				}
				has_monthly_income = {
					resource = alloys
					value >= @b$tier$_alloy_upkeep
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_fe_rare_dependant_building = { # Still blocked the AI so increased stockpile requirements (budgets issue)
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		OR = {
			#works well
			#This allows the building to not get instantly unupgraded by the AI if the allows are not met AFTER the construction started (there is also a problem with it not refunding resources if the construction gets cancelled under these circumstances)
			#Since the AI can't queue stuff, this is a good solution
			has_building_construction = yes
			owner = {
				resource_stockpile_compare = {
					resource = $rare$
					value >= @fe_sr_cost
					mult = 2
				}
				has_monthly_income = {
					resource = $rare$
					value >= 2
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_refinery_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		tec_has_any_sr_building_or_district = no
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_refinery_building = {
	inline_script = {
		script = tec_type_hint
		resource = $resource$
	}
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		OR = {
			has_refinery_designation = yes
			tec_has_strategic_booster_buildings = yes
			AND = {
				is_capital = no
				owner = {
					has_monthly_income = {
						resource = $resource$
						value < 10
					}
				}
			}
			AND = {
				is_capital = yes
				owner = {
					has_monthly_income = {
						resource = $resource$
						value < 0
					}
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_milacademy_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		check_variable_arithmetic = {
			which = value:military_combined_value|CACHED|yes|
			value <= 0
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_fortress_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		has_fortress_designation = no
		owner = {
			used_naval_capacity_percent < 0.6
			is_at_war = no
		}
		free_building_slots = 0
		solar_system = {
			is_bottleneck_system = no
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_fortress_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		OR = {
			owner = { used_naval_capacity_percent < 0.8 }	# if need naval cap prefer naval academies
			owner = { tec_has_stronghold_buildings_swap = yes }
			owner = { tec_has_soldier_swap = yes }
			has_fortress_designation = yes
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_archaeostudies_faculty = { # basically relocate to relic worthy planet
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		owner = {
			any_owned_planet = {
				exists = this
				OR = {
					tec_is_relic_world = yes
					has_deposit = d_central_spire
					has_deposit = d_former_relic_world
				}
			}
		}
		NOR = {
			tec_is_relic_world = yes
			has_deposit = d_central_spire
			has_deposit = d_former_relic_world
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_research_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		has_research_designation = no
		check_variable_arithmetic = {
			which = value:research_combined_value|CACHED|yes|
			value <= 0
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_energy_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		has_any_generator_district_or_building = no
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_energy_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				#in an ideal world we would have a trigger to check whether or not an empire's stuff costs alloys
				is_machine_empire = no
			}
		}
		OR = {
			owner = { tec_is_labour_hero_empire = yes }
			has_generator_designation = yes
			check_variable_arithmetic = {
				which = value:generator_combined_value|CACHED|yes|
				value >= 6
			}
		}
	}
	else_if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				is_machine_empire = yes
			}
		}
		AND = {
			owner = {
				resource_stockpile_compare = { resource = alloys value > 400 }
			}
			OR = {
				has_generator_designation = yes
				check_variable_arithmetic = {
					which = value:generator_combined_value|CACHED|yes|
					value >= 6
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_energy_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
					tec_is_aquatic_empire = yes
				}
			}
			OR = {
				tec_allows_desiccation = no
				num_buildings = {
					type = building_tec_machine_anglers_extractor
					value = 5
				}
				num_buildings = {
					type = building_tec_machine_anglers_extractor_on
					value = 5
				}
			}
		}
		OR = {
			has_generator_designation = yes
			AND = {
				check_variable_arithmetic = {
					which = value:generator_districts_value|FREE|yes|
					value < 1 
				}
				OR = {
					AND = {
						owner = {
							has_monthly_income = {
								resource = energy
								value < 0
							}
						}
						has_planet_flag = energy_habitat
						has_planet_flag = tec_energy_planet_2
					}
					#Put this here since it's good to always check whether or not we can get more through districts, since buildings take priority over district building
					owner = {
						has_monthly_income = {
							resource = energy
							value < -40
						}
					}
					has_planet_flag = tec_energy_planet_3
					has_planet_flag = tec_energy_planet_4
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_energy_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		has_generator_designation = no
		NOR = {
			has_planet_flag = energy_habitat
			has_planet_flag = tec_energy_planet_2
			has_planet_flag = tec_energy_planet_3
			has_planet_flag = tec_energy_planet_4
		}
		owner = { # out of emergiency
			has_monthly_income = {
				resource = energy
				value > 50
			}
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_minerals_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		has_any_mining_district = no
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_minerals_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				is_machine_empire = no
			}
		}
		OR = {
			owner = { tec_is_labour_hero_empire = yes }
			has_mining_designation = yes
			check_variable_arithmetic = {
				which = value:mining_combined_value|CACHED|yes|
				value >= 6
			}
		}
	}
	else_if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				is_machine_empire = yes
			}
		}
		owner = {
				resource_stockpile_compare = { resource = alloys value > 400 }
			}
		OR = {
			owner = { tec_is_labour_hero_empire = yes }
			has_mining_designation = yes
			check_variable_arithmetic = {
				which = value:mining_combined_value|CACHED|yes|
				value >= 6
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_minerals_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		OR = {
			has_mining_designation = yes
			AND = {
				check_variable_arithmetic = {
					which = value:mining_districts_value|FREE|yes|
					value < 1 
				}
				OR = {
					AND = {
						owner = {
							has_monthly_income = {
								resource = minerals
								value < 0
							}
						}
						has_planet_flag = mining_habitat
						has_planet_flag = tec_mineral_planet_2
					}
					has_planet_flag = tec_mineral_planet_3
					has_planet_flag = tec_mineral_planet_4
				}
			}
			owner = {
				OR = {
					has_void_dweller_origin = yes
					has_monthly_income = {
						resource = minerals
						value < -10
					}
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_minerals_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		has_mining_designation = no
		NOR = {
			has_planet_flag = mining_habitat
			has_planet_flag = tec_mineral_planet_2
			has_planet_flag = tec_mineral_planet_3
			has_planet_flag = tec_mineral_planet_4
		}
		owner = { # out of emergency
			has_void_dweller_origin = no
			has_monthly_income = {
				resource = minerals
				value > 50
			}
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_food_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		OR = {
			owner = { country_uses_food = no }
			has_any_farming_district_or_buildings = no
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}


tec_ai_allow_food_boosting_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				tec_is_biohive = no
				is_machine_empire = no
			}
		}
		owner = { country_uses_food = yes }
		OR = {
			owner = { tec_is_labour_hero_empire = yes }
			has_farming_designation = yes
			check_variable_arithmetic = {
				which = value:farming_combined_value|CACHED|yes|
				value >= 6
			}
		}
	}
	else_if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				OR = {
					tec_is_biohive = yes
					is_machine_empire = yes
				}
				#Prevents from being stuck trying to build stuff we don't have the planet budget for (fuck ai)
			}
		}
		owner = { 
			resource_stockpile_compare = { resource = alloys value > 400 }
			country_uses_food = yes
		}
		OR = {
			owner = { tec_is_labour_hero_empire = yes }
			has_farming_designation = yes
			check_variable_arithmetic = {
				which = value:farming_combined_value|CACHED|yes|
				value >= 6
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}


tec_ai_allow_food_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		OR = {
			has_farming_designation = yes
			AND = {
				check_variable_arithmetic = {
					which = value:farming_districts_value|FREE|yes|
					value < 1 
				}
				OR = {
					AND = {
						owner = {
							has_monthly_income = {
								resource = food
								value < 0
							}
						}
						has_planet_flag = tec_food_habitat
						has_planet_flag = tec_food_planet_2
					}
					has_planet_flag = tec_food_planet_3
					has_planet_flag = tec_food_planet_4
				}
			}
			owner = {
				OR = {
					is_void_dweller_empire = yes
					has_monthly_income = {
						resource = food
						value < -10
					}
				}
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_food_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		has_farming_designation = no
		NOR = {
			has_planet_flag = tec_food_habitat
			has_planet_flag = tec_food_planet_2
			has_planet_flag = tec_food_planet_3
			has_planet_flag = tec_food_planet_4
		}
		owner = { # out of emergency
			has_void_dweller_origin = no
			has_monthly_income = {
				resource = food
				value > 50
			}
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_silo_building = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
			}
		}
		NOR = {
			has_active_building = building_resource_silo
			has_active_building = building_tec_resource_silo_2
			has_active_building = building_tec_resource_silo_3
		}
		OR = {
			owner = {
				is_machine_empire = yes
				has_active_tradition = tr_domination_modular_depot
			}
			is_active_resolution = "resolution_greatergood_balance_in_the_middle"
			is_active_resolution = "resolution_greatergood_universal_prosperity_mandate"
			owner = {
				has_ascension_perk = ap_arcology_project
				NOT = { has_technology = tech_mega_engineering }
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_aiauth_planetary_governing_node_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		owner = {
			has_monthly_income = {
				resource = sr_tec_ai_power
				value > 25
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_cyberpsionic_gate_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		owner = {
			has_monthly_income = {
				resource = sr_zro
				value > 0.5
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

# Starbase
tec_ai_allow_crew_quarters_starbase_building = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		OR = {
			is_starbase_type = sshipyard
			is_starbase_type = sorbital_shipyard
			is_starbase_type = sfortress
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_food_starbase_building = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		has_starbase_module = tec_starbase_m_food
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_energy_starbase_building = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		has_starbase_module = tec_starbase_m_generator
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_minerals_starbase_building = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		has_starbase_module = tec_starbase_m_mining
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_research_starbase_building = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		OR = {
			has_starbase_module = tec_starbase_m_physics
			has_starbase_module = tec_starbase_m_society
			has_starbase_module = tec_starbase_m_engineering
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

# districts

tec_ai_needs_housing_district_housing = {
	free_housing < 1
	free_building_slots >= 0
}

tec_ai_needs_housing_district_building_slots = {
	free_building_slots < 1
	free_district_slots >= 1
}


tec_ai_allow_housing_district = {
	inline_script = {
		script = tec_type_hint
		float = $housing$
		planet_trigger_block = $has_building_slots$
		planet_trigger_block = $use_for_jobs$
	}

	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		OR = {
			AND = {
				free_housing < $housing$
			}
			if = {
				limit = {
					$has_building_slots$
				}
				free_building_slots < 1
				num_buildings = { type = any value < @tec_building_slot_max }
			}
			else = {
				always = no
			}
			AND = { $use_for_jobs$ }
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_rural_district = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		OR = {
			NOT = { has_planet_flag = tec_chosen_ai_ecu }
			tec_is_ecoworld = yes # ecoworld exception
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_generator_district = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		OR = {
			owner = { should_ai_focus_on_trade = no }
			has_planet_flag = tec_eco_res_on # ecoworld exception
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_farming_district = {
	if = {
		limit = { 
			exists = owner
			owner = { is_ai = yes } 
		}
		OR = {
			owner = { country_uses_food = yes }
			AND = {
				has_planet_flag = tec_eco_cg_on # ecoworld exception
				owner = { country_uses_consumer_goods = yes }
			}
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_force_research_habitat_district = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		has_planet_flag = research_habitat
		is_capital = no
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_leisure_district = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				NOT = { has_valid_civic = civic_machine_servitor }
			}
		}
		tec_ai_allow_amenity_building = yes
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_destroy_leisure_district = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_ai = yes
				NOT = { has_valid_civic = civic_machine_servitor }
			}
		}
		tec_ai_destroy_amenity_building = {
			amenities = $amenities$
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

# designations

tec_ai_not_forced_other_designations = {
	[[any]]
	[[!mining]NOT = { has_planet_flag = tec_ai_force_mining_designation}]
	[[!farming]NOT = { has_planet_flag = tec_ai_force_farming_designation}]
	[[!generator]NOT = { has_planet_flag = tec_ai_force_generator_designation}]
	[[!rural]NOT = { has_planet_flag = tec_ai_force_rural_designation}]
	[[!fortress]NOT = { has_planet_flag = tec_ai_force_fortress_designation}]
	[[!factory]NOT = { has_planet_flag = tec_ai_force_factory_designation}]
	[[!industrial]NOT = { has_planet_flag = tec_ai_force_industrial_designation}]
	[[!foundry]NOT = { has_planet_flag = tec_ai_force_foundry_designation}]
	[[!research]NOT = { has_planet_flag = tec_ai_force_research_designation}]
	[[!refinery]NOT = { has_planet_flag = tec_ai_force_refinery_designation}]
	[[!unity]NOT = { has_planet_flag = tec_ai_force_unity_designation}]
	[[!trade]NOT = { has_planet_flag = tec_ai_force_trade_designation }]
}

tec_ai_allow_designation_type_by_planet_type = {
	always = yes
	[[any]]
	if = {
		limit = {
			OR = {
				always = $mining|no$
				always = $farming|no$
				always = $generator|no$
				always = $rural|no$
			}
		}
		if = {
			limit = {
				tec_is_arcology_habitat = yes
			}
			always = no
		}
		if = {
			limit = {
				tec_uses_elysium_districts = yes
			}
			tec_is_unspecced_elysium = yes
		}
		if = {
			limit = {
				tec_is_ringworld = yes
			}
			tec_is_unspecced_ringworld = yes
		}
		[[mining]
			check_variable_arithmetic = {
				which = value:mining_combined_value|CACHED|yes|
				value > 0
			}
		]
		[[farming]
			check_variable_arithmetic = {
				which = value:farming_combined_value|CACHED|yes|
				value > 0
			}
		]
		[[generator]
			check_variable_arithmetic = {
				which = value:generator_combined_value|CACHED|yes|
				value > 0
			}
		]
	}
	[[industrial]
		if = {
			limit = {
				tec_is_arcology_habitat = yes
			}
			has_planet_flag = tec_industrial_habitat
		}
		if = {
			limit = {
				tec_is_city_world = yes
			}
			tec_is_science_city_planet = no
		}
		if = {
			limit = {
				tec_is_ringworld = yes
			}
			tec_is_science_ringworld = no
		}

		check_variable_arithmetic = {
			which = value:industrial_districts_value|CACHED|yes|
			value > 0
		}
	]
	[[factory]
		if = {
			limit = {
				tec_is_arcology_habitat = yes
			}
			has_planet_flag = tec_industrial_habitat
		}
		if = {
			limit = {
				tec_uses_elysium_districts = yes
			}
			tec_is_military_elysium = no
		}
		if = {
			limit = {
				tec_is_city_world = yes
			}
			tec_is_science_city_planet = no
			tec_is_military_city_planet = no
		}
		if = {
			limit = {
				tec_is_ringworld = yes
			}
			tec_is_science_ringworld = no
		}

		check_variable_arithmetic = {
			which = value:industrial_districts_value|CG_ONLY|yes|
			value > 0
		}
	]
	[[foundry]
		if = {
			limit = {
				tec_is_arcology_habitat = yes
			}
			has_planet_flag = tec_industrial_habitat
		}
		if = {
			limit = {
				tec_uses_elysium_districts = yes
			}
			tec_is_civilian_elysium = no
		}
		if = {
			limit = {
				tec_is_city_world = yes
			}
			tec_is_science_city_planet = no
			tec_is_admin_city_planet = no
		}
		if = {
			limit = {
				tec_is_ringworld = yes
			}
			tec_is_science_ringworld = no
		}

		check_variable_arithmetic = {
			which = value:industrial_districts_value|ALLOY_ONLY|yes|
			value > 0
		}
	]
	[[research]
		if = {
			limit = {
				tec_is_arcology_habitat = yes
			}
			has_planet_flag = tec_civil_habitat
		}
		if = {
			limit = {
				tec_uses_elysium_districts = yes
			}
			tec_is_military_elysium = no
		}
		if = {
			limit = {
				tec_is_city_world = yes
			}
			tec_is_military_city_planet = no
			tec_is_admin_city_planet = no
		}
		if = {
			limit = {
				tec_is_ringworld = yes
			}
			tec_is_industry_ringworld = no
		}

		check_variable_arithmetic = {
			which = value:research_combined_value|CACHED|yes|
			value > 1
		}
	]
	[[unity]
		if = {
			limit = {
				tec_is_arcology_habitat = yes
			}
			has_planet_flag = tec_civil_habitat
		}
		if = {
			limit = {
				tec_uses_elysium_districts = yes
			}
			tec_is_military_elysium = no
		}
		if = {
			limit = {
				tec_is_city_world = yes
			}
			tec_is_military_city_planet = no
			tec_is_science_city_planet = no
		}
		if = {
			limit = {
				tec_is_ringworld = yes
			}
			tec_is_industry_ringworld = no
		}

		check_variable_arithmetic = {
			which = value:unity_combined_value|CACHED|yes|
			value > 1
		}
	]
	[[refinery]
		check_variable_arithmetic = {
			which = value:refinery_combined_value|CACHED|yes|
			value > 1
		}
	]
	[[fortress]
		OR = {
			check_variable_arithmetic = {
				which = value:military_combined_value|CACHED|yes|
				value > 1
			}
			solar_system = { is_bottleneck_system = yes }
		}
	]
	[[trade]
		check_variable_arithmetic = {
			which = value:trade_combined_value|CACHED|yes|
			value > 2
		}
	]
}

tec_ai_allow_designation_type = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		designation_type = $type$
	}

	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		NOT = { has_planet_flag = tec_ai_block_$type$_designation }
		tec_ai_allow_designation_type_by_planet_type = { $type$ = yes }
		OR = {
			has_planet_flag = tec_ai_force_$type$_designation
			tec_ai_not_forced_other_designations = { $type$ = yes }
		}

	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_block_non_trade_starbase = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		owner = { should_ai_focus_on_trade = yes }
		solar_system = {
			is_same_value = sector.sector_capital.solar_system
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_block_anchorage = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		solar_system = { is_bottleneck_system = yes }
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_destroy_clinic_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		free_district_slots = 0
		free_housing <= 0
		OR = {
			habitability = {
				who = owner_main_species
				value >= 1
			}
			is_ideal = yes
		}
	}
	else = {
		hidden_trigger = { always = no }
	}
}

tec_ai_allow_city_district_for_jobs = {
	if = {
		limit = {
			exists = owner
			owner = {
				is_regular_empire = yes
			}
		}
		OR = {
			AND = {
				exists = owner
				owner = {
					has_valid_civic = civic_tec_regular_distributism
				}
			}
			tec_has_clerk_jobs_available = no
		}
	} else = {
		tec_has_maintenance_drone_jobs_available = no
	}
}

tec_ai_allow_naval_academy_building = {
	if = {
		limit = {
			exists = owner
			owner = { is_ai = yes }
		}
		OR = {
			is_capital = no
			owner = { num_owned_planets = 1 }
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_allow_strategic_war_edicts = {
	if = {
		limit = {
			is_ai = yes
		}
		OR = {
			is_at_war = yes
			AND = {
				has_crisis = yes
				crisis_happened_and_defeated = no
			}
			has_global_flag = gray_goo_crisis_active
		}
	}
	else = {
		hidden_trigger = { always = yes }
	}
}

tec_ai_can_reduce_colonist_jobs = {
	exists = owner
	owner = {
		NOR = {
			has_valid_civic = civic_tec_corporate_settlers
			has_valid_civic = civic_tec_regular_star_settlers
			tec_is_dystopian_empire = yes
		}
	}
}

tec_ai_can_increase_colonist_jobs = {
	tec_ai_can_reduce_colonist_jobs = no
}

tec_ai_can_reduce_clerk_job = {
	OR = {
		AND = {
			num_unemployed < 1
			free_amenities > 5
		}
		tec_has_possible_job = { job = entertainer }
		tec_has_possible_job = { job = duelist }
	}
	exists = owner
	owner = { should_ai_focus_on_trade = no }
}

tec_ai_can_increase_clerk_job = {
	OR = {
		tec_has_non_emigrant_pops_unemployed = yes
		free_amenities < -10
		AND = {
			exists = owner
			owner = { should_ai_focus_on_trade = yes }
		}
	}
}

tec_ai_can_reduce_maintenance_drone_job = {
	OR = {
		AND = {
			num_unemployed < 1
			free_amenities > 10
		}
		tec_has_possible_job = { job = tec_spareparts_drone }
	}
}

tec_ai_can_increase_maintenance_drone_job = {
	NOR = {
		tec_has_possible_job = { job = tec_spareparts_drone }
	}
	OR = {
		tec_has_non_emigrant_pops_unemployed = yes
		free_amenities < 0
	}
}

tec_ai_can_reduce_crime_job = {
	planet_crime <= 0
	tec_has_crime_modifiers = no
	exists = owner
	owner = {
		tec_is_dystopian_empire = no
	}
}

tec_ai_can_increase_crime_job = {
	OR = {
		tec_has_crime_modifiers = yes
		planet_crime > 27
	}
}

tec_ai_can_reduce_artisan_job = {
	exists = owner
	owner = {
		has_monthly_income = {
			resource = consumer_goods
			value > @[economic_plan_consumer_goods_target * 3]
		}
	}
	NOR = {
		has_industrial_designation = yes
		has_factory_designation = yes
	}
}

tec_ai_can_increase_artisan_job = {
	exists = owner
	OR = {
		owner = {
			has_monthly_income = {
				resource = consumer_goods
				value < @economic_plan_consumer_goods_target
			}
		}
		has_industrial_designation = yes
		has_factory_designation = yes
	}
}