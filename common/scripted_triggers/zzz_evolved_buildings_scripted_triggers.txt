# ----------------- CAPITALS -----------------
	# Regular
		tec_has_regular_capital = {
			is_regular_empire = yes
			is_fallen_empire = no
		}

		tec_has_regular_capital_normal = {
			tec_has_regular_capital = yes
			tec_is_scifi_empire = no
		}

		tec_has_regular_capital_scifi = {
			tec_has_regular_capital = yes
			tec_is_scifi_empire = yes
		}

		tec_has_regular_capital_solarpunk = {
			tec_has_regular_capital = yes
			tec_is_solarpunk_empire = yes
		}

		tec_has_regular_capital_cyberpunk = {
			tec_has_regular_capital = yes
			tec_is_cyberpunk_empire = yes
		}
	# /

	# Hives
		tec_has_hive_capital = {
			OR = {
				is_hive_empire = yes
				is_country_type = swarm
			}
			is_fallen_empire = no
		}

		tec_has_regular_hive_set = {
			tec_has_hive_capital = yes
			tec_is_cyberhive = no
			tec_is_biohive = no
			tec_is_biomech_hive = no
		}

		tec_has_cyberhive_set = {
			tec_has_hive_capital = yes
			tec_is_cyberhive = yes
		}

		tec_has_biohive_set = {
			tec_has_hive_capital = yes
			tec_is_biohive = yes
		}

		tec_has_lithohive_set = {	# DO NOT USE (YET)
			tec_has_hive_capital = yes
			tec_is_biohive = yes
			is_lithoid_empire = no
		}

		tec_has_biomech_hive_set = {
			tec_has_hive_capital = yes
			tec_is_biomech_hive = yes
		}
	# /

	# Machines
		tec_has_machine_capital = {
			OR = {
				is_machine_empire = yes
				is_country_type = ai_empire
				AND = {
					exists = event_target:mechanocalibrator_country
					is_same_value = event_target:mechanocalibrator_country
				}
			}
			is_fallen_empire = no
		}

		tec_has_machine_capital_normal = {
			tec_has_machine_capital = yes
			tec_is_old_machine = no
		}
	# / 

	tec_has_machine_extraction_capital = {
		exists = owner
		owner = {
			is_machine_empire = yes
		}
		OR = {
			has_active_building = building_tec_machine_extraction_deployment_post
			has_active_building = building_tec_machine_extraction_capital
			has_active_building = building_tec_machine_extraction_major_capital
			has_active_building = building_tec_machine_extraction_system_capital
			has_active_building = building_tec_machine_extraction_galactic_capital
		}
	}

	tec_has_machine_production_capital = {
		exists = owner
		owner = {
			is_machine_empire = yes
		}
		OR = {
			has_active_building = building_tec_machine_production_deployment_post
			has_active_building = building_tec_machine_production_capital
			has_active_building = building_tec_machine_production_major_capital
			has_active_building = building_tec_machine_production_system_capital
			has_active_building = building_tec_machine_production_galactic_capital
		}
	}


	tec_has_special_advanced_capital = {	# Planet-scope! - Exists = owner must be declared before!
		OR = {
			AND = { # Galactic emperor
				owner = {
					is_galactic_emperor = yes
				}
				is_capital = yes
			}
			#AND = { # Galactic emperor
			#	owner = {
			#		is_galactic_emperor = yes
			#	}
			#	is_capital = yes
			#}
		}
	}

	tec_has_special_capital = {
		if = {
			limit = {
				owner = { is_regular_empire = yes }
			}
			OR = {
				has_modifier = resort_colony
				has_modifier = slave_colony
			}
		} 
		else_if = {
			limit = {
				owner = { is_hive_empire = yes } 
			}
			always = no
		}
		else_if = {
			limit = {
				owner = { is_machine_empire = yes }
			}
			AND = {
				tec_allows_machine_alt_capitals = yes
				OR = {
					has_planet_flag = tec_replace_machine_capital_to_extraction
					has_planet_flag = tec_replace_machine_capital_to_production
				}
			}
		}
		else = {
			always = no
		}
	}

	tec_has_t1_capital = {	# Colony
		[[cached]
			has_planet_flag = tec_cache_tec_has_t1_capital
		]
		[[!cached]
		if = {
			limit = { has_modifier = resort_colony }
			always = no
		}
		else_if = {
			limit = { has_modifier = slave_colony }
			always = no
		}
		else_if = {
			limit = {
				uses_habitat_capitals = yes
			}
			always = no
		}
		else_if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			OR = {
				has_building = building_tec_hive_sapling
				has_building = building_tec_cyberhive_sapling
				has_building = building_tec_biohive_sapling
			}
		}
		else_if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			OR = {
				has_building = building_deployment_post
				has_building = building_tec_machine_production_deployment_post
				has_building = building_tec_machine_extraction_deployment_post
			}
		}
		else = {
			OR = {
				has_building = building_colony_shelter
				# has_building = building_tec_scifi_shelter
			}
		}
		]
	}

	tec_has_t2_capital = {	# Capital
		[[cached]
			has_planet_flag = tec_cache_tec_has_t2_capital
		]
		[[!cached]
		if = {
			limit = { has_modifier = resort_colony }
			OR = {
				has_building = building_resort_capital
			}
		}
		else_if = {
			limit = { has_modifier = slave_colony }
			OR = {
				has_building = building_slave_capital
			}
		}
		else_if = {
			limit = {
				uses_habitat_capitals = yes
			}
			OR = {
				has_building = building_hab_capital
				has_building = building_tec_hab_machine_capital
				has_building = building_tec_hab_hive_capital
				has_building = building_tec_hab_biohive_capital
				has_building = building_tec_hab_cyberhive_capital
			}
		}
		else_if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			OR = {
				has_building = building_hive_capital
				has_building = building_tec_cyberhive_capital
				has_building = building_tec_biohive_capital
				# External
					# Giga
					inline_script = {
						script = mod_support/tec_giga_present
						code = "
							has_building = building_giga_elysium_host_hive_capital
						"
					}
				# /
			}
		}
		else_if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			OR = {
				has_building = building_machine_capital
				has_building = building_tec_old_machine_capital
				has_building = building_tec_machine_production_capital
				has_building = building_tec_machine_extraction_capital
				# External
					# Giga

					inline_script = {
						script = mod_support/tec_giga_present
						code = "
							has_building = building_giga_elysium_host_machine_capital
						"
					}
				# /
			}
		}
		else = {
			OR = {
				has_building = building_capital
				has_building = building_tec_scifi_capital
				# has_building = building_tec_exo_capital
				# has_building = building_tec_bio_capital
				# has_building = building_tec_kohn_capital
				# External
					# Giga
					inline_script = {
						script = mod_support/tec_giga_present
						code = "
							has_building = building_giga_elysium_host_capital
						"
					}
				# /

			}
		}
		]
	}

	tec_has_t3_capital = {	# Major Capital
		[[cached]
			has_planet_flag = tec_cache_tec_has_t3_capital
		]
		[[!cached]
		if = {
			limit = { has_modifier = resort_colony }
			OR = {
				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_heaven_sanctuary
							has_building = building_ancient_control_center
						"
					}
				# /
			}
		}
		else_if = {
			limit = { has_modifier = slave_colony }
			OR = {
				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_heaven_sanctuary
							has_building = building_ancient_control_center
						"
					}
				# /
			}
		}
		else_if = {
			limit = {
				uses_habitat_capitals = yes
			}
			OR = {
				has_building = building_hab_major_capital
				has_building = building_tec_hab_machine_major_capital
				has_building = building_tec_hab_hive_major_capital
				has_building = building_tec_hab_biohive_major_capital
				has_building = building_tec_hab_cyberhive_major_capital
				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_heaven_sanctuary
							has_building = building_ancient_control_center
						"
					}
				# /
			}
		}
		else_if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			OR = {
				has_building = building_hive_major_capital
				has_building = building_tec_cyberhive_major_capital
				has_building = building_tec_biohive_major_capital

				# External
					# Giga
					inline_script = {
						script = mod_support/tec_giga_present
						code = "
							has_building = building_giga_elysium_host_hive_major_capital
						"
					}
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_heaven_sanctuary
							has_building = building_ancient_control_center
						"
					}
					# All that is GRIMDARK
					has_building = building_hive_major_capital_sick
				# /
			}
		}
		else_if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			OR = {
				has_building = building_machine_major_capital
				has_building = building_tec_old_machine_major_capital
				has_building = building_tec_machine_production_major_capital
				has_building = building_tec_machine_extraction_major_capital
				# External
					# Giga
					inline_script = {
						script = mod_support/tec_giga_present
						code = "
							has_building = building_giga_elysium_host_machine_major_capital
						"
					}
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_heaven_sanctuary
							has_building = building_ancient_control_center
						"
					}
				# /
			}
		}
		else = {
			OR = {
				has_building = building_major_capital
				has_building = building_tec_scifi_major_capital
				# has_building = building_tec_exo_major_capital
				# has_building = building_tec_bio_major_capital
				# has_building = building_tec_kohn_major_capital
				# External
					# Giga
					inline_script = {
						script = mod_support/tec_giga_present
						code = "
							has_building = building_giga_elysium_host_major_capital
						"
					}
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_heaven_sanctuary
							has_building = building_ancient_control_center
						"
					}
				# /
			}
		}
		]
	}

	tec_has_t4_capital = {	# System Capital
		[[cached]
			has_planet_flag = tec_cache_tec_has_t4_capital
		]
		[[!cached]
		if = {
			limit = { has_modifier = resort_colony }
			OR = {
				has_building = building_resort_major_capital
			}
		}
		else_if = {
			limit = { has_modifier = slave_colony }
			OR = {
				has_building = building_slave_major_capital
			}
		}
		else_if = {
			limit = {
				uses_habitat_capitals = yes
			}
			OR = {
				has_building = building_hab_system_capital
				has_building = building_tec_hab_machine_system_capital
				has_building = building_tec_hab_hive_system_capital
				has_building = building_tec_hab_biohive_system_capital
				has_building = building_tec_hab_cyberhive_system_capital
			}
		}
		else_if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			OR = {
				has_building = building_hive_system_capital
				has_building = building_tec_cyberhive_system_capital
				has_building = building_tec_biohive_system_capital
			}
		}
		else_if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			OR = {
				has_building = building_machine_system_capital
				has_building = building_tec_old_machine_system_capital
				has_building = building_tec_machine_production_system_capital
				has_building = building_tec_machine_extraction_system_capital
			}
		}
		else = {
			OR = {
				has_building = building_system_capital
				has_building = building_tec_scifi_system_capital
				# has_building = building_tec_exo_system_capital
				# has_building = building_tec_bio_system_capital
				# has_building = building_tec_kohn_system_capital
				# External
					# All that is GRIMDARK
					has_building = building_system_capital_gr
				# /
			}
		}
		]
	}

	tec_has_t5_capital = {	# Galactic Capital
		[[cached]
			has_planet_flag = tec_cache_tec_has_t5_capital
		]
		[[!cached]
		if = {
			limit = { has_modifier = resort_colony }
			OR = {
				has_building = building_ancient_palace
				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_acot_dm_ancient_palace
							has_building = building_acot_ae_ancient_palace
							has_building = building_phanon_tower
						"
					}
					# AOT
					inline_script = {
						script = mod_support/tec_aot_present
						code = "
							has_building = building_stellarite_palace
							has_building = building_stellarite_control_center
							has_building = building_stellarite_hive_cluster
							has_building = building_phanon_palace
						"
					}
					# Star Wars: Kuat Ancient Empire
					has_building = building_kuat_command_center
					# Twinks Atlantean
					has_building = building_ancient_palace_at
					# Twinks Kaldorei
					has_building = building_nightelf_palace
					# Special Colonies Overhaul
					has_building = building_SCO_resort_system_capital
				# /
			}
		}
		else_if = {
			limit = { has_modifier = slave_colony }
			OR = {
				has_building = building_ancient_palace
				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_acot_dm_ancient_palace
							has_building = building_acot_ae_ancient_palace
							has_building = building_phanon_tower
						"
					}
					# AOT
					inline_script = {
						script = mod_support/tec_aot_present
						code = "
							has_building = building_stellarite_palace
							has_building = building_stellarite_control_center
							has_building = building_stellarite_hive_cluster
							has_building = building_phanon_palace
						"
					}
					# Star Wars: Kuat Ancient Empire
					has_building = building_kuat_command_center
					# Twinks Atlantean
					has_building = building_ancient_palace_at
					# Twinks Kaldorei
					has_building = building_nightelf_palace
					# Special Colonies Overhaul
					has_building = building_SCO_slave_system_capital
				# /
			}
		}
		else_if = {
			limit = { 
				uses_habitat_capitals = yes
			}
			OR = {
				has_building = building_ancient_palace
				has_building = building_ancient_hive_capital
				has_building = building_ancient_control_center
				#External
					# ACOT

					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_acot_dm_ancient_palace
							has_building = building_acot_ae_ancient_palace
							has_building = building_acot_dm_ancient_hive_cluster
							has_building = building_acot_ae_ancient_hive_cluster
							has_building = building_acot_dm_ancient_control_center
							has_building = building_acot_ae_ancient_control_center
							has_building = building_phanon_tower
						"
					}
					# AOT
					inline_script = {
						script = mod_support/tec_aot_present
						code = "
							has_building = building_stellarite_palace
							has_building = building_stellarite_control_center
							has_building = building_stellarite_hive_cluster
							has_building = building_phanon_palace
							has_building = building_phanon_hive_cluster
							has_building = building_phanon_control_center
						"
					}
					# Star Wars: Kuat Ancient Empire
					has_building = building_kuat_command_center
					# Twinks Atlantean
					has_building = building_ancient_palace_at
					# Twinks Kaldorei
					has_building = building_nightelf_palace
					# Twinks Eternal
					has_building = building_eternal_nexus_ai
					has_building = building_eternal_palace
				# /
			}
		}
		else_if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			OR = {
				has_building = building_hive_galactic_capital
				has_building = building_tec_cyberhive_galactic_capital
				has_building = building_tec_biohive_galactic_capital
				has_building = building_ancient_hive_capital

				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_acot_dm_ancient_hive_cluster
							has_building = building_acot_ae_ancient_hive_cluster
							has_building = building_phanon_tower
						"
					}
					# AOT
					inline_script = {
						script = mod_support/tec_aot_present
						code = "
							has_building = building_stellarite_hive_cluster
							has_building = building_phanon_hive_cluster
						"
					}
					# Star Wars: Kuat Ancient Empire
					has_building = building_kuat_command_center
					# galacot
					has_building = building_dm_galactic_hive_capital
					has_building = building_ae_galactic_hive_capital
					has_building = building_stellarite_galactic_hive_capital
				# /
			}
		}
		else_if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			OR = {
				has_building = building_machine_galactic_capital
				has_building = building_tec_old_machine_galactic_capital
				has_building = building_tec_machine_production_galactic_capital
				has_building = building_tec_machine_extraction_galactic_capital
				has_building = building_ancient_control_center
				
				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_acot_dm_ancient_control_center
							has_building = building_acot_ae_ancient_control_center
							has_building = building_phanon_tower
						"
					}
					# AOT
					inline_script = {
						script = mod_support/tec_aot_present
						code = "
							has_building = building_stellarite_control_center
							has_building = building_phanon_control_center
						"
					}
					# Star Wars: Kuat Ancient Empire
					has_building = building_kuat_command_center
					# galacot
					has_building = building_dm_galactic_machine_capital
					has_building = building_ae_galactic_machine_capital
					has_building = building_stellarite_galactic_machine_capital
					# Twinks Eternal
					has_building = building_eternal_nexus_ai
				# /
			}
		}
		else = {
			OR = {
				has_building = building_galactic_capital
				has_building = building_tec_scifi_galactic_capital
				# has_building = building_tec_exo_galactic_capital
				# has_building = building_tec_bio_galactic_capital
				# has_building = building_tec_kohn_galactic_capital
				has_building = building_ancient_palace

				# External
					# ACOT
					inline_script = {
						script = mod_support/tec_acot_present
						code = "
							has_building = building_acot_dm_ancient_palace
							has_building = building_acot_ae_ancient_palace
							has_building = building_phanon_tower
						"
					}
					# AOT
					inline_script = {
						script = mod_support/tec_aot_present
						code = "
							has_building = building_stellarite_palace
							has_building = building_phanon_palace
						"
					}
					# Azur Lane Stellaris DLC
					has_building = @azur_building_mind_capital
					has_building = @azur_building_mind_net_capital	
					# Star Wars: Kuat Ancient Empire
					has_building = building_kuat_command_center
					# Nirvana Empire Project
					has_building = building_nirvana_empire_palace
					# Twinks Atlantean
					has_building = building_ancient_palace_at
					# Twinks Kaldorei
					has_building = building_nightelf_palace
					# Twinks Eternal
					has_building = building_eternal_palace
					# galacot
					has_building = building_stellarite_galactic_capital
					has_building = building_stellarite_galactic_hive_capital
					has_building = building_stellarite_galactic_machine_capital
				# /
			}
		}
		]
	}

	tec_has_imperial_capital = {	# Imperial Capital
		[[cached]
			has_planet_flag = tec_cache_tec_has_imperial_capital
		]
		[[!cached]
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			OR = {
				has_building = building_imperial_hive_capital
				has_building = building_tec_cyberhive_imperial_capital
				has_building = building_tec_biohive_imperial_capital
			}
		}
		else_if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			OR = {
				has_building = building_imperial_machine_capital
				has_building = building_tec_old_machine_imperial_capital
			}
		}
		else = {
			OR = {
				has_building = building_imperial_capital
				has_building = building_tec_scifi_imperial_capital
				# has_building = building_tec_exo_imperial_capital
				# has_building = building_tec_bio_imperial_capital
				# has_building = building_tec_kohn_imperial_capital
			}
		}
		]
	}


	tec_has_compat_full_upgraded_capital = {
		OR = {
			
		}
	}

	tec_has_compat_major_upgraded_capital = {
		OR = {
			
		}
	}

	tec_has_compat_upgraded_capital = {
		OR = {
			
		}
	}
# /

# ------------------------------------------------- Branch offices
	tec_requires_branch_capital = {
		custom_tooltip = {
			fail_text = "tec_requires_branch_capital"
			OR = {
				has_holding = {
					holding = building_tec_corp_capital_1
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_corp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_corp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_crimecorp_capital_1
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_crimecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_crimecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_hivecorp_capital_1
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_hivecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_hivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_ciberhivecorp_capital_1
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_ciberhivecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_ciberhivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_biohivecorp_capital_1
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_biohivecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_biohivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_machinecorp_capital_1
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_machinecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_machinecorp_capital_3
					owner = branch_office_owner
				}
			}
		}
	}

	tec_requires_upgraded_branch_capital = {
		custom_tooltip = {
			fail_text = "tec_requires_upgraded_branch_capital"
			OR = {
				has_holding = {
					holding = building_tec_corp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_corp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_crimecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_crimecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_hivecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_hivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_ciberhivecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_ciberhivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_biohivecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_biohivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_machinecorp_capital_2
					owner = branch_office_owner
				}
				has_holding = {
					holding = building_tec_machinecorp_capital_3
					owner = branch_office_owner
				}
			}
		}
	}

	tec_requires_fully_upgraded_branch_capital = {
		custom_tooltip = {
			fail_text = "tec_requires_fully_upgraded_branch_capital"
			OR = {
				has_holding = {
					holding = building_tec_corp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_crimecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_hivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_ciberhivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_biohivecorp_capital_3
					owner = branch_office_owner
				}

				has_holding = {
					holding = building_tec_machinecorp_capital_3
					owner = branch_office_owner
				}
			}
		}
	}

	tec_has_branch_capital = {
		OR = {
			has_holding = {
				holding = building_tec_corp_capital_1
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_corp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_corp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_crimecorp_capital_1
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_crimecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_crimecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_hivecorp_capital_1
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_hivecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_hivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_ciberhivecorp_capital_1
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_ciberhivecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_ciberhivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_biohivecorp_capital_1
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_biohivecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_biohivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_machinecorp_capital_1
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_machinecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_machinecorp_capital_3
				owner = branch_office_owner
			}
		}
	}

	tec_has_basic_branch_capital = {
		OR = {
			has_holding = {
				holding = building_tec_corp_capital_1
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_crimecorp_capital_1
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_hivecorp_capital_1
					owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_ciberhivecorp_capital_1
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_biohivecorp_capital_1
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_machinecorp_capital_1
				owner = branch_office_owner
			}
		}
	}

	tec_has_upgraded_branch_capital = {
		OR = {
			has_holding = {
				holding = building_tec_corp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_corp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_crimecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_crimecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_hivecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_hivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_ciberhivecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_ciberhivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_biohivecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_biohivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_machinecorp_capital_2
				owner = branch_office_owner
			}
			has_holding = {
				holding = building_tec_machinecorp_capital_3
				owner = branch_office_owner
			}

			# ai trick
			#has_building_construction = AI_building_tec_corp_capital_2
			#has_building_construction = AI_building_tec_corp_capital_3

			#has_building_construction = AI_building_tec_crimecorp_capital_2
			#has_building_construction = AI_building_tec_crimecorp_capital_3

			#has_building_construction = AI_building_tec_hivecorp_capital_2
			#has_building_construction = AI_building_tec_hivecorp_capital_3

			#has_building_construction = AI_building_tec_ciberhivecorp_capital_2
			#has_building_construction = AI_building_tec_ciberhivecorp_capital_3

			#has_building_construction = AI_building_tec_biohivecorp_capital_2
			#has_building_construction = AI_building_tec_biohivecorp_capital_3

			#has_building_construction = AI_building_tec_machinecorp_capital_2
			#has_building_construction = AI_building_tec_machinecorp_capital_3
		}
	}

	tec_has_fully_upgraded_branch_capital = {
		OR = {
			has_holding = {
				holding = building_tec_corp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_crimecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_hivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_ciberhivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_biohivecorp_capital_3
				owner = branch_office_owner
			}

			has_holding = {
				holding = building_tec_machinecorp_capital_3
				owner = branch_office_owner
			}

			# ai trick
			#has_building_construction = AI_building_tec_corp_capital_3

			#has_building_construction = AI_building_tec_crimecorp_capital_3

			#has_building_construction = AI_building_tec_hivecorp_capital_3

			#has_building_construction = AI_building_tec_ciberhivecorp_capital_3

			#has_building_construction = AI_building_tec_biohivecorp_capital_3

			#has_building_construction = AI_building_tec_machinecorp_capital_3
		}
	}
# /

# ------------------------------------------------- Designation Triggers
# /

# ------------------------------------------------- Building Checkers
 # ------- Energy
	tec_has_energy_buildings = {
		check_variable_arithmetic = {
			which = value:generator_buildings_value
			value > 2
		}
	}
	tec_has_energy_processing_buildings = {
		OR = {
			has_building = building_energy_grid
			has_building = building_energy_nexus
			has_building = building_energy_complex
		}
	}
	tec_has_energy_districts = {
		check_variable_arithmetic = {
			which = value:generator_districts_value
			value > 4
		}
	}
 # ------- Mining
	tec_has_mining_buildings = {
		check_variable_arithmetic = {
			which = value:mining_buildings_value
			value > 2
		}
	}
	tec_has_mineral_processing_buildings = {
		OR = {
			has_building = building_mineral_purification_plant
			has_building = building_mineral_purification_hub
			has_building = building_mineral_purification_complex
		}
	}
	tec_has_mining_districts = {
		check_variable_arithmetic = {
			which = value:mining_districts_value
			value > 4
		}
	}

 # ------- Farming
	tec_has_farming_buildings = {
		check_variable_arithmetic = {
			which = value:farming_buildings_value
			value > 2
		}
	}
	tec_has_food_processing_buildings = {
		OR = {
			has_building = building_food_processing_facility
			has_building = building_food_processing_center
			has_building = building_food_processing_complex
		}
	}
	tec_has_farming_districts = {
		check_variable_arithmetic = {
			which = value:farming_districts_value
			value > 4
		}
	}

 # ------- Industrial
	tec_has_industrial_districts = {
		check_variable_arithmetic = {
			which = value:industrial_districts_value
			value > 4
		}
	}
	tec_has_industrial_districts_moderate = {
		check_variable_arithmetic = {
			which = value:industrial_districts_value
			value > 6
		}
	}
	tec_has_industrial_districts_high = {
		check_variable_arithmetic = {
			which = value:industrial_districts_value
			value > 8
		}
	}

 # ------- Alloys
	tec_has_alloy_buildings = {
		OR = {
			has_building = building_foundry_1
			has_building = building_foundry_2
			has_building = building_foundry_3
		}
	}
 # ------- CG
	tec_has_cg_buildings = {
		OR = {
			has_building = building_factory_1
			has_building = building_factory_2
			has_building = building_factory_3
		}
	}
 # ------- Unity
 # ------- Research
	tec_has_research_buildings = {
		check_variable_arithmetic = {
			which = value:research_buildings_value
			value > 2
		}
	}

	tec_has_research_districts = {
		check_variable_arithmetic = {
			which = value:research_districts_value
			value > 2
		}
	}
 # ------- Rare resource
	tec_has_motes_buildings = {
		check_variable_arithmetic = {
			which = value:motes_buildings_value
			value > 2
		}
	}

	tec_has_crystals_buildings = {
		check_variable_arithmetic = {
			which = value:crystals_buildings_value
			value > 2
		}
	}
	tec_has_gases_buildings = {
		check_variable_arithmetic = {
			which = value:gases_buildings_value
			value > 2
		}
	}
# /

tec_planet_has_building_or_construction = {
	inline_script = {
		script = tec_type_hint
		building = $building$
	}
	OR = {
		has_building = $building$
		has_building_construction = $building$
	}
}

# ------------------------------------------------- Assembly
 # ------- Robotic assembly
	tec_has_t1_robotic_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_robot_assembly_plant
			has_building[[construction]_construction] = building_hive_robot_assembly_plant
			has_building[[construction]_construction] = building_mecha_monastery_1
		}
	}
	tec_has_t2_robotic_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_robot_assembly_complex
			has_building[[construction]_construction] = building_hive_robot_assembly_plant_2
			has_building[[construction]_construction] = building_mecha_monastery_2
		}
	}
	tec_has_t3_robotic_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_robot_assembly_plant_3
			has_building[[construction]_construction] = building_hive_robot_assembly_plant_3
			has_building[[construction]_construction] = building_mecha_monastery_3
		}
	}

	tec_has_robotic_assembly_buildings = {
		text = "tec_has_robotic_assembly_buildings"
		OR = {
			tec_has_t1_robotic_assembly_buildings = yes
			tec_has_t1_robotic_assembly_buildings = { construction = yes }
			tec_has_t2_robotic_assembly_buildings = yes
			tec_has_t2_robotic_assembly_buildings = { construction = yes }
			tec_has_t3_robotic_assembly_buildings = yes
			tec_has_t3_robotic_assembly_buildings = { construction = yes }
		}
	}
	tec_has_upgraded_robotic_assembly_buildings = {
		OR = {
			tec_has_t2_robotic_assembly_buildings = yes
			tec_has_t3_robotic_assembly_buildings = yes
		}
	}

	tec_has_fully_upgraded_robotic_assembly_buildings = {
		OR = {
			tec_has_t3_robotic_assembly_buildings = yes
		}
	}

 # ------- Bioservant
	tec_has_t1_bioservant_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_bioservant_plant_1
			has_building[[construction]_construction] = building_tec_hive_bioservant_plant_1
		}
	}
	tec_has_t2_bioservant_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_bioservant_plant_2
			has_building[[construction]_construction] = building_tec_hive_bioservant_plant_2
		}
	}
	tec_has_t3_bioservant_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_bioservant_plant_3
			has_building[[construction]_construction] = building_tec_hive_bioservant_plant_3
		}
	}

	tec_has_bioservant_assembly_buildings = {
		text = "tec_has_bioservant_assembly_buildings"
		OR = {
			tec_has_t1_bioservant_assembly_buildings = yes
			tec_has_t1_bioservant_assembly_buildings = { construction = yes }
			tec_has_t2_bioservant_assembly_buildings = yes
			tec_has_t2_bioservant_assembly_buildings = { construction = yes }
			tec_has_t3_bioservant_assembly_buildings = yes
			tec_has_t3_bioservant_assembly_buildings = { construction = yes }
		}
	}

	tec_has_upgraded_bioservant_assembly_buildings = {
		OR = {
			tec_has_t2_bioservant_assembly_buildings = yes
			tec_has_t3_bioservant_assembly_buildings = yes
		}
	}

	tec_has_fully_upgraded_bioservant_assembly_buildings = {
		OR = {
			tec_has_t3_bioservant_assembly_buildings = yes
		}
	}

 # ------- Cloning
	tec_has_t1_cloning_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_clone_vats
		}
	}
	tec_has_t2_cloning_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_clone_vats_2
		}
	}
	tec_has_t3_cloning_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_clone_vats_3
		}
	}

	tec_has_cloning_assembly_buildings = {
		text = "tec_has_cloning_assembly_buildings"
		OR = {
			tec_has_t1_cloning_assembly_buildings = yes
			tec_has_t1_cloning_assembly_buildings = { construction = yes }
			tec_has_t2_cloning_assembly_buildings = yes
			tec_has_t2_cloning_assembly_buildings = { construction = yes }
			tec_has_t3_cloning_assembly_buildings = yes
			tec_has_t3_cloning_assembly_buildings = { construction = yes }
		}
	}
	tec_has_upgraded_cloning_assembly_buildings = {
		OR = {
			tec_has_t2_cloning_assembly_buildings = yes
			tec_has_t3_cloning_assembly_buildings = yes
		}
	}
	tec_has_fully_upgraded_cloning_assembly_buildings = {
		OR = {
			tec_has_t3_cloning_assembly_buildings = yes
		}
	}

 # ------- Cytogenesis
	tec_has_t1_genetic_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_gene_clinic_1
		}
	}
	tec_has_t2_genetic_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_gene_clinic_2
		}
	}
	tec_has_t3_genetic_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_gene_clinic_3
		}
	}

	tec_has_genetic_assembly_buildings = {
		text = "tec_has_genetic_assembly_buildings"
		OR = {
			tec_has_t1_genetic_assembly_buildings = yes
			tec_has_t1_genetic_assembly_buildings = { construction = yes }
			tec_has_t2_genetic_assembly_buildings = yes
			tec_has_t2_genetic_assembly_buildings = { construction = yes }
			tec_has_t3_genetic_assembly_buildings = yes
			tec_has_t3_genetic_assembly_buildings = { construction = yes }
		}
	}

	tec_has_upgraded_genetic_assembly_buildings = {
		OR = {
			tec_has_t2_genetic_assembly_buildings = yes
			tec_has_t3_genetic_assembly_buildings = yes
		}
	}

	tec_has_fully_upgraded_genetic_assembly_buildings = {
		OR = {
			tec_has_t3_genetic_assembly_buildings = yes
		}
	}

 # ------- Zombie
	tec_has_zombie_assembly_buildings = {
		text = "tec_has_zombie_assembly_buildings"
		has_building = building_posthumous_employment_center
	}

 # ------- Spawning pool
	tec_has_t1_spawning_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_spawning_pool
		}
	}
	tec_has_t2_spawning_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_spawning_pool_2
		}
	}
	tec_has_t3_spawning_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_spawning_pool_3
		}
	}

	tec_has_spawning_assembly_buildings = {
		text = "tec_has_spawning_assembly_buildings"
		OR = {
			tec_has_t1_spawning_assembly_buildings = yes
			tec_has_t1_spawning_assembly_buildings = { construction = yes }
			tec_has_t2_spawning_assembly_buildings = yes
			tec_has_t2_spawning_assembly_buildings = { construction = yes }
			tec_has_t3_spawning_assembly_buildings = yes
			tec_has_t3_spawning_assembly_buildings = { construction = yes }
		}
	}

	tec_has_upgraded_spawning_assembly_buildings = {
		OR = {
			tec_has_t2_spawning_assembly_buildings = yes
			tec_has_t3_spawning_assembly_buildings = yes
		}
	}

	tec_has_fully_upgraded_spawning_assembly_buildings = {
		OR = {
			tec_has_t3_spawning_assembly_buildings = yes
		}
	}

 # ------- Machine assembly
	tec_has_t1_machine_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_machine_assembly_plant
		}
	}
	tec_has_t2_machine_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_machine_assembly_complex
		}
	}
	tec_has_t3_machine_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_machine_assembly_plant_3
		}
	}

	tec_has_machine_assembly_buildings = {
		text = "tec_has_machine_assembly_buildings"
		OR = {
			tec_has_t1_machine_assembly_buildings = yes
			tec_has_t1_machine_assembly_buildings = { construction = yes }
			tec_has_t2_machine_assembly_buildings = yes
			tec_has_t2_machine_assembly_buildings = { construction = yes }
			tec_has_t3_machine_assembly_buildings = yes
			tec_has_t3_machine_assembly_buildings = { construction = yes }
		}
	}

	tec_has_upgraded_machine_assembly_buildings = {
		OR = {
			tec_has_t2_machine_assembly_buildings = yes
			tec_has_t3_machine_assembly_buildings = yes
		}
	}

	tec_has_fully_upgraded_machine_assembly_buildings = {
		OR = {
			tec_has_t3_machine_assembly_buildings = yes
		}
	}
 # ------- Mixed category
	tec_has_t1_mixed_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_mechadendrite_assembler_1
			has_building[[construction]_construction] = building_tec_nanite_assembler_1
		}
	}

	tec_has_t2_mixed_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_mechadendrite_assembler_2
			has_building[[construction]_construction] = building_tec_nanite_assembler_2
		}
	}

	tec_has_t3_mixed_assembly_buildings = {
		OR = {
			has_building[[construction]_construction] = building_tec_mechadendrite_assembler_3
			has_building[[construction]_construction] = building_tec_nanite_assembler_3
		}
	}

	tec_has_mixed_assembly_buildings = {
		text = "tec_has_mixed_assembly_buildings"
		OR = {
			tec_has_t1_mixed_assembly_buildings = yes
			tec_has_t1_mixed_assembly_buildings = { construction = yes }
			tec_has_t2_mixed_assembly_buildings = yes
			tec_has_t2_mixed_assembly_buildings = { construction = yes }
			tec_has_t3_mixed_assembly_buildings = yes
			tec_has_t3_mixed_assembly_buildings = { construction = yes }
		}
	}

	tec_has_upgraded_mixed_assembly_buildings = {
		OR = {
			tec_has_t2_mixed_assembly_buildings = yes
			tec_has_t3_mixed_assembly_buildings = yes
		}
	}

	tec_has_fully_upgraded_mixed_assembly_buildings = {
		OR = {
			tec_has_t3_mixed_assembly_buildings = yes
		}
	}
 # ------- Other/Origins
	tec_has_clone_origin_buildings = {
		OR = {
			has_building = building_clone_army_clone_vat
		}
	}

	tec_has_t1_clinic_buildings = {
		OR = {
			has_building[[construction]_construction] = building_clinic
			has_building[[construction]_construction] = building_tec_cybernetic_hospital_1
			has_building[[construction]_construction] = building_tec_cybernetic_hospital_gestalt_1
		}
	}

	tec_has_t2_clinic_buildings = {
		OR = {
			has_building[[construction]_construction] = building_hospital
			has_building[[construction]_construction] = building_tec_cybernetic_hospital_2
			has_building[[construction]_construction] = building_tec_cybernetic_hospital_gestalt_2
		}
	}

	tec_has_t3_clinic_buildings = {
		OR = {
			has_building[[construction]_construction] = building_hospital_3
			has_building[[construction]_construction] = building_tec_cybernetic_hospital_3
			has_building[[construction]_construction] = building_tec_cybernetic_hospital_gestalt_3
		}
	}

	tec_has_clinic_buildings = {
		text = "tec_has_clinic_buildings"
		OR = {
			tec_has_t1_clinic_buildings = yes
			tec_has_t1_clinic_buildings = { construction = yes }
			tec_has_t2_clinic_buildings = yes
			tec_has_t2_clinic_buildings = { construction = yes }
			tec_has_t3_clinic_buildings = yes
			tec_has_t3_clinic_buildings = { construction = yes }
		}
	}

	tec_has_upgraded_clinic_buildings = {
		OR = {
			tec_has_t2_clinic_buildings = yes
			tec_has_t3_clinic_buildings = yes
		}
	}

	tec_has_fully_upgraded_clinic_buildings = {
		OR = {
			tec_has_t3_clinic_buildings = yes
		}
	}

 # ------- Sorter
 # ------- Declaration
	tec_has_assembly_buildings = {
		#text = "tec_has_assembly_buildings"
		OR = {
			tec_has_robotic_assembly_buildings = yes
			tec_has_bioservant_assembly_buildings = yes
			tec_has_cloning_assembly_buildings = yes
			tec_has_machine_assembly_buildings = yes
			tec_has_genetic_assembly_buildings = yes
			tec_has_spawning_assembly_buildings = yes
			tec_has_mixed_assembly_buildings = yes
			# Origins
			tec_has_clone_origin_buildings = yes
			# PD
			tec_has_pd_biosynth_assembly_buildings = yes
		}
	}
	tec_only_one_assembly_building = {
		text = "tec_only_one_assembly_building_on_planet"
		hidden_trigger = {
			OR = {
				tec_has_robotic_assembly_buildings = yes
				tec_has_bioservant_assembly_buildings = yes
				tec_has_cloning_assembly_buildings = yes
				tec_has_machine_assembly_buildings = yes
				tec_has_genetic_assembly_buildings = yes
				tec_has_spawning_assembly_buildings = yes
				tec_has_mixed_assembly_buildings = yes
				# Civics
				owner = {
					has_valid_civic = civic_tec_machine_reimaginator_cluster
				}
				# Origins
				tec_has_clone_origin_buildings = yes
				# PD
				tec_has_pd_biosynth_assembly_buildings = yes
			}
		}
	}

 # ------- Rules

	tec_planet_special_blocks_assembly_buildings = {
		OR = {
			has_modifier = resort_colony
			has_modifier = gestation_colony

			inline_script = {
				script = mod_support/tec_trigger_include
				trigger = tec_planet_special_blocks_assembly_buildings
			}
		}
	}
	

	tec_invalidates_assembly_buildings = {
		OR = {
			owner = {
				OR = {
					has_valid_civic = civic_tec_machine_reimaginator_cluster
				}
			}
			# planet stuff
			inline_script = {
				script = mod_support/tec_trigger_include
				trigger = tec_invalidates_assembly_buildings
			}
		}
	}

	tec_has_t1_assembly_building = {
		OR = {
			tec_has_t1_robotic_assembly_buildings = yes
			tec_has_t1_bioservant_assembly_buildings = yes
			tec_has_t1_cloning_assembly_buildings = yes
			tec_has_t1_genetic_assembly_buildings = yes
			tec_has_t1_spawning_assembly_buildings = yes
			tec_has_t1_machine_assembly_buildings = yes
			tec_has_t1_mixed_assembly_buildings = yes

			inline_script = {
				script = mod_support/tec_trigger_include
				trigger = tec_has_t1_assembly_building
			}
		}
	}

	tec_has_t2_assembly_building = {
		OR = {
			tec_has_t2_robotic_assembly_buildings = yes
			tec_has_t2_bioservant_assembly_buildings = yes
			tec_has_t2_cloning_assembly_buildings = yes
			tec_has_t2_genetic_assembly_buildings = yes
			tec_has_t2_spawning_assembly_buildings = yes
			tec_has_t2_machine_assembly_buildings = yes
			tec_has_t2_mixed_assembly_buildings = yes

			inline_script = {
				script = mod_support/tec_trigger_include
				trigger = tec_has_t2_assembly_building
			}
		}
	}

	tec_has_t3_assembly_building = {
		OR = {
			tec_has_t3_robotic_assembly_buildings = yes
			tec_has_t3_bioservant_assembly_buildings = yes
			tec_has_t3_cloning_assembly_buildings = yes
			tec_has_t3_genetic_assembly_buildings = yes
			tec_has_t3_spawning_assembly_buildings = yes
			tec_has_t3_machine_assembly_buildings = yes
			tec_has_t3_mixed_assembly_buildings = yes

			inline_script = {
				script = mod_support/tec_trigger_include
				trigger = tec_has_t3_assembly_building
			}
		}
	}
 # ------- Exceptions
	# Species trigger
	tec_is_owner_pure_species = {
		species = {
			OR = {
				is_same_value = owner_main_species
				has_species_flag = tec_pure_species_@root.owner
			}
			is_organic_species = yes
		}
	}
# /

# ------------------------------------------------- Strategic Resources
	tec_has_strategic_booster_buildings = {
		OR = {
			has_building = building_mote_harvesters
			has_building = building_tec_biohive_mote_harvesters
			#has_building = building_tec_lithohive_mote_harvesters

			has_building = building_crystal_mines
			has_building = building_tec_biohive_crystal_mines
			#has_building = building_tec_lithohive_crystal_mines

			has_building = building_gas_extractors
			has_building = building_tec_biohive_gas_extractors
			#has_building = building_tec_lithohive_gas_extractors

			has_building = building_tec_strategic_miner
			has_building = building_tec_biohive_strategic_miner
			#has_building = building_tec_lithohive_strategic_miner
		}
	}
	tec_only_one_strategic_booster_group = {
	 [[STRATEGIC_MINER]
		text = "tec_only_one_strategic_booster_group_on_planet_miner"
		hidden_trigger = {
			NOR = {
				has_building = building_mote_harvesters
				has_building_construction = building_mote_harvesters
				has_building = building_tec_biohive_mote_harvesters
				has_building_construction = building_tec_biohive_mote_harvesters
				#has_building = building_tec_lithohive_mote_harvesters
				#has_building_construction = building_tec_lithohive_mote_harvesters

				has_building = building_crystal_mines
				has_building_construction = building_crystal_mines
				has_building = building_tec_biohive_crystal_mines
				has_building_construction = building_tec_biohive_crystal_mines
				#has_building = building_tec_lithohive_crystal_mines
				#has_building_construction = building_tec_lithohive_crystal_mines

				has_building = building_gas_extractors
				has_building_construction = building_gas_extractors
				has_building = building_tec_biohive_gas_extractors
				has_building_construction = building_tec_biohive_gas_extractors
				#has_building = building_tec_lithohive_gas_extractors
				#has_building_construction = building_tec_lithohive_gas_extractors
			}
		}
	 ]
	 [[!STRATEGIC_MINER]
		text = "tec_only_one_strategic_booster_group_on_planet_artificial"
		hidden_trigger = {
			NOR = {
				has_building = building_tec_strategic_miner
				has_building_construction = building_tec_strategic_miner
				has_building = building_tec_biohive_strategic_miner
				has_building_construction = building_tec_biohive_strategic_miner
				#has_building = building_tec_lithohive_strategic_miner
				#has_building_construction = building_tec_lithohive_strategic_miner
			}
		}
	 ]
	}
# /

tec_has_desiccation = {
	OR = {
		has_modifier = pm_tec_desiccation_1
		has_modifier = pm_tec_desiccation_2
		has_modifier = pm_tec_desiccation_3
	}
}

tec_allows_desiccation = {
	tec_is_standard_like_planet = yes
	# exceptions
	tec_is_relic_world = no
	# generic
	is_artificial = no
	habitable_structure = no
	# pd
	inline_script = {
		script = mod_support/tec_pd_present
		code = "
			pd_unique_modifier = no
			pd_aw_is_superproject_class = no
		"
	}
}

tec_planet_allows_gaiaseeders = {
	uses_district_set = standard
	tec_is_perfect_planet = no
	tec_is_gaia_world = no
	tec_is_relic_world = no
	tec_is_hive_world = no
	tec_is_machine_world = no
	tec_is_city_world = no
	# Generic
	is_artificial = no
	# PD
	inline_script = {
		script = mod_support/tec_pd_present
		code = "
			pd_is_domed_colony_class = no
		"
	}
	inline_script = {
		script = mod_support/tec_pd_uniques_present
		code = "
			pd_unique_modifier = no
		"
	}
	inline_script = {
		script = mod_support/tec_pd_ascensions_present
		code = "
			pd_aw_is_superproject_class = no
			pd_aw_cant_terraform = no
		"
	}
}


tec_energy_prod_building_exception = {
	OR = {
		has_planet_flag = energy_habitat
		has_planet_flag = pd_energy_hab
		check_modifier_value = {
			modifier = district_hab_energy_max
			value > 0
		}
	}
}

tec_mining_prod_building_exception = {
	OR = {
		has_planet_flag = mining_habitat
		has_planet_flag = pd_mining_hab
		check_modifier_value = {
			modifier = district_hab_mining_max
			value > 0
		}
	}
}

tec_planet_allows_automation = {
	[[cached]
		has_planet_flag = tec_cache_tec_planet_allows_automation
	]
	[[!cached]
	exists = owner
	owner = {
		tec_is_automated_empire = yes
	}
	if = {
		limit = {
			exists = owner 
			owner = {
				is_machine_empire = yes
			}
		}
		tec_has_machine_extraction_capital = yes
	}
	else = {
		NOT = {
			has_planet_flag = tec_automation_mechanic_off
		}
	}
	]
}

tec_allows_machine_alt_capitals = {
	OR = {
		uses_district_set = standard
		tec_has_rural_mimics = yes

		inline_script = {
			script = mod_support/tec_trigger_include
			trigger = tec_allows_machine_alt_capitals
		}
	}
}

# Planet scope
tec_not_blocked_by_orbital_building = {
	if = {
		limit = {
			exists = orbital_defence
		}
		orbital_defence = {
			exists = starbase
			starbase = {
				NOR = {
					has_starbase_building = $building$
					is_starbase_building_building = $building$
				}
			}
		}
	}
	else = {
		always = yes
	}
}

tec_not_blocker_by_planet_building = {
	planet = {
		NOR = {
			has_building_construction = $building$
			has_building = $building$
		}
	}
}


tec_can_any_pop_work_precinct_house = {
	if = {
		limit = {
			owner = { tec_has_enforcer_swap = no }
		}
		any_owned_pop = { 
			can_work_specific_job = enforcer 
		}
	}
	else = {
		always = yes
	}
}

tec_can_any_pop_work_sentinel_posts = {
	if = {
		limit = {
			owner = { tec_has_patrol_drone_swap = no }
		}
		any_owned_pop = { 
			can_work_specific_job = patrol_drone 
		}
	} 
	else = {
		always = yes
	}
}

tec_can_any_pop_work_holo_theatres = {
	if = {
		limit = {
			owner = { tec_has_entertainer_swap = no }
		}
		any_owned_pop = { 
			can_work_specific_job = entertainer 
		}
	}
	else_if = {
		limit = {
			owner = { has_valid_civic = civic_warrior_culture }
		}
		any_owned_pop = { 
			can_work_specific_job = duelist 
		}
	}
	else = {
		always = yes
	}
}

tec_can_any_pop_work_clinic = {
	any_owned_pop = { 
		can_work_specific_job = healthcare 
	}
}

tec_can_any_pop_work_tec_cybernetic_hospital_1 = {
	any_owned_pop = { 
		can_work_specific_job = tec_cyborg_ripperdoc 
	}
}

tec_can_any_pop_work_tec_gestalt_parts_1 = {
	any_owned_pop = { 
		can_work_specific_job = tec_spareparts_drone 
	}
}

tec_can_any_pop_work_tec_cybernetic_hospital_gestalt_1 = {
	any_owned_pop = { 
		can_work_specific_job = tec_cyborg_ripperdoc_drone 
	}
}


tec_has_any_foundry_district = {
	check_variable_arithmetic = {
		which = value:industrial_districts_value|ALLOY_ONLY|yes|
		value > 0
	}
}

tec_has_any_factory_district = {
	check_variable_arithmetic = {
		which = value:industrial_districts_value|CG_ONLY|yes|
		value > 0
	}
}

tec_has_crime_modifiers = {
	OR = {
		has_modifier = criminal_underworld
		has_modifier = gang_wars
		has_modifier = center_of_drug_trade
		has_modifier = mob_rule
		has_modifier = crime_wave
		has_modifier = cartel_war
		has_modifier = corrupt_administration
		has_modifier = criminal_gambling
		has_modifier = trade_pilfering
		has_modifier = drone_deviancy
		has_modifier = drone_corruption
		has_modifier = drone_signal_interference
		has_modifier = protection_racket
		has_modifier = bribed_officials
		has_modifier = substance_abuse

		has_modifier = crime_lord_deal_broken
		has_modifier = pm_tec_gestalt_crime_broken
	}
}

tec_planet_has_low_tech_capital = {
	custom_tooltip = {
		fail_text = tec_no_low_tech_capital
		OR = {
			has_building = building_low_tech_capital
		}
	}
}

tec_planet_blocks_research_buildings = {
	OR = {
		has_modifier = resort_colony
		has_modifier = slave_colony
		has_modifier = penal_colony
	}
}

tec_planet_blocks_trade_buildings = {
	OR = {
		has_modifier = slave_colony
		has_modifier = penal_colony
	}
}

tec_planet_blocks_amenity_buildings = {
	OR = {
		has_modifier = slave_colony
		has_modifier = penal_colony
	}
}

tec_planet_blocks_bureaucrat_buildings = {
	OR = {
		has_modifier = slave_colony
		has_modifier = penal_colony
		has_modifier = resort_colony
	}
}

tec_planet_blocks_temple_buildings = {
	OR = {
		has_modifier = slave_colony
	}
}

tec_planet_blocks_monument_buildings = {
	OR = {
		has_modifier = slave_colony
		has_modifier = penal_colony
	}
}

tec_planet_blocks_military_booster_buildings = {
	OR = {
		has_modifier = resort_colony
		has_modifier = penal_colony
	}
}

tec_planet_blocks_stronghold_buildings = {
	OR = {
		has_modifier = penal_colony
	}
}

tec_planet_blocks_naval_buildings = {
	OR = {
		has_modifier = resort_colony
		has_modifier = penal_colony
	}
}

tec_planet_blocks_manufacturing_buildings = {
	OR = {
		has_modifier = resort_colony
		has_modifier = slave_colony
	}
}

tec_planet_blocks_menial_buildings = {
	OR = {
		has_modifier = resort_colony
	}
}

tec_planet_blocks_crime_buildings = {
	OR = {
		has_modifier = slave_colony
	}
}

tec_planet_blocks_silo_buildings = {
	OR = {
		has_modifier = slave_colony
		has_modifier = resort_colony
	}
}