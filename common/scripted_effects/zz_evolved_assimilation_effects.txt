# common\scripted_effects\zz_evolved_assimilation_effects.txt

# ------------------------------------------------------------
# ASSIMILATIONS
# ------------------------------------------------------------

# Assimilation Modules
# ------------------------------------------------------------
 # Flags
	# this = assimilated species
	# prev = original species
	# prevprev = country
	tec_set_common_assimilation_flags = {
		optimize_memory
		set_timed_species_flag = {
			flag = assimilation_species_of_species_@prev
			days = 30
		}
		set_timed_species_flag = {
			flag = assimilation_species_of_empire_@prevprev
			days = 30
		}
	}

 # Scripts
 # Note: Mostly controlled via living standard
	tec_assimilation_test_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_replicant_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 50
		}
	}

	tec_assimilation_remove_hivemind_script = {
		optimize_memory
		modify_species = {
			species = this
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_hive_psionic_resonance
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_add_hivemind_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_cyberpsionic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_unify_robots_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_unify_robot
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_unify_machines_script = {
		optimize_memory
		set_timed_species_flag = {
			#flag = tec_assimilation_unify_machine
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_cybernetic_t1_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cybernetic_t1_machine_script = {
		optimize_memory
		tec_assimilation_cybernetic_t1_script = yes
	}

	tec_assimilation_cybernetic_t1_hive_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_cybernetic
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cybernetic_t1_upgrade_script = {
		optimize_memory
		# TO DO
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_cybernetic_t1_upgrade_machine_script = {
		optimize_memory
		tec_assimilation_cybernetic_t1_upgrade_script = yes
	}

	tec_assimilation_cybernetic_t1_upgrade_hive_script = {
		optimize_memory
		# TO DO
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_cybernetic_t2_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cybernetic_t2_machine_script = {
		optimize_memory
		tec_assimilation_cybernetic_t2_script = yes
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cybernetic_t2_hive_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_hive_mind
			add_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cybernetic_t2_upgrade_script = {
		optimize_memory
		tec_assimilation_cybernetic_t2_script = yes
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_cybernetic_t2_upgrade_machine_script = {
		optimize_memory
		tec_assimilation_cybernetic_t2_upgrade_script = yes
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_cybernetic_t2_upgrade_hive_script = {
		optimize_memory
		tec_assimilation_cybernetic_t2_hive_script = yes
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_cybernetic_t2_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_cybernetic_t2_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 50
		}
	}

	tec_assimilation_cybernetic_t2_digitalization_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_cybernetic_t2_digitalization
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 25
		}
	}

	tec_assimilation_cybernetic_t2_merge_robot_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_cybernetic_t2_merge_robot
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_synthetic_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_synthetic_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 35
		}
	}

	tec_assimilation_synthetic_total_machine_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_synthetic_total_machine
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 35
		}
	}

	tec_assimilation_synthetic_digitalization_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_synthetic_digitalization
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_psionic_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_psionic
			add_traits_at_start_of_list = yes
			remove_trait = trait_hive_mind
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_psychic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_psionic_ascend_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_psionic_ascend
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_genetic_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_genetic_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 25
		}
	}

	tec_assimilation_genetic_add_script = {
		optimize_memory
		if = {	# Unlocked T3
			limit = {
				exists = prev
				prev = {
					has_country_flag = unlocked_trait_tec_gene_main_t3
				}
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_gene_main_t1
				remove_trait = trait_tec_gene_main_t2
				add_trait = trait_tec_gene_main_t3
				add_traits_at_start_of_list = yes
				remove_trait = trait_self_modified
				remove_trait = trait_hive_mind
				remove_trait = trait_tec_biogenic_main
				change_scoped_species = no
				effect = {
					tec_set_common_assimilation_flags = yes
					save_event_target_as = tec_result_species
				}
			}
		}
		else_if = {	# Unlocked T2
			limit = {
				exists = prev
				prev = {
					has_country_flag = unlocked_trait_tec_gene_main_t2
				}
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_gene_main_t1
				remove_trait = trait_tec_gene_main_t3
				add_trait = trait_tec_gene_main_t2
				add_traits_at_start_of_list = yes
				remove_trait = trait_self_modified
				remove_trait = trait_hive_mind
				remove_trait = trait_tec_biogenic_main
				change_scoped_species = no
				effect = {
					tec_set_common_assimilation_flags = yes
					save_event_target_as = tec_result_species
				}
			}
		}
		else = {
			modify_species = {
				species = this
				remove_trait = trait_tec_gene_main_t2
				remove_trait = trait_tec_gene_main_t3
				add_trait = trait_tec_gene_main_t1
				add_traits_at_start_of_list = yes
				remove_trait = trait_self_modified
				remove_trait = trait_hive_mind
				remove_trait = trait_tec_biogenic_main
				change_scoped_species = no
				effect = {
					tec_set_common_assimilation_flags = yes
					save_event_target_as = tec_result_species
				}
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_genetic_add_hive_script = {
		optimize_memory
		if = {	# Unlocked T3
			limit = {
				exists = prev
				prev = {
					has_country_flag = unlocked_trait_tec_gene_main_t3
				}
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_gene_main_t1
				remove_trait = trait_tec_gene_main_t2
				add_trait = trait_tec_gene_main_t3
				add_trait = trait_hive_mind
				add_traits_at_start_of_list = yes
				remove_trait = trait_self_modified
				remove_trait = trait_latent_psionic
				remove_trait = trait_psionic
				remove_trait = trait_tec_hive_psionic_resonance
				remove_trait = trait_tec_hive_psionic_entanglement
				remove_trait = trait_tec_biopsionic_main
				remove_trait = trait_tec_cyberpsionic_main
				remove_trait = trait_tec_biogenic_main
				change_scoped_species = no
				effect = {
					tec_set_common_assimilation_flags = yes
					save_event_target_as = tec_result_species
				}
			}
		}
		else_if = {	# Unlocked T2
			limit = {
				exists = prev
				prev = {
					has_country_flag = unlocked_trait_tec_gene_main_t2
				}
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_gene_main_t1
				remove_trait = trait_tec_gene_main_t3
				add_trait = trait_tec_gene_main_t2
				add_trait = trait_hive_mind
				add_traits_at_start_of_list = yes
				remove_trait = trait_self_modified
				remove_trait = trait_latent_psionic
				remove_trait = trait_psionic
				remove_trait = trait_tec_hive_psionic_resonance
				remove_trait = trait_tec_hive_psionic_entanglement
				remove_trait = trait_tec_biopsionic_main
				remove_trait = trait_tec_cyberpsionic_main
				remove_trait = trait_tec_biogenic_main
				change_scoped_species = no
				effect = {
					tec_set_common_assimilation_flags = yes
					save_event_target_as = tec_result_species
				}
			}
		}
		else = {
			modify_species = {
				species = this
				remove_trait = trait_tec_gene_main_t2
				remove_trait = trait_tec_gene_main_t3
				add_trait = trait_tec_gene_main_t1
				add_trait = trait_hive_mind
				add_traits_at_start_of_list = yes
				remove_trait = trait_self_modified
				remove_trait = trait_latent_psionic
				remove_trait = trait_psionic
				remove_trait = trait_tec_hive_psionic_resonance
				remove_trait = trait_tec_hive_psionic_entanglement
				remove_trait = trait_tec_biopsionic_main
				remove_trait = trait_tec_cyberpsionic_main
				remove_trait = trait_tec_biogenic_main
				change_scoped_species = no
				effect = {
					tec_set_common_assimilation_flags = yes
					save_event_target_as = tec_result_species
				}
			}
		}

		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_biopsionic_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_biopsionic_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 35
		}
	}

	tec_assimilation_biopsionic_add_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_biopsionic_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			remove_trait = trait_tec_biogenic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_biopsionic_add_hive_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_biopsionic_main
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			remove_trait = trait_tec_biogenic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cyberpsionic_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_cyberpsionic_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			#remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cyberpsionic_hive_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_cyberpsionic_main
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			#remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_cyberpsionic_upgrade_script = {
		optimize_memory
		tec_assimilation_cyberpsionic_script = yes
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_cyberpsionic_upgrade_hive_script = {
		optimize_memory
		tec_assimilation_cyberpsionic_hive_script = yes
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_replicant_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_replicant_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 35
		}
	}
	tec_assimilation_replicant_total_upgraded_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_replicant_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 50
		}
	}

	tec_assimilation_replicant_add_script = {
		optimize_memory
		# TO DO
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_replicant_add_hive_script = {
		optimize_memory
		# TO DO
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_biological_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_biological_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 35
		}
	}

	tec_assimilation_biological_add_script = {
		optimize_memory
		modify_species = {
			species = this
			# to remove genetic perfection
			ideal_planet_class = this
			add_trait = trait_tec_biogenic_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_biological_add_hive_script = {
		optimize_memory
		modify_species = {
			species = this
			# to remove genetic perfection
			ideal_planet_class = this
			add_trait = trait_tec_biogenic_main
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			remove_trait = trait_tec_cyberpsionic_main
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_tec_bioware_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_biological_decompose_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_biological_decompose
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 0
		}
	}

	tec_assimilation_psychic_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_psychic_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_tec_cyberpsionic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}
	tec_assimilation_psychic_psionics = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_psychic_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_tec_cyberpsionic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_psychic_hivemind_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_psychic_main
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_tec_cyberpsionic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_bioware_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_bioware_main
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			remove_trait = trait_tec_cyberpsionic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}
	tec_assimilation_bioware_hive_script = {
		optimize_memory
		modify_species = {
			species = this
			add_trait = trait_tec_bioware_main
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			remove_trait = trait_self_modified
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			remove_trait = trait_tec_cyberpsionic_main
			change_scoped_species = no
			effect = {
				tec_set_common_assimilation_flags = yes
				save_event_target_as = tec_result_species
			}
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 15
		}
	}

	tec_assimilation_bioware_machine_script = {
		optimize_memory
		tec_assimilation_bioware_script = yes
	}

	tec_assimilation_bioware_upgrade_script = {
		optimize_memory
		tec_assimilation_bioware_script = yes
	}

	tec_assimilation_bioware_upgrade_machine_script = {
		optimize_memory
		tec_assimilation_bioware_upgrade_script = yes
	}

	tec_assimilation_bioware_upgrade_hive_script = {
		optimize_memory
		tec_assimilation_bioware_hive_script = yes
	}

	tec_assimilation_bioware_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_bioware_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 50
		}
	}

	tec_assimilation_ethereal_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_ethereal_total
			days = 10
		}
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 75
		}
	}

	tec_assimilation_ethereal_energy_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_ethereal_energy
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 10
		}
	}

	tec_assimilation_total_script = {
		optimize_memory
		set_timed_species_flag = {
			flag = tec_assimilation_total
			days = 10
		}
		set_variable = {	# Fail rate
			which = tec_assim_fail_rate
			value = 35
		}
	}

	tec_fallback_assimilation_script = {
		optimize_memory
		tec_assimilation_total_script = yes
	}

# /

# Assimilation Effect
# ------------------------------------------------------------
	# this = planet
	tec_pop_assimilation_effect = {
		optimize_memory
		
		if = {
			limit = { has_global_flag = tec_supertest }
			set_timed_planet_flag = {
				flag = tec_executed_assimilation_step_3
				months = 1
			}
		}

		random_owned_pop = {
			limit = {
				exists = this
				has_citizenship_type = {
					type = citizenship_assimilation
					country = owner
				}
				NOT = { root = { is_planet_class = pc_cosmogenesis_world } }
			}
			if = {	# Randomize the fail chance TO DO
				limit = {
					NOT = {
						has_pop_flag = tec_assimilation_fail
					}
				}
				tec_assimilation_fail_assign_percent = yes
			}
			if = {	# Assimilation fail
				limit = {
					has_pop_flag = tec_assimilation_fail
				}
				prev = {
					set_timed_planet_flag = {
						flag = tec_executed_assimilation_step_fail
						months = 1
					}
				}
				species = { clear_variable = tec_assim_fail_rate }
				tec_assimilation_fail_effect = yes
				prev = {
					change_variable = {
						which = tec_assimilation_counter
						value = -1
					}
				}
			}
			else_if = {	# Special cases of assimilation
				limit = {
					# Simplified and efficient - convert to main species or specific effect
					NOT = {
						has_pop_flag = tec_assimilation_fail
					}
					species = {
						OR = {
							has_species_flag = tec_assimilation_total
							has_species_flag = tec_assimilation_unify_robot
							has_species_flag = tec_assimilation_unify_machine
							has_species_flag = tec_assimilation_unify_bioservants
							has_species_flag = tec_assimilation_cybernetic_t2_digitalization
							has_species_flag = tec_assimilation_cybernetic_t2_merge_robot
							has_species_flag = tec_assimilation_synthetic_digitalization
							has_species_flag = tec_assimilation_psionic_ascend
							has_species_flag = tec_assimilation_biological_decompose
							has_species_flag = tec_assimilation_ethereal_energy_script
						}
					}
				}
				if = {
					limit = { has_global_flag = tec_supertest }
					prev = {
						set_timed_planet_flag = {
							flag = tec_executed_assimilation_step_alternative
							months = 1
						}
					}
				}
				if = {		 # Total assimilation
					limit = {
						species = {
							has_species_flag = tec_assimilation_total
						}
					}
					if = {
						limit = { has_global_flag = tec_supertest }
						prev = {
							set_timed_planet_flag = {
								flag = tec_executed_assimilation_TOTAL
								months = 1
							}
						}
					}
					# Note: Ther is a bug in vanilla with change_species
					# It creates a pop of the ORIGINAL non modified species which is annoying
					# seems force setting dominant species makes subspecies not be dominant
					# made an event for species modification to check the latter modifier one
					change_species = owner_main_species
				}
				else_if = {	# Robots & machines into main robots
					limit = {
						species = {
							has_species_flag = tec_assimilation_unify_robot
						}
					}
					if = {
						limit = {
							exists = owner
							owner = {
								# Deliberately left like that to even check 0 pop mechanical species
								# instead of any_owned_pop_species
								any_owned_species = {
									exists = this
									has_species_flag = mechanical_species@prev
								}
							}
						}
						owner = {
							# Deliberately left like that to even check 0 pop mechanical species
							random_owned_species = {
								limit = {
									exists = this
									has_species_flag = mechanical_species@prev
								}
								save_event_target_as = tec_convert_into_this
							}
						}
						change_species = event_target:tec_convert_into_this
					}
					else = {	# Gives some alloys, spare parts you know
						tec_assimilation_unify_robot_generate_compensation = yes
					}
				}
				else_if = {	# Unify bioservants
					limit = {
						species = {
							has_species_flag = tec_assimilation_unify_bioservants
						}
					}
					# TO DO
					if = {
						limit = {
							exists = owner
							owner = {
								any_owned_species = {
									exists = this
									has_species_flag = bioservant_species@prev
								}
							}
						}
						owner = {
							random_owned_species = {
								limit = {
									exists = this
									has_species_flag = bioservant_species@prev
								}
								save_event_target_as = tec_convert_into_this
							}
						}
						change_species = event_target:tec_convert_into_this
					}
					else = {	# Gives some alloys, spare parts you know
						tec_assimilation_unify_bioservant_generate_compensation = yes
					}
				}
				else_if = {	# Cyborg digitalization
					limit = {
						species = {
							has_species_flag = tec_assimilation_cybernetic_t2_digitalization
						}
					}
					# TO DO
					kill_pop = yes
				}
				else_if = {	# Cyborg merge robot
					limit = {
						species = {
							has_species_flag = tec_assimilation_cybernetic_t2_merge_robot
						}
					}
					# TO DO
					kill_pop = yes
				}
				else_if = {	# Synthetic digitalization
					limit = {
						species = {
							has_species_flag = tec_assimilation_synthetic_digitalization
						}
					}
					# TO DO
					kill_pop = yes
				}
				else_if = {	# Psionic ascend
					limit = {
						species = {
							has_species_flag = tec_assimilation_psionic_ascend
						}
					}
					# TO DO
					kill_pop = yes
				}
				else_if = {	# Biological decompose
					limit = {
						species = {
							has_species_flag = tec_assimilation_biological_decompose
						}
					}
					# TO DO
					kill_pop = yes
				}
				else_if = {	# Ethereal energy
					limit = {
						species = {
							has_species_flag = tec_assimilation_ethereal_energy_script
						}
					}
					# TO DO
					kill_pop = yes
				}
				else = {	# Total assimilation
					change_species = owner_main_species
				}
				clear_ethos = yes
				tec_assimilation_remove_unwanted_pop_modifiers = yes
				tec_assimilation_add_pop_modifiers = yes
				owner = {
					if = {
						limit = { has_ascension_perk = ap_become_the_crisis }
						complete_crisis_objective = crisobj_purge_pops
					}
				}
				prev = {
					change_variable = {
						which = tec_assimilation_counter
						value = -1
					}
				}
			}
			else = {
				if = {
					limit = { has_global_flag = tec_supertest }
					prev = {
						set_timed_planet_flag = {
							flag = tec_executed_assimilation_step_conversion
							months = 1
						}
					}
				}
				species = { save_event_target_as = assimilating_species }
				random_galaxy_species = {
					limit = {
						has_species_flag = assimilation_species_of_species_@prev.species
						has_species_flag = assimilation_species_of_empire_@prev.owner
					}
					save_event_target_as = assimilated_species
				}
				if = {
					limit = { exists = event_target:assimilated_species } # should always exist
					prev = {
						while = { # to avoid doing the random_galaxy_species thing too many times
							limit = {
								exists = event_target:assimilating_species
								check_variable = {
									which = tec_assimilation_counter
									value > 0
								}
								any_owned_pop = {
									exists = this
									is_exact_same_species = event_target:assimilating_species
								}
							}
							random_owned_pop = {
								limit = {
									exists = this
									is_exact_same_species = event_target:assimilating_species
								}
								change_species = event_target:assimilated_species
								tec_post_pop_assimilation_effect = yes
							}
							owner = {
								if = {
									limit = { has_ascension_perk = ap_become_the_crisis }
									complete_crisis_objective = crisobj_purge_pops
								}
							}
							change_variable = {
								which = tec_assimilation_counter
								value = -1
							}
						}
					}
				}
				else = {
					log_error = "No species found for \\[This.Species.GetName] pop owned by \\[This.Owner.GetName] on \\[This.Planet.GetName] to assimilate to"
				}
			}
		}
	}

	tec_post_pop_assimilation_effect = {
		optimize_memory
		#Provide treats
			if = { # assimilator empire
				limit = {
					root.owner = {
						OR = {
							AND = {
								is_machine_empire = yes
								has_civic = civic_machine_assimilator
							}
							AND = {	# Evolved
								is_hive_empire = yes
								tec_is_cyberhive = yes
							}
						}
					}
				}
				root.owner = { generate_cyborg_treats = yes } # scripted effect
			}

		# Adjust citizenship
			if = {
				limit = {
					OR = {
						NOT = {
							exists = event_target:convert_to_species
						}
						NAND = {
							exists = owner
							owner = {
								any_owned_pop = {
									exists = this
									is_exact_same_species = event_target:convert_to_species
									NOT = { is_same_value = prevprev }
								}
							}
						}
					}
				}
				if = { # set citizenship
					limit = { root.owner = { has_authority = auth_machine_intelligence } }
					set_citizenship_type = {
						type = citizenship_full_machine
						country = root.owner
					}
				}
				else = {
					set_citizenship_type = {
						type = citizenship_full
						country = root.owner
					}
				}

				if = { # set citizenship
					limit = { root.owner = { has_ethic = ethic_gestalt_consciousness } }
					set_living_standard = {
						type = living_standard_hive_mind
						country = root.owner
					}
				}
			}
		# /
	}

	tec_assimilation_fail_assign_percent = {
		#if = {
		#	limit = {
		#		# Policy here
		#	}
		#	change_variable = {
		#		which = species.tec_assim_fail_rate
		#		value = -15
		#	}
		#}
		if = {
			limit = {
				check_variable = {
					which = species.tec_assim_fail_rate
					value > 0
				}
			}
			random = {
				chance = species.tec_assim_fail_rate
				set_pop_flag = tec_assimilation_fail
			}
		}
		else = {
			# nothing
		}
		# Old code
			#if = {	# 10%
			#	limit = {
			#		species = {
			#			has_species_flag = tec_assim_fail_rate_10
			#		}
			#	}
			#	random = {
			#		chance = tec_assim_fail_rate
			#		set_pop_flag = tec_assimilation_fail
			#	}
			#}
			#if = {	# 15%
			#	limit = {
			#		species = {
			#			has_species_flag = tec_assim_fail_rate_15
			#		}
			#	}
			#	random = {
			#		chance = 15
			#		set_pop_flag = tec_assimilation_fail
			#	}
			#}
			#else_if = {	# 25%
			#	limit = {
			#		species = {
			#			has_species_flag = tec_assim_fail_rate_25
			#		}
			#	}
			#	random = {
			#		chance = 25
			#		set_pop_flag = tec_assimilation_fail
			#	}
			#}
			#else_if = {	# 35%
			#	limit = {
			#		species = {
			#			has_species_flag = tec_assim_fail_rate_35
			#		}
			#	}
			#	random = {
			#		chance = 35
			#		set_pop_flag = tec_assimilation_fail
			#	}
			#}
			#else_if = {	# 50%
			#	limit = {
			#		species = {
			#			has_species_flag = tec_assim_fail_rate_50
			#		}
			#	}
			#	random = {
			#		chance = 50
			#		set_pop_flag = tec_assimilation_fail
			#	}
			#}
			#else_if = {	# 66%
			#	limit = {
			#		species = {
			#			has_species_flag = tec_assim_fail_rate_66
			#		}
			#	}
			#	random = {
			#		chance = 66
			#		set_pop_flag = tec_assimilation_fail
			#	}
			#}
			#else_if = {	# 75%
			#	limit = {
			#		species = {
			#			has_species_flag = tec_assim_fail_rate_75
			#		}
			#	}
			#	random = {
			#		chance = 75
			#		set_pop_flag = tec_assimilation_fail
			#	}
			#}
			#else = {	# 0%
			#
			#}
		# /
	}
	tec_assimilation_fail_effect = {
		# More will come later
		kill_pop = yes
	}

	tec_assimilation_remove_unwanted_pop_modifiers = {
		# TO DO
	}
	
	tec_assimilation_add_pop_modifiers = {
		# TO DO
	}

	tec_assimilation_unify_robot_generate_compensation = {
		# TO DO
	}
	tec_assimilation_unify_bioservant_generate_compensation = {
		# TO DO
	}
# /
# OLD effects & Cleanups
# ------------------------------------------------------------
# root/this = planet
tec_assimilation_effect = {
	random_owned_pop = {
		limit = {
			exists = this
			has_citizenship_type = {
				type = citizenship_assimilation
				country = root.owner
			}
			NOT = { root = { is_planet_class = pc_cosmogenesis_world } }
		}
		species = {
			save_event_target_as = tec_old_species
		}
		if = { # ascended synths & bioassimilators & evil replicants
			limit = {
				root.owner = {
					OR = {
						OR = {
							has_country_flag = synthetic_empire
							has_country_flag = synth_assimilation
						}
						has_country_flag = tec_genetic_assimilation
						AND = {
							has_country_flag = tec_replicant_assimilation
							has_policy_flag = tec_replicant_full_assimilation
						}
					}
				}
			}
			kill_pop = yes
			root = {
				create_pop = {
					species = root.owner
					ethos = root.owner
				}
				owner = {
					if = {
						limit = { has_ascension_perk = ap_become_the_crisis }
						complete_crisis_objective = crisobj_purge_pops
					}
				}
			}
		}
		else_if = { # Replicant assimilation
			limit = {
				root.owner = {
					has_country_flag = tec_replicant_assimilation
					NOT = {
						has_policy_flag = tec_replicant_full_assimilation
					}
				}
			}
			# Checks if a replicant version of that species exists in the empire
			if = {
				limit = {
					exists = root.owner
					root.owner = {
						any_owned_species = {
							exists = this
							OR = {
								is_exact_same_species = event_target:tec_old_species
								is_same_species = event_target:tec_old_species
							}
							has_trait = trait_tec_replicant_main
						}
					}
				}
				root.owner = {
					random_owned_species = {
						limit = {
							exists = this
							OR = {
								is_exact_same_species = event_target:tec_old_species
								is_same_species = event_target:tec_old_species
							}
							has_trait = trait_tec_replicant_main
						}
						save_event_target_as = tec_convert_into_this
					}
				}
				change_species = event_target:tec_convert_into_this
			}
			# Creates another replicant species
			else = {
				# Remove traits
				if = {	# if its lithoid
					limit = {
						species = {
							has_trait = trait_lithoid
						}
					}
					modify_species = {
						species = this
						ideal_planet_class = pc_nuked
						change_scoped_species = no
						effect = {
							modify_species = {
								species = this
								remove_trait = trait_pc_nuked_preference
								change_scoped_species = no
								effect = {
									modify_species = {
										species = this
										remove_trait = trait_lithoid
										effect = {
											create_species = {
												is_mod = yes
												name = prevprevprev.species #event_target:tec_old_species
												#namelist = prevprevprev.species #event_target:tec_old_species
												name_list = event_target:tec_old_species
												plural = prevprevprev.species #event_target:tec_old_species
												class = "REPLICANT"
												portrait = prevprevprev.species #event_target:tec_old_species
												can_be_modified = prevprevprev.species #event_target:tec_old_species
												gender = prevprevprev.species #event_target:tec_old_species
												homeworld = owner.capital_scope
												traits = {
													trait = trait_tec_replicant_main
												}
												traits = this
									
												effect = {
													#rename_species = {
													#	prompt_country = root
													#	name_list = ascension_list
													#}
													save_event_target_as = tec_convert_into_this
													set_species_flag = tec_replicant_species_of_@prev.species
												}
											}
										}
									}
								}
							}
						}
					}
					last_created_species = {
						set_species_flag = tec_replicant_species_of_@prev.species
					}
				}
				else = {
					if = {
						limit = {
							species = {
								NOT = {
									has_trait = trait_lithoid
								}
							}
						}
						modify_species = {
							species = this
							ideal_planet_class = pc_nuked
							change_scoped_species = no
							effect = {
								modify_species = {
									species = this
									remove_trait = trait_pc_nuked_preference
									change_scoped_species = no
									effect = {
										create_species = {
											is_mod = yes
											name = prevprev.species #event_target:tec_old_species
											#namelist = prevprev.species #event_target:tec_old_species
											name_list = event_target:tec_old_species
											plural = prevprev.species #event_target:tec_old_species
											class = "REPLICANT"
											portrait = prevprev.species #event_target:tec_old_species
											can_be_modified = prevprev.species #event_target:tec_old_species
											gender = prevprev.species #event_target:tec_old_species
											homeworld = owner.capital_scope
											traits = {
												trait = trait_tec_replicant_main
											}
											traits = this
											effect = {
												#rename_species = {
												#	prompt_country = root
												#	name_list = ascension_list
												#}
												save_event_target_as = tec_convert_into_this
											}
										}
									}
								}
							}
						}
					}
					last_created_species = {
						set_species_flag = tec_replicant_species_of_@prev.species
					}
				}
				#Species cleanup
				event_target:tec_convert_into_this = {
					if = {
						limit = {
							has_trait = trait_hive_mind
						}
						modify_species = {
							species = this
							remove_trait = trait_hive_mind
							change_scoped_species = no
						}
					}
					if = {
						limit = {
							has_trait = trait_cybernetic
						}
						modify_species = {
							species = this
							remove_trait = trait_cybernetic
							change_scoped_species = no
						}
					}
					if = {
						limit = {
							has_trait = trait_tec_superior_cybernetics_main
						}
						modify_species = {
							species = this
							remove_trait = trait_tec_superior_cybernetics_main
							change_scoped_species = no
						}
					}
					#recheck

					save_event_target_as = tec_convert_into_this	
				}
				event_target:tec_convert_into_this = {	#recheck, in case
					set_species_flag = tec_replicant_species_of_@prevprev.species
				}
				change_species = event_target:tec_convert_into_this
			}
		
			# Secondary bonuses and etc
			root = {
				owner = {
					if = {
						limit = { has_ascension_perk = ap_become_the_crisis }
						complete_crisis_objective = crisobj_purge_pops
					}
				}
			}
		}
		else = {
			random_galaxy_species = {
				limit = {
					has_species_flag = assimilation_species_of_species@prev.species
					has_species_flag = assimilation_species_of_empire@root.owner
				}
				save_event_target_as = convert_to_species
			}
			species = {
				save_event_target_as = old_species
			}
			if = {
				limit = {
					exists = event_target:convert_to_species #should always exist
				}
				change_species = event_target:convert_to_species
				owner = {
					if = {
						limit = { has_ascension_perk = ap_become_the_crisis }
						complete_crisis_objective = crisobj_purge_pops
					}
				}
				root = {
					change_variable = {
						which = assimilation_counter
						value = -1
					}
					while = { #to avoid doing the random_galaxy_species thing too many times
						limit = {
							exists = event_target:old_species
							check_variable = {
								which = assimilation_counter
								value > 0
							}
							any_owned_pop = {
								exists = this
								is_same_value = event_target:old_species
							}
						}
						random_owned_pop = {
							limit = {
								exists = this
								is_exact_same_species = event_target:old_species
							}
							change_species = event_target:convert_to_species
							apply_post_assimilation_effects = yes
						}
						change_variable = {
							which = assimilation_counter
							value = -1
						}
						owner = {
							if = {
								limit = { has_ascension_perk = ap_become_the_crisis }
								complete_crisis_objective = crisobj_purge_pops
							}
						}
					}
				}
				apply_post_assimilation_effects = yes
			}
			else = {
				log_error = "No species found for \\[This.Species.GetName] pop owned by \\[This.Owner.GetName] on \\[This.Planet.GetName] to assimilate to"
			}
		}
	}
}

# pop scope, root = planet
apply_post_assimilation_effects = {
	if = { # assimilator empire
		limit = {
			root.owner = {
				OR = {
					AND = {
						is_machine_empire = yes
						has_civic = civic_machine_assimilator
					}
					AND = {	# Evolved
						is_hive_empire = yes
						tec_is_cyberhive = yes
					}
				}
			}
		}
		root.owner = { generate_cyborg_treats = yes } # scripted effect
	}

	if = {
		limit = {
			NOT = {
				owner = {
					any_owned_pop = {
						exists = this
						is_exact_same_species = event_target:convert_to_species
						NOT = { is_same_value = prevprev }
					}
				}
			}
		}
		if = { # set citizenship
			limit = { root.owner = { is_machine_empire = yes } }
			set_citizenship_type = {
				type = citizenship_full_machine
				country = root.owner
			}
		}
		else = {
			set_citizenship_type = {
				type = citizenship_full
				country = root.owner
			}
		}

		if = { # set citizenship
			limit = { root.owner = { has_ethic = ethic_gestalt_consciousness } }
			set_living_standard = {
				type = living_standard_hive_mind
				country = root.owner
			}
		}
	}
}

# Specific
# ------------------------------------------------------------
tec_replicant_trait_cleanup_effect = {
	if = {
		limit = {
			has_trait = trait_lithoid
		}
		modify_species = {
			species = this
			remove_trait = trait_lithoid
			change_scoped_species = no
		}
	}
	if = {
		limit = {
			has_trait = trait_hive_mind
		}
		modify_species = {
			species = this
			remove_trait = trait_hive_mind
			change_scoped_species = no
		}
	}
	if = {
		limit = {
			has_trait = trait_cybernetic
		}
		modify_species = {
			species = this
			remove_trait = trait_cybernetic
			change_scoped_species = no
		}
	}
	if = {
		limit = {
			has_trait = trait_tec_superior_cybernetics_main
		}
		modify_species = {
			species = this
			remove_trait = trait_tec_superior_cybernetics_main
			change_scoped_species = no
		}
	}
}

# Scripts
# ------------------------------------------------------------
tec_robot_into_machines_assimilation_script = {				# RM A
	# Also considers robots into same patent
	if = {
		limit = {
			OR = {
				has_trait = trait_mechanical
				has_trait = trait_machine_unit
				NOT = {
					has_species_flag = mechanical_species@prev
				}
			}
			prev = {
				has_technology = tech_tec_machine_assimilation
			}
		}
		set_timed_species_flag = {
			flag = tec_rm_a
			days = 10
		}
	}
}

tec_machines_into_robots_assimilation_script = {			# MR A
	# Also considers machines into same patent
	if = {
		limit = {
			OR = {
				has_trait = trait_mechanical
				has_trait = trait_machine_unit
			}
			prev = {
				has_technology = tech_tec_robot_assimilation
			}
		}
		set_timed_species_flag = {
			flag = tec_mr_a
			days = 10
		}
	}
}

# -------------- Hivemind block
	# Regular
 tec_test_assimilation_script = {	# Adds hive
	# Note* Psi, lpsi will be replaced later
	# Ignores cybernetic for convenience
	if = {	# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					has_species_flag = tec_target_assim_spe_of_@prevprev
					has_trait = trait_hive_mind
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					has_species_flag = tec_target_assim_spe_of_@prevprev
					has_trait = trait_hive_mind
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_hm_asim_@this
			days = 30
		}
	}
	else = {
		modify_species = {
			species = this
			# Add traits
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_hm_asim_@prev
					days = 30
				}
			}
		}
	}
}

	# Regular
tec_hivemind_trait_assimilation_script = {	# Adds hive
	# Note* Psi, lpsi will be replaced later
	# Ignores cybernetic for convenience
	if = {	# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					has_species_flag = tec_target_assim_spe_of_@prevprev
					has_trait = trait_hive_mind
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					has_species_flag = tec_target_assim_spe_of_@prevprev
					has_trait = trait_hive_mind
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_hm_asim_@this
			days = 30
		}
	}
	else = {
		modify_species = {
			species = this
			# Add traits
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_hm_asim_@prev
					days = 30
				}
			}
		}
	}
}
	# Cyberhive
tec_hivemind_cyberhive_t0_assimilation_script = {	# Deprecated as it worked with rudimentary cyborg
	# deprecated
}

tec_hivemind_cyberhive_t1_assimilation_script = {	# Adds cybernetic trait, if the species is not a cyborg
	# Note* Psi, lpsi will be replaced later if cyberpsi
	# Purity of form is removed because you are no longer pure
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					has_trait = trait_hive_mind
					tec_is_cyborg_species = yes
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					has_trait = trait_hive_mind
					tec_is_cyborg_species = yes
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_hmcybt1_asim_@this
			days = 30
		}
	}
	else_if = {		# Species is already a cyborg of any type
		limit = {
			tec_is_cyborg_species = yes
		}
		modify_species = {
			species = this
			# Remove traits
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_biopsionic_hive
			# Add traits
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_hm_asim_@prev
					days = 30
				}
			}
		}
	}
	else = {
		modify_species = {
			species = this
			# Remove traits
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_biopsionic_hive
			# Add traits
			add_trait = trait_hive_mind
			add_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_hm_asim_@prev
					days = 30
				}
			}
		}
	}
}

tec_hivemind_cyberhive_t2_assimilation_script = {	# Adds advcyb trait
	# Note* Psi, lpsi will be replaced later if cyberpsi
	# Purity of form is removed because you are no longer pure
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					has_trait = trait_hive_mind
					tec_is_advanced_cyborg_species = yes
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					has_trait = trait_hive_mind
					tec_is_advanced_cyborg_species = yes
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_hmcybt2_asim_@this
			days = 30
		}
	}
	else_if = {		# Species is already advanced cyborg
		limit = {
			tec_is_advanced_cyborg_species = yes
		}
		modify_species = {
			species = this
			# Remove traits
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_biopsionic_hive
			# Add traits
			add_trait = trait_hive_mind
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_hm_asim_@prev
					days = 30
				}
			}
		}
	}
	else = {
		modify_species = {
			species = this
			# Remove traits
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_biopsionic_hive
			# Add traits
			add_trait = trait_hive_mind
			add_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_hm_asim_@prev
					days = 30
				}
			}
		}
	}
}
	# Psionic 			# Not functional, yet
tec_hivemind_psionic_assimilation_script = {
	# Note* psi traits will be flipped

}
	# Biopsionic		# Not functional, yet
tec_hivemind_biopsionic_assimilation_script = {
	# Discarded - full species assimilation
}
	# Cyberpsionic		# Not functional, yet
tec_hivemind_cyberpsionic_assimilation_script = {
	# Note* psi traits will be flipped
	
}
# -------------- Machine Block
	# Biotrophy hives
tec_machine_hive_into_biotrophy_assimilation_script = {
	# Converts psionic hives into latent psionics
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_mhivbiotrophy_asim_@this
			days = 30
		}
	}
	else_if = {		# Psionic hive
		limit = {
			has_trait = trait_hive_mind
			has_trait = trait_tec_hive_psionic_resonance
		}
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_hive_mind
			# add
			add_trait = trait_latent_psionic
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_m_hm_desim_psi_@prev
					days = 30
				}
			}
		}
	}
	else = {		# ONLY HIVE
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_hive_mind
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_m_hm_desim_@prev
					days = 30
				}
			}
		}
	}
}
	# Cybernetics
tec_machine_cybernetic_t1_assimilation_script = {
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_biopsionic_main
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_biopsionic_main
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_mcybt1_asim_@this
			days = 30
		}
	}
	else_if = {		# Species is already cyborg
		limit = {
			tec_is_cyborg_species = yes
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
			}
		}
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_basic_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t1_change_@prev
					days = 30
				}
			}
		}
	}
	else_if = {		# Purepsi/hive/hivepsi
		limit = {
			tec_is_cyborg_species = no
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
			}
		}
		modify_species = {
			species = this
			# Add
			add_trait = trait_cybernetic
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_basic_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t1_change_@prev
					days = 30
				}
			}
		}
	}
	else = {		# Just cyborg
		modify_species = {
			species = this
			add_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t1_else_@prev
					days = 30
				}
			}
		}
	}
}

tec_machine_cybernetic_t2_assimilation_script = {
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_advanced_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_biopsionic_main
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_advanced_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_biopsionic_main
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_mcybt2_asim_@this
			days = 30
		}
	}
	else_if = {		# Species is already adv cyborg
		limit = {
			tec_is_advanced_cyborg_species = yes
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
			}
		}
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t2_cyb_@prev
					days = 30
				}
			}
		}
	}
	else_if = {		# Purepsi/hive/hivepsi/cyb
		limit = {
			tec_is_advanced_cyborg_species = no
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
				has_trait = trait_cybernetic
			}
		}
		modify_species = {
			species = this
			# Add
			add_trait = trait_tec_superior_cybernetics_main
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t2_change_@prev
					days = 30
				}
			}
		}
	}
	else = {		# Just cyborg
		modify_species = {
			species = this
			add_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t2_else_@prev
					days = 30
				}
			}
		}
	}
}
# -------------- Regular block
	# Hive deassim
tec_regular_hivedeassim_assimilation_script = {
	# Intentionally preserving purity of form and cybernetics
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_dehiv_asim_@this
			days = 30
		}
	}
	else_if = {		# Psi hivemind
		limit = {
			has_trait = trait_hive_mind
			has_trait = trait_tec_hive_psionic_resonance
		}
		modify_species = {
			species = this
			add_traits_at_start_of_list = yes
			# Add
			add_trait = trait_latent_psionic
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			change_scoped_species = no
			effect = {	#double
				modify_species = {
					species = this
					remove_trait = trait_tec_hive_psionic_entanglement
					change_scoped_species = no
					effect = {
						set_timed_species_flag = {
							flag = tec_target_assim_spe_of_@prevprev
							days = 480
						}
						set_timed_species_flag = {
							flag = assim_spe_of_spe_@prevprev
							days = 30
						}
						set_timed_species_flag = {
							flag = assim_spe_of_emp_@prevprevprev
							days = 30
						}
						set_timed_species_flag = {
							flag = tec_deasim_hm_@prevprev
							days = 30
						}
					}
				}
			}
		}
	}
	else = {		# Remove hivemind
		modify_species = {
			species = this
			add_traits_at_start_of_list = yes
			remove_trait = trait_hive_mind
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_deasim_hm_@prev
					days = 30
				}
			}
		}
	}
}
	# Cybernetics
tec_regular_cybernetic_t1_assimilation_script = {
	# Removes hivemind, pure psionic // Adds rudimentary cyborg // Replaces hive psi by latent psi
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_hive_psionic_entanglement
						has_trait = trait_tec_biopsionic_main
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_hive_psionic_entanglement
						has_trait = trait_tec_biopsionic_main
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_cybt1_asim_@this
			days = 30
		}
	}
	else_if = {		# Species is already cyborg
		limit = {
			tec_is_cyborg_species = yes
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
			}
		}
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t1_cyb_@prev
					days = 30
				}
			}
		}
	}
	else_if = {		# hm /psi
		limit = {
			tec_is_cyborg_species = no
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
			}
		}
		modify_species = {
			species = this
			# Add
			add_trait = trait_cybernetic
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t1_nocyb_@prev
					days = 30
				}
			}
		}
	}
	else = {		# Adds cyb
		modify_species = {
			species = this
			add_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t1_else_@prev
					days = 30
				}
			}
		}
	}
}

tec_regular_cybernetic_t2_assimilation_script = {
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_advanced_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_biopsionic_main
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					tec_is_advanced_cyborg_species = yes
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_tec_biopsionic_main
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_cybt2_asim_@this
			days = 30
		}
	}
	else_if = {		# Species is already adv cyborg
		limit = {
			tec_is_advanced_cyborg_species = yes
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
				has_trait = trait_cybernetic
			}
		}
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t2_cyb_@prev
					days = 30
				}
			}
		}
	}
	else_if = {		# hm / purepsi
		limit = {
			tec_is_advanced_cyborg_species = no
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
				#has_trait = trait_tec_basic_cybernetics_main
				has_trait = trait_cybernetic
			}
		}
		modify_species = {
			species = this
			# Add
			add_trait = trait_tec_superior_cybernetics_main
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			#remove_trait = trait_tec_basic_cybernetics_main
			remove_trait = trait_cybernetic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t2_nocyb_@prev
					days = 30
				}
			}
		}
	}
	else = {		# adds adv cyb
		modify_species = {
			species = this
			# Add
			add_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_mcyb_t2_else_@prev
					days = 30
				}
			}
		}
	}
}
	# Psionic
tec_regular_psionic_assimilation_script = {
	# Cyborg and etc are tolerated
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					OR = {
						has_trait = trait_psionic
						has_trait = trait_tec_cyberpsionic_main
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					OR = {
						has_trait = trait_psionic
						has_trait = trait_tec_cyberpsionic_main
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_psi_asim_@this
			days = 30
		}
	}
	else_if = {		# Species is already psionic
		limit = {
			OR = {
				has_trait = trait_tec_biopsionic_main
				has_trait = trait_tec_cyberpsionic_main
			}
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
			}
		}
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_psi_psi_@prev
					days = 30
				}
			}
		}
	}
	else_if = {		# hm / hivepsi / purepsi
		limit = {
			NOR = {
				has_trait = trait_tec_biopsionic_main
				has_trait = trait_tec_cyberpsionic_main
			}
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_tec_biopsionic_main
			}
		}
		modify_species = {
			species = this
			# Add
			add_trait = trait_psionic
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_biopsionic_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_psi_nopsi_@prev
					days = 30
				}
			}
		}
	}
	else = {		# Adds trait and thats it
		modify_species = {
			species = this
			add_trait = trait_psionic
			remove_trait = trait_latent_psionic
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_psi_else_@prev
					days = 30
				}
			}
		}
	}
}
	# Cyberpsio
tec_regular_cyberpsionic_assimilation_script = {
	if = {			# If any species already is patent
		limit = {
			prev = {
				any_owned_species = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						is_same_species = prevprev
					}
					has_trait = trait_tec_cyberpsionic_main
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_latent_psionic
						has_trait = trait_psionic
						has_trait = trait_tec_biopsionic_main
					}
				}
			}
		}
		prev = {
			random_owned_species = {
				limit = {
					exists = this
					OR = {
						has_species_flag = tec_target_assim_spe_of_@prevprev
						#is_same_species = prevprev
					}
					has_trait = trait_tec_cyberpsionic_main
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_tec_hive_psionic_resonance
						has_trait = trait_latent_psionic
						has_trait = trait_psionic
						has_trait = trait_tec_biopsionic_main
					}
				}
				set_timed_species_flag = { # renews
					flag = tec_target_assim_spe_of_@prevprev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
			}
		}
		set_timed_species_flag = {
			flag = tec_cybpsi_asim_@this
			days = 30
		}
	}
	else_if = {		# Already cyberpsi
		limit = {
			has_trait = trait_tec_cyberpsionic_main
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_latent_psionic
				has_trait = trait_psionic
				has_trait = trait_tec_biopsionic_main
				has_trait = trait_cybernetic
				has_trait = trait_tec_superior_cybernetics_main
			}
		}
		modify_species = {
			species = this
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_cybpsi_acyb_@prev
					days = 30
				}
			}
		}
	}
	else_if = {		# hive / hivepsi / psi / purepsi / cyb
		limit = {
			NOT = {
				has_trait = trait_tec_cyberpsionic_main
			}
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_latent_psionic
				has_trait = trait_psionic
				has_trait = trait_tec_biopsionic_main
				has_trait = trait_cybernetic
				has_trait = trait_tec_superior_cybernetics_main
			}
		}
		modify_species = {
			species = this
			# Add
			add_trait = trait_tec_cyberpsionic_main
			# Remove
			remove_trait = trait_hive_mind
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_latent_psionic
			remove_trait = trait_psionic
			remove_trait = trait_tec_hive_psionic_resonance
			remove_trait = trait_tec_hive_psionic_entanglement
			remove_trait = trait_tec_biopsionic_main
			remove_trait = trait_cybernetic
			remove_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_cybpsi_acyb_@prev
					days = 30
				}
			}
		}
	}
	else = {	# Adds trait and thats it
		modify_species = {
			species = this
			add_trait = trait_tec_cyberpsionic_main
			add_traits_at_start_of_list = yes
			change_scoped_species = no
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_cybpsi_else_@prev
					days = 30
				}
			}
		}
	}
}
	# Biopsio
tec_regular_biopsionic_assimilation_script = {
	# Its now a - to main species - assimilation
}


# T E S T
# ------------------------------------------------------------
tec_test_assim_all = {
	set_global_flag = tec_supertest
	# effect tec_test_assim_all = yes
	tec_test_assim_regular_psi = yes
	tec_test_assim_regular_cyb = yes
	tec_test_assim_cyberpsionics = yes
	tec_test_assim_replicant = yes
	tec_test_assim_hiv = yes
	tec_test_assim_robots = yes
	tec_test_assim_specimens = yes
	tec_test_assim_specimens_2 = yes
}

tec_test_assim_regular_psi = {
	set_global_flag = tec_supertest
	add_building = tec_supertestbuilding
	# Latent psionic
		create_species = {
			name = "LATENT PSI"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol1
			traits = {
				trait = trait_latent_psionic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# psionic
		create_species = {
			name = "PSI BASE"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol2
			traits = {
				trait = trait_psionic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# pure psionic
		create_species = {
			name = "PURE PSI"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol3
			traits = {
				trait = trait_tec_biopsionic_main
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
}

tec_test_assim_regular_cyb = {
	set_global_flag = tec_supertest
	add_building = tec_supertestbuilding
	# Cyb
		create_species = {
			name = RANDOM
			plural = RANDOM
			class = random
			namelist = this
			portrait = art12
			traits = {
				trait = trait_cybernetic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# adv cyb
		create_species = {
			name = RANDOM
			plural = RANDOM
			class = random
			namelist = this
			portrait = art13
			traits = {
				trait = trait_tec_superior_cybernetics_main
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
}

tec_test_assim_cyberpsionics = {
	set_global_flag = tec_supertest
	# Cyberlatent
		create_species = {
			name = "CYB LP"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol4
			traits = {
				trait = trait_cybernetic
				trait = trait_latent_psionic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Cyberpsi
	create_species = {
		name = "CYB P"
		plural = RANDOM
		class = random
		namelist = this
		portrait = mol4
		traits = {
			trait = trait_cybernetic
			trait = trait_psionic
		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 5
		create_pop = {
			species = event_target:tec_new_species
		}
	}
	# /
	# Cyberpure
	create_species = {
		name = "CYB PF"
		plural = RANDOM
		class = random
		namelist = this
		portrait = mol4
		traits = {
			trait = trait_cybernetic
			trait = trait_tec_biopsionic_main
		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 5
		create_pop = {
			species = event_target:tec_new_species
		}
	}
	# /
	# Acyb lpsi
		create_species = {
			name = "ACYB LP"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol4
			traits = {
				trait = trait_tec_superior_cybernetics_main
				trait = trait_latent_psionic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Acyb psi
		create_species = {
			name = "ACYB PSI"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol4
			traits = {
				trait = trait_tec_superior_cybernetics_main
				trait = trait_psionic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Acyb Purepsi
		create_species = {
			name = "ACYB PF"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol4
			traits = {
				trait = trait_tec_superior_cybernetics_main
				trait = trait_tec_biopsionic_main
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Cyberadvpsionic
		create_species = {
			name = "CYBER PSI"
			plural = RANDOM
			class = random
			namelist = this
			portrait = mol4
			traits = {
				trait = trait_tec_cyberpsionic_main
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
}

tec_test_assim_replicant = {
	set_global_flag = tec_supertest
	add_building = tec_supertestbuilding
	# Replicant
		create_species = {
			name = "REPLICANT"
			plural = RANDOM
			class = REPLICANT
			namelist = this
			portrait = art15
			traits = {
				trait = trait_tec_replicant_main
			}
			effect = {
				rename_species = {
					name_list = ascension_list
				}
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Replicant latentpsi
		create_species = {
			name = "REPLICANT LP"
			plural = RANDOM
			class = REPLICANT
			namelist = this
			portrait = art15
			traits = {
				trait = trait_tec_replicant_main
				trait = trait_latent_psionic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Replicant psi
		create_species = {
			name = "REPLICANT P"
			plural = RANDOM
			class = REPLICANT
			namelist = this
			portrait = art15
			traits = {
				trait = trait_tec_replicant_main
				trait = trait_psionic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Replicant purepsi
		create_species = {
			name = "REPLICANT PS"
			plural = RANDOM
			class = REPLICANT
			namelist = this
			portrait = art15
			traits = {
				trait = trait_tec_replicant_main
				trait = trait_tec_biopsionic_main
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /	
}

tec_test_assim_hiv = {
	set_global_flag = tec_supertest
	add_building = tec_supertestbuilding
	# Cyb hiv
		create_species = {
			name = "HIVE CYB"
			plural = RANDOM
			class = random
			namelist = this
			portrait = fun12
			traits = {
				trait = trait_hive_mind
				trait = trait_cybernetic
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# adv cyb hiv
		create_species = {
			name = "HIVE ACYB"
			plural = RANDOM
			class = random
			namelist = this
			portrait = fun13
			traits = {
				trait = trait_hive_mind
				trait = trait_tec_superior_cybernetics_main
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# Hiv
		create_species = {
			name = "HIVE NORMAL"
			plural = RANDOM
			class = random
			namelist = this
			portrait = fun14
			traits = {
				trait = trait_hive_mind
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# LP HIV
		create_species = {
			name = "PSIVE A"
			plural = RANDOM
			class = random
			namelist = this
			portrait = fun15
			traits = {
				trait = trait_tec_hive_psionic_resonance
				trait = trait_hive_mind
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
	# ENTANGLED HIV
		create_species = {
			name = "APSIVE A"
			plural = RANDOM
			class = random
			namelist = this
			portrait = fun16
			traits = {
				trait = trait_tec_hive_psionic_entanglement
				trait = trait_hive_mind
			}
			effect = {
				save_event_target_as = tec_new_species
			}
		}
		while = {
			count = 5
			create_pop = {
				species = event_target:tec_new_species
			}
		}
	# /
}

tec_test_assim_robots = {
	set_global_flag = tec_supertest
	create_species = {
		name = "ROBOTS 1"
		plural = RANDOM
		class = ROBOT
		namelist = this
		portrait = robot1
		traits = {
			trait = trait_mechanical
		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 10
		create_pop = {
			species = event_target:tec_new_species
		}
	}
}

tec_test_assim_specimens = {
	set_global_flag = tec_supertest
	add_building = tec_supertestbuilding
	create_species = {
		name = "SPECIMENS 1"
		plural = RANDOM
		class = random
		namelist = this
		portrait = humanoid_02
		traits = {

		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 10
		create_pop = {
			species = event_target:tec_new_species
		}
	}
	create_species = {
		name = "SPECIMENS 2"
		plural = RANDOM
		class = random
		namelist = this
		portrait = humanoid_03
		traits = {

		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 10
		create_pop = {
			species = event_target:tec_new_species
		}
	}
	create_species = {
		name = "SPECIMENS 3"
		plural = RANDOM
		class = random
		namelist = this
		portrait = humanoid_04
		traits = {

		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 10
		create_pop = {
			species = event_target:tec_new_species
		}
	}
}

tec_test_assim_specimens_2 = {
	set_global_flag = tec_supertest
	create_species = {
		name = "SPECIMENS 1"
		plural = RANDOM
		class = random
		namelist = this
		portrait = fun16
		traits = {
			trait = trait_tec_hive_psionic_entanglement
			trait = trait_hive_mind
			trait = trait_tec_superior_cybernetics_main
		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 10
		create_pop = {
			species = event_target:tec_new_species
		}
	}
	create_species = {
		name = "SPECIMENS 2"
		plural = RANDOM
		class = random
		namelist = this
		portrait = fun13
		traits = {
			trait = trait_tec_hive_psionic_resonance
			trait = trait_hive_mind
			trait = trait_tec_cyberpsionic_main
		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 10
		create_pop = {
			species = event_target:tec_new_species
		}
	}
	create_species = {
		name = "SPECIMENS 2"
		plural = RANDOM
		class = random
		namelist = this
		portrait = fun11
		traits = {
			trait = trait_tec_biopsionic_main
			trait = trait_tec_replicant_main
			trait = trait_tec_psionic_body
		}
		effect = {
			save_event_target_as = tec_new_species
		}
	}
	while = {
		count = 10
		create_pop = {
			species = event_target:tec_new_species
		}
	}
}

tec_test_assim_hypertest = {
	set_global_flag = tec_supertest
	every_owned_species = {	# Emulate the species is assimilated
		limit = {
			OR = {
				has_trait = trait_tec_hive_psionic_entanglement
				has_trait = trait_hive_mind
				has_trait = trait_tec_superior_cybernetics_main

				has_trait = trait_tec_hive_psionic_resonance
				has_trait = trait_hive_mind
				has_trait = trait_tec_cyberpsionic_main

				has_trait = trait_tec_biopsionic_main
				has_trait = trait_tec_replicant_main
				has_trait = trait_tec_psionic_body
			}
		}
		if = {
			limit = {
				has_trait = trait_tec_hive_psionic_entanglement
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_hive_psionic_entanglement
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = trait_hive_mind
			}
			modify_species = {
				species = this
				remove_trait = trait_hive_mind
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = trait_tec_superior_cybernetics_main
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_superior_cybernetics_main
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = trait_tec_hive_psionic_resonance
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_hive_psionic_resonance
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = trait_tec_cyberpsionic_main
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_cyberpsionic_main
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = trait_tec_biopsionic_main
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_biopsionic_main
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = trait_tec_replicant_main
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_replicant_main
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		if = {
			limit = {
				has_trait = trait_tec_psionic_body
			}
			modify_species = {
				species = this
				remove_trait = trait_tec_psionic_body
				add_traits_at_start_of_list = yes
				change_scoped_species = no
				effect = {
					set_timed_species_flag = {
						flag = tec_target_assim_spe_of_@prev
						days = 480
					}
					set_timed_species_flag = {
						flag = assim_spe_of_spe_@prev
						days = 30
					}
					set_timed_species_flag = {
						flag = assim_spe_of_emp_@prevprev
						days = 30
					}
					set_timed_species_flag = {
						flag = tec_cybpsi_cyb_@prev
						days = 30
					}
				}
			}
		}
		modify_species = {
			species = this
			add_trait = trait_tec_basic_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = yes
			effect = {
				set_timed_species_flag = {
					flag = tec_target_assim_spe_of_@prev
					days = 480
				}
				set_timed_species_flag = {
					flag = assim_spe_of_spe_@prev
					days = 30
				}
				set_timed_species_flag = {
					flag = assim_spe_of_emp_@prevprev
					days = 30
				}
				set_timed_species_flag = {
					flag = tec_cybpsi_cyb_@prev
					days = 30
				}
			}
		}
		prevprev = {
			capital_scope = {
				random_owned_species = {
					limit = {
						exists = this
						has_species_flag = assim_spe_of_emp_@prevprev
					}
				}
				break = yes
			}
		}
		
	}
	
}


tec_test_assim_prevpocalipse = {
	set_global_flag = tec_supertest
	owner_main_species = {
		modify_species = {
			species = this
			add_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = yes
			effect = {
				modify_species = {
					species = this
					add_trait = trait_psionic
					add_traits_at_start_of_list = yes
					change_scoped_species = yes
					effect = {
						set_timed_species_flag = {
							flag = tec_target_assim_spe_of_@prevprev
							days = 480
						}
						set_timed_species_flag = {
							flag = assim_spe_of_spe_@prevprev
							days = 30
						}
						set_timed_species_flag = {
							flag = assim_spe_of_emp_@prevprevprev
							days = 30
						}
						set_timed_species_flag = {
							flag = tec_cybpsi_cyb_@prevprev
							days = 30
						}
						save_event_target_as = tec_convert_into_this
					}
				}
			}
		}
	}
	capital_scope = {
		every_owned_pop = {
			change_species = event_target:tec_convert_into_this
		}
	}
}


tec_test_assim_prevpocalipse_2 = {
	set_global_flag = tec_supertest
	owner_main_species = {
		modify_species = {
			species = this
			remove_trait = trait_tec_superior_cybernetics_main
			add_traits_at_start_of_list = yes
			change_scoped_species = yes
			effect = {
				modify_species = {
					species = this
					remove_trait = trait_psionic
					add_traits_at_start_of_list = yes
					change_scoped_species = yes
					effect = {
						set_timed_species_flag = {
							flag = tec_target_assim_spe_of_@prevprev
							days = 480
						}
						set_timed_species_flag = {
							flag = assim_spe_of_spe_@prevprev
							days = 30
						}
						set_timed_species_flag = {
							flag = assim_spe_of_emp_@prevprevprev
							days = 30
						}
						set_timed_species_flag = {
							flag = tec_cybpsi_cyb_@prevprev
							days = 30
						}
						save_event_target_as = tec_convert_into_this
					}
				}
			}
		}
	}
	capital_scope = {
		every_owned_pop = {
			change_species = event_target:tec_convert_into_this
		}
	}
}

# effect tec_test_assim_regular_psi tec_test_assim_regular_cyb tec_test_assim_hiv

tec_test_special_trait = {
	owner_main_species = {
		modify_species = {
			add_trait = trait_tec_gene_main_t3
			change_scoped_species = no
			effect = {
				save_event_target_as = tec_aa
			}
		}
		every_species_pop = {
			change_species = event_target:tec_aa
		}
	}
	change_dominant_species = {
		species = event_target:tec_aa
	}
}

tec_test_ruler_exp = {
	ruler = {
		add_experience = 200
	}
}

tec_test_leader_exp = {
	every_owned_leader = {
		add_experience = 2000
	}
}

tec_test_new_species_mod = {
	owner_main_species = {
		modify_species = {
			remove_trait = trait_agrarian
			remove_trait = trait_industrious
			remove_trait = trait_intelligent
			remove_trait = trait_enduring
			change_scoped_species = no
			effect = {
				save_event_target_as = tec_aa
			}
		}
		every_species_pop = {
			change_species = event_target:tec_aa
		}
	}
	change_dominant_species = {
		species = event_target:tec_aa
	}
}