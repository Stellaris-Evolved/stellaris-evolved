# common\scripted_effects\zz_evolved_scripted_effects.txt

tec_cache = {
	inline_script = {
		script = tec_type_hint
		flag_scope_type = $scope$
		scripted_trigger = $trigger$
		scope = $scope_redirect$
	}

	optimize_memory
	if = {
		limit = {
			[[scope_redirect]
				exists = $scope_redirect$
				$scope_redirect$ = {
					$trigger$ = yes
				}
			]
			[[!scope_redirect]
				$trigger$ = yes
			]
		}
		
		set_$scope$_flag = tec_cache_$trigger$
	} else = {
		remove_$scope$_flag = tec_cache_$trigger$
	}
}

tec_cache_value = {
	inline_script = {
		script = tec_type_hint
		script_value = $value$
	}

	optimize_memory
	set_variable = {
		which = tec_cache_$value$
		value = value:$value$
	}
}

tec_cache_planet_type_triggers = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[force] [[force] bool = $force$ ] ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_planet_flag = tec_cache_planet_type_triggers_done } }
	]
	tec_cache = {
		scope = planet
		trigger = tec_is_arcology
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_space_arcology
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_habitat
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_ringworld
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_elysium
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_city_world
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_perfect_planet
	}
	tec_cache = {
		scope = planet
		trigger = tec_is_neutral_planet
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_all_slots_unlocked
	}

	# planet job swaps

	tec_cache = {
		scope = planet
		trigger = tec_pd_has_crucible_foundry
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_foundry_planet_swap
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_scrap_miner
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_matter_miner
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_miner_planet_swap
	}

	tec_cache = {
		scope = planet
		trigger = tec_mining_aqua_district_swap
		scope_redirect = owner
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_miner_swap
		scope_redirect = owner
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_farmer_planet_swap
	}

	tec_cache = {
		scope = planet
		trigger = tec_farming_aqua_district_swap
		scope_redirect = owner
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_farmer_swap
		scope_redirect = owner
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_technician_swap
		scope_redirect = owner
	}

	tec_cache = {
		scope = planet
		trigger = tec_generator_aqua_district_swap
		scope_redirect = owner
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_technician_planet_swap
	}

	tec_cache = {
		scope = planet
		trigger = tec_has_clerk_planet_swap
	}

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_planet_type_triggers
		parameters = ""
	}

	set_timed_planet_flag = {
		flag = tec_cache_planet_type_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_capital_triggers = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_planet_flag = tec_cache_capital_triggers_done } }
	]
	tec_cache = {
		scope = planet
		trigger = tec_has_t1_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t2_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t3_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t4_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_t5_capital
	}
	tec_cache = {
		scope = planet
		trigger = tec_has_imperial_capital
	}
	tec_cache_value = {
		value = tec_capital_tier
	}
	tec_cache_value = {
		value = tec_capital_tier_generic_scaling
	}

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_capital_triggers
		parameters = ""
	}

	set_timed_planet_flag = {
		flag = tec_cache_capital_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_building_triggers = {
	optimize_memory

	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_planet_flag = tec_cache_building_triggers_done } }
	]

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_building_triggers
		parameters = ""
	}

	set_timed_planet_flag = {
		flag = tec_cache_building_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_combined_values = {
	optimize_memory

	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_planet_flag = tec_cache_combined_values_done } }
	]

	tec_cache_value = {
		value = farming_combined_value
	}
	tec_cache_value = {
		value = mining_combined_value
	}
	tec_cache_value = {
		value = generator_combined_value
	}
	tec_cache_value = {
		value = research_combined_value
	}
	tec_cache_value = {
		value = unity_combined_value
	}
	tec_cache_value = {
		value = refinery_combined_value
	}
	tec_cache_value = {
		value = trade_combined_value
	}
	tec_cache_value = {
		value = military_combined_value
	}

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_combined_values
		parameters = ""
	}

	set_timed_planet_flag = {
		flag = tec_cache_combined_values_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_pop_count_values = {
	optimize_memory

	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_planet_flag = tec_cache_combined_values_done } }
	]

	if = {
		limit = {
			any_owned_species = {
				tec_is_cyborg_species = yes
			}
		}
		tec_cache_value = {
			value = tec_cyborg_pops
		}
	}


	set_timed_planet_flag = {
		flag = tec_cache_pop_count_values_done
		days = 30
	}

	[[!force]
}
]
}

tec_cache_colony_triggers = {
	optimize_memory

	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_planet_flag = tec_cache_colony_triggers_done } }
	]


	tec_cache = {
		scope = planet
		trigger = tec_has_special_ruler_feature
	}
	tec_cache = {
		scope = planet
		trigger = tec_planet_selective_kinship_likes
	}
	tec_cache = {
		scope = planet
		trigger = tec_planet_selective_kinship_hates
	}
	tec_cache = {
		scope = planet
		trigger = tec_planet_allows_automation
	}

	tec_cache = {
		scope = planet
		trigger = tec_planet_prosperity_gospel_check_trigger
	}

	if = {
		limit = {
			has_global_flag = galactic_community_resolution_divinity_right_to_work
		}
		tec_cache = {
			scope = planet
			trigger = tec_planet_divinity_right_to_work_job_check_trigger_ruler
		}
		tec_cache = {
			scope = planet
			trigger = tec_planet_divinity_right_to_work_job_check_trigger_specialist
		}
		tec_cache = {
			scope = planet
			trigger = tec_planet_divinity_right_to_work_job_check_trigger_worker
		}
	}


	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_colony_triggers
		parameters = ""
	}


	set_timed_planet_flag = {
		flag = tec_cache_colony_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_planet_scope_triggers = {
	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	optimize_memory
	tec_cache_planet_type_triggers = { force = $force|no$ }
	tec_cache_capital_triggers = { force = $force|no$ }
	tec_cache_building_triggers = { force = $force|no$ }
	tec_cache_colony_triggers = { force = $force|no$ }
	tec_cache_combined_values = { force = $force|no$ }
	tec_cache_pop_count_values = { force = $force|no$ }
}

tec_cache_shackled_triggers = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_pop_flag = tec_cache_shackled_triggers_done } }
	]

	tec_cache = {
		scope = pop
		trigger = tec_is_shackled_robot
	}
	tec_cache = {
		scope = pop
		trigger = tec_is_non_sapient_robot
	}
	tec_cache = {
		scope = pop
		trigger = tec_is_shackled_bioservant
	}

	tec_cache = {
		scope = pop
		trigger = tec_is_non_sapient_bioservant
	}

	set_timed_pop_flag = {
		flag = tec_cache_shackled_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}


tec_cache_pop_triggers = {
	optimize_memory

	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_pop_flag = tec_cache_pop_triggers_done } }
	]

	tec_cache = {
		scope = pop
		trigger = tec_purge_pop_category_trigger
	}
	tec_cache = {
		scope = pop
		trigger = tec_has_stapled_trait
	}
	tec_cache = {
		scope = pop
		trigger = tec_ecocat_planet_jobs_slave
	}
	tec_cache = {
		scope = pop
		trigger = tec_ecocat_planet_jobs_worker
	}
	tec_cache = {
		scope = pop
		trigger = tec_ecocat_planet_jobs_worker_only
	}
	tec_cache = {
		scope = pop
		trigger = tec_ecocat_planet_jobs_specialist
	}
	tec_cache = {
		scope = pop
		trigger = tec_ecocat_planet_jobs_specialist_only
	}
	tec_cache = {
		scope = pop
		trigger = tec_ecocat_planet_jobs_simple_drone
	}
	tec_cache = {
		scope = pop
		trigger = tec_ecocat_planet_jobs_complex_drone
	}
	tec_cache = {
		scope = pop
		trigger = battle_thrall_job_check_trigger
	}
	tec_cache = {
		scope = pop
		trigger = entertainer_job_check_trigger
	}
	tec_cache = {
		scope = pop
		trigger = complex_specialist_job_check_trigger
	}

	tec_cache = {
		scope = pop
		trigger = can_fill_ruler_job_trigger
	}
	tec_cache = {
		scope = pop
		trigger = can_fill_specialist_job_trigger
	}
	tec_cache = {
		scope = pop
		trigger = can_fill_worker_job_trigger
	}
	tec_cache = {
		scope = pop
		trigger = tec_pop_generates_crime_trigger
	}
	if = {
		limit = {
			# shortcut, need to check what happens with democracy
			exists = pop_faction
		}
		tec_cache = {
			scope = pop
			trigger = tec_can_vote_in_democratic_election_trigger
		}
	}

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_pop_triggers
		parameters = ""
	}


	set_timed_pop_flag = {
		flag = tec_cache_pop_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_species_traits_triggers = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_species_flag = tec_cache_species_traits_triggers_done } }
	]
	tec_cache = {
		scope = species
		trigger = tec_has_stapled_trait
	}

	tec_cache = {
		scope = species
		trigger = tec_has_ruler_job_invalidation_trait
	}

	tec_cache = {
		scope = species
		trigger = tec_is_total_psionic_species
	}

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_species_traits_triggers
		parameters = ""
	}

	set_timed_species_flag = {
		flag = tec_cache_species_traits_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_country_monthly_triggers = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_country_flag = tec_cache_country_monthly_triggers_done } }
	]
	if = {
		limit = {
			tec_is_default_country = yes
			is_regular_empire = yes
		}
		tec_cache = {
			scope = country
			trigger = tec_xeno_any_genocided_our_species
		}
		tec_cache = {
			scope = country
			trigger = tec_xeno_we_genocided_any
		}
		tec_cache = {
			scope = country
			trigger = tec_xeno_any_enslaved_us
		}
		tec_cache = {
			scope = country
			trigger = tec_militarist_any_own_our_planets
		}
		tec_cache = {
			scope = country
			trigger = tec_found_guardian
		}
		tec_cache = {
			scope = country
			trigger = tec_is_xenophage
		}

		# values
		tec_cache_value = {
			value = authoritarian_ethics_from_relations
		}
		tec_cache_value = {
			value = egalitarian_ethics_from_relations
		}
		tec_cache_value = {
			value = xenophobe_ethics_from_relations
		}
		tec_cache_value = {
			value = xenophile_ethics_from_relations
		}
		tec_cache_value = {
			value = spiritualist_ethics_from_relations
		}
		tec_cache_value = {
			value = materialist_ethics_from_relations
		}
		tec_cache_value = {
			value = pacifist_ethics_from_pacts
		}
		tec_cache_value = {
			value = tec_cooperative_ethics_from_relations
		}
		tec_cache_value = {
			value = tec_competitive_ethics_from_relations
		}

		every_owned_species = {
			if = {
				limit = {
					tec_species_in_country_other_are_free_xenos = {
						country = prev
					}
				}
				set_species_flag = tec_cache_tec_species_in_country_other_are_free_xenos@prev
			}
		}
	}

	tec_cache = {
		scope = country
		trigger = tec_country_has_any_deficits
	}

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_country_monthly_triggers
		parameters = ""
	}

	set_timed_country_flag = {
		flag = tec_cache_country_monthly_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

# This is separate to be able to update only when needed
tec_cache_country_civic_triggers = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_country_flag = tec_cache_country_civic_triggers_done } }
	]
	tec_cache = {
		scope = country
		trigger = tec_is_psychohistorian_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_technomancer_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_starseeker_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_psi_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_bio_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_mecha_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_labrat_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_diversifier_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_astrologer_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_singularity_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_is_special_researcher_empire
	}
	tec_cache = {
		scope = country
		trigger = tec_replaces_half_researcher_empire
	}
	# Cults
	tec_cache = {
		scope = country
		trigger = tec_is_death_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_machine_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_occult_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_paperwork_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_starseeker_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_atom_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_cycle_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_wealth_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_paranormal_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_butlerian_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_spiritualist_main_cult
	}
	tec_cache = {
		scope = country
		trigger = tec_is_spiritualist_secondary_cult
	}
	# Ruler
	tec_cache = {
		scope = country
		trigger = tec_has_ruler_civic_regular
	}
	tec_cache = {
		scope = country
		trigger = tec_has_ruler_civic_mega
	}
	tec_cache = {
		scope = country
		trigger = tec_has_ruler_civic
	}

	tec_cache = {
		scope = country
		trigger = tec_has_ruler_civic_hive
	}
	tec_cache = {
		scope = country
		trigger = tec_has_maintenance_drone_swap_civic_hive
	}

	tec_cache = {
		scope = country
		trigger = tec_has_ruler_civic_machine
	}
	tec_cache = {
		scope = country
		trigger = tec_has_directive_civic_machine
	}
	tec_cache = {
		scope = country
		trigger = tec_has_maintenance_drone_swap_civic_machine
	}
	# Swaps

	tec_cache = {
		scope = country
		trigger = tec_has_entertainer_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_healthcare_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_enforcer_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_colonist_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_clerk_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_coordinator_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_soldier_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_maintenance_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_patrol_drone_swap
	}
	tec_cache = {
		scope = country
		trigger = tec_has_warrior_drone_swap
	}

	tec_cache = {
		scope = country
		trigger = tec_uses_regular_empire_jobs
	}

	# Types
	tec_cache = {
		scope = country
		trigger = tec_is_dystopian_empire
	}

	tec_cache = {
		scope = country
		trigger = tec_is_selective_kinship_empire
	}
	# politician swaps
	tec_cache = {
		scope = country
		trigger = tec_country_has_politician_ruler
	}

	tec_cache = {
		scope = country
		trigger = tec_country_has_tec_ai_computator_ruler
	}

	tec_cache = {
		scope = country
		trigger = tec_country_has_tec_ai_high_ordinator_ruler
	}

	tec_cache = {
		scope = country
		trigger = tec_country_has_executive_ruler
	}

	tec_cache = {
		scope = country
		trigger = tec_country_has_steward_ruler
	}

	inline_script = {
		script = mod_support/tec_effect_include
		effect = tec_cache_country_civic_triggers
		parameters = ""
	}

	set_timed_country_flag = {
		flag = tec_cache_country_civic_triggers_done
		days = 30
	}

	[[!force]
		}
	]
}

# scope: country
tec_cache_opinions = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[force] bool = $force$ ]
	}
	[[!force]
		if = {
			limit = { NOT = { has_country_flag = tec_cache_opinions_done } }
	]
	if = {
		limit = {
			OR = {
				tec_is_default_country = yes
				is_fallen_empire = yes
			}
		}
		every_spynetwork = {
			limit = {
				target = {
					has_established_contact = prevprev
					OR = {
						tec_is_default_country = yes
						is_fallen_empire = yes
					}
				}
			}
			target = {
				set_variable = {
					which = tec_cache_tec_opinion
					value = 0
				}
				set_variable = {
					which = tec_cache_tec_their_opinion
					value = 0
				}
				export_trigger_value_to_variable = { # we reverse them due to using this on target
					variable = tec_cache_tec_opinion
					trigger = their_opinion
					parameters = { who = prevprev }
				}
				export_trigger_value_to_variable = {
					variable = tec_cache_tec_their_opinion
					trigger = opinion
					parameters = { who = prevprev }
				}
			}
			set_variable = {
				which = tec_cache_tec_opinion
				value = target.tec_cache_tec_opinion
			}
			set_variable = {
				which = tec_cache_tec_their_opinion
				value = target.tec_cache_tec_their_opinion
			}
			set_variable = {
				which = tec_cache_tec_opinion_total
				value = tec_cache_tec_opinion
			}
			change_variable = {
				which = tec_cache_tec_opinion_total
				value = tec_cache_tec_their_opinion
			}
		}
	}
	set_timed_country_flag = {
		flag = tec_cache_opinions_done
		days = 30
	}

	[[!force]
		}
	]
}

tec_cache_everything = {
	optimize_memory
	random_country = {
		country_event = {
			id = tec_caching.7
		}
	}
}

tec_hoarders_recover_resource = {
	inline_script = {
		script = tec_type_hint
		resource = $RESOURCE$
	}

	if = {
		limit = {
			is_variable_set = tec_$RESOURCE$_stockpile
		}
		set_variable = {
			which = tec_$RESOURCE$_recovered
			value = tec_$RESOURCE$_stockpile
		}
		divide_variable = {
			which = tec_$RESOURCE$_recovered
			value = 2
		}
		owner = {
			add_resource = {
				$RESOURCE$ = 1
				mult = prev.tec_$RESOURCE$_recovered
			}
		}
		clear_variable = tec_$RESOURCE$_stockpile
	} else = {
		set_variable = {
			which = tec_$RESOURCE$_recovered
			value = 0
		}
	}
}

tec_hoarders_withdraw_resource = {
	inline_script = {
		script = tec_type_hint
		resource = $RESOURCE$
	}

	if = {
		limit = {
			is_variable_set = tec_$RESOURCE$_stockpile
		}
		owner = {
			add_resource = {
				$RESOURCE$ = 1
				mult = prev.tec_$RESOURCE$_stockpile
			}
		}
		clear_variable = tec_$RESOURCE$_stockpile
	}
}

tec_hoarders_manage_resource = {
	inline_script = {
		script = tec_type_hint
		resource = $RESOURCE$
	}

	if = {
		limit = {
			has_planet_flag = tec_vault_manage_$RESOURCE$
		}
		event_target:tec_hoarders_managed_planet = {
			change_variable = {
				which = tec_$RESOURCE$_stockpile
				value = tec_stockpile_change
			}
			owner = {
				add_resource = {
					$RESOURCE$ = -1
					mult = prev.tec_stockpile_change
				}
			}
		}
	}
}

tec_terraformer_keeper_planet_deposit_effect = {
	random_list = {
		10 = {
			add_deposit = d_tec_sanctified_eco_grounds
		}
	}
}

tec_terraformer_keeper_arcology_deposit_effect = {
	random_list = {
		10 = {
			add_deposit = d_tec_sanctified_eco_grounds_ring
		}
	}
}

tec_terraformer_environmentalist_planet_deposit_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 0.5
				has_climate = wet
			}
			modifier = {
				factor = 1.25
				has_climate = cold
			}
			add_deposit = d_mountain_range
		}
		10 = {
			modifier = {
				factor = 1.25
				has_climate = dry
			}
			add_deposit = d_active_volcano
		}
		10 = {
			modifier = {
				factor = 0.5
				has_climate = cold
			}
			add_deposit = d_dangerous_wildlife_blocker
		}
		10 = {
			modifier = {
				factor = 0.5
				has_climate = dry
			}
			add_deposit = d_dense_jungle
		}
		10 = {
			modifier = {
				factor = 0.5
				has_climate = dry
			}
			modifier = {
				factor = 1.25
				has_climate = wet
			}
			add_deposit = d_toxic_kelp
		}
		10 = {
			modifier = {
				factor = 1.25
				has_climate = dry
			}
			add_deposit = d_deep_sinkhole
		}
		10 = {
			modifier = {
				factor = 1.25
				has_climate = dry
			}
			add_deposit = d_quicksand_basin
		}
		10 = {
			modifier = {
				factor = 1.25
				OR = {
					has_climate = wet
					has_climate = cold
				}
			}
			add_deposit = d_noxious_swamp
		}
		10 = {
			modifier = {
				factor = 0.5
				has_climate = dry
			}
			add_deposit = d_massive_glacier
		}
	}
}

tec_terraformer_environmentalist_arcology_deposit_effect = {
	random_list = {
		10 = {
			add_deposit = d_tec_preserved_eco_ring
		}
		10 = {
			add_deposit = d_tec_preserved_eco_ring_2
		}
	}
}

tec_terraformer_engineers_planet_deposit_effect = {
	random_list = {
		10 = {
			add_deposit = d_tec_eco_basin
		}
		10 = {
			add_deposit = d_tec_eco_glacier
		}
		10 = {
			add_deposit = d_tec_eco_jungle
		}
		10 = {
			add_deposit = d_tec_eco_kelp
		}
		10 = {
			add_deposit = d_tec_eco_mountains_range
		}
		10 = {
			add_deposit = d_tec_eco_sinkhole
		}
		10 = {
			add_deposit = d_tec_eco_swamp
		}
		10 = {
			add_deposit = d_tec_eco_volcano
		}
		10 = {
			add_deposit = d_tec_eco_wildlife_blocker
		}
	}
}

tec_terraformer_engineers_arcology_deposit_effect = {
	random_list = {
		10 = {
			add_deposit = d_tec_eco_synthetic_life
		}
		10 = {
			add_deposit = d_tec_eco_synthetic_volcano
		}
		10 = {
			add_deposit = d_tec_eco_synthetic_flora
		}
	}
}

tec_terraformer_preserver_planet_deposit_effect = {
	random_list = {
		10 = {
			add_deposit = d_tec_preserved_eco_ecology
		}
		10 = {
			add_deposit = d_tec_preserved_eco_mining
		}
		10 = {
			add_deposit = d_tec_preserved_eco_other
		}
	}
}

tec_terraformer_preserver_arcology_deposit_effect = {
	random_list = {
		10 = {
			add_deposit = d_tec_preserved_eco_ring
		}
		10 = {
			add_deposit = d_tec_preserved_eco_ring_2
		}
	}
}

tec_engineer_precursor_deposit_effect = {
	if = {
		limit = {
			this.solar_system = {
				any_system_planet = {
					OR = {
						has_planet_flag = precursor_world
						has_planet_flag = gpm_is_precursor_world
					}
				}
			}
		}
		add_deposit = d_tec_engineered_precursor
	}
}

tec_engineer_habitat_deposit_effect = {
	random_list = {
		10 = {
			modifier = {
				factor = 100
				has_trade_designation = yes
			}
			add_deposit = d_tec_engineered_hangar
		}
		10 = {
			modifier = {
				factor = 100
				has_foundry_designation = yes
			}
			add_deposit = d_tec_engineered_industrial
		}
		10 = {
			modifier = {
				factor = 100
				has_refinery_designation = yes
			}
			add_deposit = d_tec_engineered_refinery
			random_list = {
				10 = {
					set_planet_flag = tec_engineer_chemist_refinery
				}
				10 = {
					set_planet_flag = tec_engineer_gas_refiner_refinery
				}
				10 = {
					set_planet_flag = tec_engineer_translucer_refinery
				}
			}
		}
	}
}

tec_engineer_arcology_deposit_effect = {
	random_list = {
		10 = {	# Industrial
			modifier = {
				factor = 100
				OR = {
					has_industrial_designation = yes
					has_foundry_designation = yes
					has_factory_designation = yes
				}
			}
			add_deposit = d_tec_engineered_eco_ring_1
		}
		10 = {	# Energy
			modifier = {
				factor = 100
				OR = {
					has_generator_designation = yes
					has_rural_designation = yes
				}
			}
			add_deposit = d_tec_preserved_eco_ring_2
		}
		10 = {
			modifier = {
				factor = 100
				OR = {
					has_trade_designation = yes
					has_fortress_designation = yes
				}
			}
			add_deposit = d_tec_engineered_eco_ring_3
		}
	}
}

tec_terraformer_deposit_effect = {
	if = {
		limit = {
			owner = {
				tec_is_terraformer_keeper_empire = yes
			}
		}
		while = {
			count = $count$
			tec_terraformer_keeper_$type$_deposit_effect = yes
		}
	}
	if = {
		limit = {
			owner = {
				tec_is_terraformer_environmentalist_empire = yes
			}
		}
		while = {
			count = $count$
			tec_terraformer_environmentalist_$type$_deposit_effect = yes
		}
	}
	if = {
		limit = {
			owner = {
				tec_is_terraformer_engineer_empire = yes
			}
		}
		while = {
			count = $count$
			tec_terraformer_engineers_$type$_deposit_effect = yes
		}
	}
	if = {
		limit = {
			owner = {
				tec_is_terraformer_preserver_empire = yes
			}
		}
		while = {
			count = $count$
			tec_terraformer_preserver_$type$_deposit_effect = yes
		}
	}
}

tec_add_engineered_weather = {
	if = {
		limit = {
			NOT = {
				has_modifier = pm_tec_engineered_weather
			}
		}
		add_modifier = {
			modifier = pm_tec_engineered_weather
			days = -1
		}
	}
}

tec_add_engineered_habitat = {
	if = {
		limit = {
			NOT = {
				has_modifier = pm_tec_engineered_habitat
			}
		}
		add_modifier = {
			modifier = pm_tec_engineered_habitat
			days = -1
		}
	}
}

tec_faction_terraform_effect = {
	change_variable = {
		which = tec_terraformed_worlds
		value = 1
	}
}

# Galactic Paragons

tec_country_get_robot_species = {
	optimize_memory
	if = {	# get true if exists
		# If the empire has robotic species, adapts the aiauth to it
		limit = {
			OR = {
				any_galaxy_species = {
					OR = {
						has_species_flag = mechanical_species@prev
					}
				}
			}
		}
		random_galaxy_species = {
			limit = {
				has_species_flag = mechanical_species@prev
			}
			save_event_target_as = tec_robot_search_species
		}
	}
	else_if = {	# Get fake then
		limit = {
			OR = {
				any_galaxy_species = {
					OR = {
						has_species_flag = mechanical_species_fake_@prev
					}

				}
			}
		}
		random_galaxy_species = {
			limit = {
				has_species_flag = mechanical_species_fake_@prev
			}
			save_event_target_as = tec_robot_search_species
		}
	}
	else = {
		# Creates a fake robot species
		# Later when the robot tech is researched the leader change species
		tec_create_fake_robot_species = yes
		last_created_species = {
			save_event_target_as = tec_robot_search_species
		}
	}
}

tec_country_aiauth_prepare_ai_species = {
	optimize_memory
	if = {
		limit = {
			NOT = { exists = event_target:tec_ai_species }
		}

		if = {
			limit = {
				is_individual_machine = yes
			}
			owner_main_species = {
				save_event_target_as = tec_ai_species
			}
		}
		else = {
			tec_country_get_robot_species = yes
			event_target:tec_robot_search_species = {
				save_event_target_as = tec_ai_species
			}
		}
	}
}

tec_country_create_aiauth_ruler  = {
	inline_script = {
		script = tec_type_hint
		[[class] leader_class = $class$ ]
		[[ethic] ethic = $ethic$ ]
	}

	set_country_flag = tec_force_councilor_traits
	tec_country_aiauth_prepare_ai_species = yes
	create_leader = {
		class = $class|official$
		species = event_target:tec_ai_species
		name = tec_aiauth_ruler
		skill = 1
		gender = indeterminable
		event_leader = yes
		skip_background_generation = yes
		can_manually_change_location = no
		can_assign_to_council = yes
		hide_leader = no
		immortal = yes
		custom_description = councilor_tec_aiauth_ruler_desc
		randomize_traits = yes
		background_ethic = $ethic|ethic_gestalt_consciousness$
		effect = {
			save_event_target_as = tec_aiauth_ruler
		}
	}
	event_target:tec_aiauth_ruler = {
		set_leader_flag = tec_no_species_traits
		add_trait_no_notify = leader_trait_tec_aiauth_ruler
		tec_leader_add_councilor_trait = yes
		set_owner = prev
		tec_leader_handle_starting_modifiers = {
			from = prev
		}
		set_leader_flag = leader_death_events_blocked
		set_leader_flag = tec_avoid_portait_change
		set_leader_flag = tec_aiauth_ruler_@prev
	}
	assign_leader = event_target:tec_aiauth_ruler
	remove_country_flag = tec_force_councilor_traits
}

tec_country_create_aiauth_ruler_replace = {
	inline_script = {
		script = tec_type_hint
		leader_scope = $ruler$
	}

	set_country_flag = tec_force_councilor_traits
	set_country_flag = tec_no_starting_traits_modification
	set_country_flag = tec_no_starting_skill_modification
	tec_country_aiauth_prepare_ai_species = yes
	$ruler$ = {
		save_event_target_as = tec_replaced_ruler
	}
	clone_leader = {
		target = event_target:tec_replaced_ruler
		species = event_target:tec_ai_species
		gender = indeterminable
		event_leader = yes
		skip_background_generation = yes
		can_manually_change_location = no
		can_assign_to_council = yes
		hide_leader = no
		immortal = yes
		custom_description = councilor_tec_aiauth_ruler_desc
		randomize_traits = no
	}
	last_created_leader = {
		save_event_target_as = tec_aiauth_ruler
		set_leader_flag = tec_no_species_traits
		change_background_job = none
		copy_flags_and_variables_from = event_target:tec_replaced_ruler
		change_leader_portrait = event_target:tec_ai_species
		set_name = event_target:tec_replaced_ruler
		add_trait_no_notify = leader_trait_tec_aiauth_ruler
		tec_leader_add_councilor_trait = yes
		set_owner = prev
		set_leader_flag = tec_force_starting_actions
		tec_leader_handle_starting_modifiers = {
			from = prev
		}
		remove_leader_flag = tec_force_starting_actions
		set_leader_flag = leader_death_events_blocked
		set_leader_flag = tec_avoid_portait_change
		set_leader_flag = tec_aiauth_ruler_@prev
	}
	assign_leader = event_target:tec_aiauth_ruler

	remove_country_flag = tec_force_councilor_traits
	remove_country_flag = tec_no_starting_traits_modification
	remove_country_flag = tec_no_starting_skill_modification

	event_target:tec_replaced_ruler = {
		exile_leader_as = destitute_ruler_ai_auth
	}
}

tec_country_refragment_aiauth_ruler  = {
	inline_script = {
		script = tec_type_hint
		[[ethic] ethic = $ethic$ ]
	}

	inline_script = {
		script = iterators/tec_iterate_leader_class
		code = "
			if = {
				limit = {
					has_country_flag = tec_fragmenting_\$leader_class\$
				}
				tec_country_create_aiauth_ruler = {
					class = \$leader_class\$
					ethic = \$ethic\$
				}
			}
		"
		ethic = $ethic|ethic_gestalt_consciousness$
	}

	event_target:tec_aiauth_ruler = {
		if = {
			limit = {
				exists = event_target:tec_aiauth_pre_refragment
			}
			set_name = event_target:tec_aiauth_pre_refragment
			change_leader_portrait = event_target:tec_aiauth_pre_refragment
		}
		while = {
			count = prev.tec_aiauth_ruler_level
			add_skill_without_trait_selection = 1
		}
	}
}

tec_country_create_aiauth_councilor = {
	inline_script = {
		script = tec_type_hint
		localisation = $name$
		localisation = $desc$
		leader_class = $class$
		[[council_pos] councilor = $council_pos$ ]
		[[ethic] ethic = $ethic$ ]
	}
	set_country_flag = tec_force_councilor_traits
	tec_country_aiauth_prepare_ai_species = yes
	create_leader = {
		class = $class$
		species = event_target:tec_ai_species
		name = $name$
		skill = 1
		gender = indeterminable
		event_leader = yes
		background_planet = home_planet
		can_manually_change_location = no
		can_assign_to_council = yes
		hide_leader = no
		immortal = yes
		custom_description = $desc$
		randomize_traits = yes
		background_ethic = $ethic|ethic_gestalt_consciousness$
		effect = {
			set_leader_flag = tec_no_species_traits
			save_event_target_as = tec_aiauth_councilor
			log = "Teeeeest"
			if = {	# Avoids sudden synth trait to appear
				limit = {
					has_trait = leader_trait_synthetic
				}
				remove_trait = leader_trait_synthetic
			}
		}
	}
	last_created_leader = {
		save_event_target_as = tec_aiauth_councilor
		set_owner = prev
		add_trait_no_notify = leader_trait_tec_aiauth_node
		tec_leader_add_councilor_trait = yes
		[[council_pos]
			set_council_position = $council_pos$
		]
		tec_leader_handle_starting_modifiers = {
			from = prev
		}
		tec_leader_set_aiauth_node_portait_effect = yes
		set_leader_flag = leader_death_events_blocked
		set_leader_flag = tec_avoid_portait_change
		tec_leader_add_starting_skill = yes
	}
	[[!ethic]
		if = {	# Removes gestalt ethic
			limit = {
				event_target:tec_aiauth_councilor = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
			# this = country
			# event_target:tec_aiauth_councilor = node
			tec_country_aiauth_councilor_assign_ethic = {
				target_scope = "event_target:tec_aiauth_councilor"
			}
		}
	]
	remove_country_flag = tec_force_councilor_traits
}

tec_country_aiauth_councilor_assign_ethic = {
	inline_script = {
		script = tec_type_hint
		leader_scope = $target_scope$
	}
	random_owned_pop = {
		limit = {
			# Happiness = ethic
			pop_has_happiness = yes
			NOR = {
				has_trait = trait_zombie
				has_trait = trait_nerve_stapled
				has_trait = trait_presapient_proles
				has_trait = trait_syncretic_proles
			}
			# Lets avoid repetitive things
			NOT = {
				has_pop_flag = tec_temp_pop_aiauth
			}
		}
		save_event_target_as = tec_temp_pop
	}
	event_target:tec_temp_pop = {
		# Lets avoid repetitive things
		set_timed_pop_flag = {
			flag = tec_temp_pop_aiauth
			days = 1
		}
		switch = {
			trigger = has_ethic
			# Vanilla
			inline_script = {
				script = iterators/tec_iterate_ethic_regular
				code = "
					ethic_\$ethic\$ = {
						\$target_scope\$ = {
							change_background_ethic = ethic_\$ethic\$
						}
					}
				"
				target_scope = $target_scope$
			}
		}
	}
}


tec_country_cleanup_aiauth_fragment_class_flags = {
	inline_script = {
		script = iterators/tec_iterate_leader_class
		code = "
			remove_country_flag = tec_fragmenting_\$leader_class\$
		"
	}
}

tec_country_refragment_aiauth_councilor = {
	inline_script = {
		script = tec_type_hint
		[[ethic] ethic = $ethic$ ]
	}
	inline_script = {
		script = iterators/tec_iterate_leader_class
		code = "
			if = {
				limit = {
					has_country_flag = tec_fragmenting_\$leader_class\$
				}
				tec_country_create_aiauth_councilor = {
					class = \$leader_class\$
					name = councilor_tec_aiauth_fragment_\$leader_class\$
					desc = councilor_tec_aiauth_fragment_\$leader_class\$_desc
					ethic = \$ethic\$
				}
			}
		"
		ethic = $ethic|ethic_gestalt_consciousness$
	}
}

tec_country_aiauth_set_fragmenting_class_flag = {
	inline_script = {
		script = tec_type_hint
		leader_scope = $leader$
	}

	$leader$ = {
		switch = {
			trigger = leader_class
			inline_script = {
				script = iterators/tec_iterate_leader_class
				code = "
					\$leader_class\$ = {
						prev = { set_country_flag = tec_fragmenting_\$leader_class\$ }
					}
				"
			}
		}
	}

}

tec_leader_aiauth_planetary_governing_node_set_trait_block_flags = {
	set_leader_flag = block_pilot_traits
	set_leader_flag = block_army_traits
	set_leader_flag = block_council_traits
	set_leader_flag = block_federation_traits
	set_leader_flag = block_galcom_traits
}


tec_country_aiauth_planetary_governing_node_set_trait_block_flags = {
	set_country_flag = block_pilot_traits
	set_country_flag = block_army_traits
	set_country_flag = block_council_traits
	set_country_flag = block_federation_traits
	set_country_flag = block_galcom_traits
}


tec_country_aiauth_planetary_governing_node_reset_trait_block_flags = {
	remove_country_flag = block_pilot_traits
	remove_country_flag = block_army_traits
	remove_country_flag = block_council_traits
	remove_country_flag = block_federation_traits
	remove_country_flag = block_galcom_traits
}


tec_country_create_aiauth_planetary_governing_node = {
	optimize_memory
	inline_script = {
		script = tec_type_hint
		[[ethic] ethic = $ethic$ ]
	}

	set_country_flag = tec_force_normal_traits
	tec_country_aiauth_prepare_ai_species = yes
	tec_country_aiauth_planetary_governing_node_set_trait_block_flags = yes

	inline_script = {
		script = iterators/tec_iterate_leader_class
		code = "
			if = {
				limit = {
					has_country_flag = tec_fragmenting_\$leader_class\$
				}
				create_leader = {
					class = \$leader_class\$
					species = event_target:tec_ai_species
					name = tec_aiauth_planetary_governing_node
					skill = 1
					gender = indeterminable
					event_leader = yes
					skip_background_generation = yes
					can_manually_change_location = no
					hide_leader = no
					immortal = yes
					can_assign_to_council = no
					custom_description = tec_aiauth_planetary_governing_node_desc
					randomize_traits = yes
					background_ethic = \$ethic\$
					effect = {
						tec_leader_aiauth_planetary_governing_node_set_trait_block_flags = yes
						if = {	# Avoids sudden synth trait to appear
							limit = {
								has_trait = leader_trait_synthetic
							}
							remove_trait = leader_trait_synthetic
						}
						set_leader_flag = tec_no_species_traits
						save_event_target_as = tec_aiauth_planetary_governing_node
					}
				}
			}
		"
		ethic = $ethic|ethic_gestalt_consciousness$
	}
	tec_country_aiauth_planetary_governing_node_reset_trait_block_flags = yes

	last_created_leader = {
		save_event_target_as = tec_aiauth_planetary_governing_node
		set_leader_flag = tec_no_species_traits
		add_trait_no_notify = leader_trait_tec_aiauth_planetary_governing_node
		set_owner = prev
		tec_leader_add_governor_trait = yes
		tec_leader_handle_starting_modifiers = {
			from = prev
		}
		tec_leader_add_starting_skill = yes
		set_name = {
			key = "tec_aiauth_planetary_governing_node"
			variable_string = "\\[event_target:tec_aiauth_planetary_governing_node_planet.GetName]"
		}
		tec_leader_set_aiauth_node_portait_effect = yes
		set_leader_flag = tec_avoid_portait_change
		set_leader_flag = leader_death_events_blocked
	}
	remove_country_flag = tec_force_normal_traits
}

tec_country_refragment_aiauth_node = {
	inline_script = {
		script = tec_type_hint
		scripted_effect = $fragment_effect$
		leader_scope = $leader$
	}
	$leader$ = {
		save_event_target_as = tec_aiauth_pre_refragment
		switch = {
			trigger = has_ethic
			ethic_gestalt_consciousness = {
				prev = {
					$fragment_effect$ = {
						ethic = ethic_gestalt_consciousness
					}
				}
			}
			inline_script = {
				script = iterators/tec_iterate_ethic_regular
				code = "
					ethic_\$ethic\$ = {
						prev = {
							\$fragment_effect\$ = {
								ethic = ethic_\$ethic\$
							}
						}
					}
				"
				fragment_effect = $fragment_effect$
			}
		}
	}
}

tec_country_fragment_aiauth_node_cost = {
	add_resource = {
		unity = -1
		mult = value:tec_aiauth_fragment_cost
	}
}


tec_country_defaulted_aiauth_ai_power_situation_tooltip = {
	tooltip = {
		owner = { tec_country_defaulted_aiauth_ai_power_effect = yes }
	}
	custom_tooltip = tec_deficit_situation_extra_ai_power_defaulted_tooltip
}

tec_country_defaulted_aiauth_ai_power_effect = {
	add_modifier = {
		modifier = pm_tec_country_ai_power_defaulted
		years = 10
	}
	hidden_effect = {
		if = {
			limit = { is_ai = yes }
			log = "AI [This.GetName] defaulted as a result of [Root.GetName] in [GetYear]"
		}
		else = {
			log = "Player [This.GetName] defaulted as a result of [Root.GetName] in [GetYear]"
		}
		every_owned_leader = {
			limit = {
				tec_is_aiauth_node = yes
				is_ruler = no
			}
			kill_leader = { show_notification = no }
		}
	}
	custom_tooltip = tec_end_ai_power_deficit_effect_tooltip
}


tec_planet_force_update_desgnation = {
	set_planet_flag = tec_force_designation_refresh
	set_colony_type = col_tec_force
	remove_planet_flag = tec_force_designation_refresh

}

tec_planet_psionically_ascend_pops_effect = {
	create_variable_if_not_exists = {
		VARIABLE = tec_psionic_planet_ascended_pops
		VALUE_IF_CREATED = 0
	}
	while = {
		count = value:tec_psionic_planet_ascension_pop_ascend
		remove_planet_flag = tec_psionic_planet_ascension_found_pop

		# Xenos
		if = {
			limit = {
				not = { has_planet_flag = tec_psionic_planet_ascension_found_pop }
				has_planet_flag = tec_psionic_planet_ascension_xenos
			}
			random_owned_pop = {
				limit = {
					species = {
						tec_is_any_psionic_species = yes
						NOT = { is_same_species = prev.owner.owner_main_species }
					}
					is_sapient = yes
				}

				kill_pop = yes
				prev = {
					set_planet_flag = tec_psionic_planet_ascension_found_pop
					change_variable = {
						which = tec_psionic_planet_ascended_pops
						value = 1
					}
				}
			}
		}

		# Slaves
		if = {
			limit = {
				not = { has_planet_flag = tec_psionic_planet_ascension_found_pop }
				has_planet_flag = tec_psionic_planet_ascension_slaves
			}
			random_owned_pop = {
				limit = {
					species = {
						tec_is_any_psionic_species = yes
					}
					is_enslaved = yes
					is_sapient = yes
				}

				kill_pop = yes
				prev = {
					set_planet_flag = tec_psionic_planet_ascension_found_pop
					change_variable = {
						which = tec_psionic_planet_ascended_pops
						value = 1
					}
				}
			}
		}

		# Non necrophage/elder
		if = {
			limit = {
				not = { has_planet_flag = tec_psionic_planet_ascension_found_pop }
				exists = owner
				owner = {
					OR = {
						has_origin = origin_necrophage
						has_civic = civic_tec_origin_elders
					}
				}
				count_owned_pop = {
					limit = {
						species = {
							tec_is_any_psionic_species = yes
							NOT = { has_trait = trait_necrophage }
							NOT = { has_trait = trait_tec_se_elder }
						}
						is_sapient = yes
					}
					count > 1
				}
			}
			random_owned_pop = {
				limit = {
					species = {
						tec_is_any_psionic_species = yes
						NOT = { has_trait = trait_necrophage }
						NOT = { has_trait = trait_tec_se_elder }
					}
					is_sapient = yes
				}

				kill_pop = yes
				prev = {
					set_planet_flag = tec_psionic_planet_ascension_found_pop
					change_variable = {
						which = tec_psionic_planet_ascended_pops
						value = 1
					}
				}
			}
		}

		# Rest
		if = {
			limit = {
				not = { has_planet_flag = tec_psionic_planet_ascension_found_pop }
			}
			random_owned_pop = {
				limit = {
					species = {
						tec_is_any_psionic_species = yes
					}
					is_sapient = yes
				}

				kill_pop = yes
				prev = {
					set_planet_flag = tec_psionic_planet_ascension_found_pop
					change_variable = {
						which = tec_psionic_planet_ascended_pops
						value = 1
					}
				}
			}
		}
	}
}

tec_set_bioservant_portrait_effect = {
	if = {
		limit = {
			prev = { use_bioservant_portrait_sd_hum_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_mam13" }
	}
	else_if = {
		limit = {
			prev = { use_bioservant_portrait_sd_mam_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_mam6" }
	}
	else_if = {
		limit = {
			prev = { use_bioservant_portrait_sd_rep_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_rep12" }
	}
	else_if = {
		limit = {
			prev = { use_bioservant_portrait_sd_avi_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_avi12" }
	}
	else_if = {
		limit = {
			prev = { use_bioservant_portrait_sd_art_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_art11" }
	}
	else_if = {
		limit = {
			prev = { use_bioservant_portrait_sd_mol_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_mol3" }
	}
	else_if = {
		limit = {
			prev = { use_bioservant_portrait_sd_fun_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_fun9" }
	}
	else_if = {
		limit = {
			prev = { use_bioservant_portrait_sd_pla_bioservant = yes }
		}
		change_species_characteristics = { portrait = "pre_fun13" }
	}
	else = {
		change_species_characteristics = { portrait = "pre_mam13" }
	}
}

tec_country_remove_gestalt_ethics = {
	country_remove_ethic = ethic_gestalt_consciousness
	inline_script = {
		script = iterators/tec_iterate_ethic_gestalt
		code = "
			country_remove_ethic = ethic_\$ethic\$
		"
	}
}

tec_country_convert_to_gestalt = {
	clear_ethos = yes
	shift_ethic = ethic_gestalt_consciousness

	while = {
		count = 2
		random_list = {
			inline_script = {
				script = iterators/tec_iterate_ethic_gestalt
				code = "
					1 = {
						modifier = {
							has_ethic = ethic_\$ethic\$
							mult = 0
						}
						modifier = {
							has_ethic = ethic_\$opposing_ethic\$
							mult = 0
						}
						shift_ethic = ethic_\$ethic\$
					}
				"
			}
		}
	}
}

tec_leader_cyber_cortex_gamification_xp = {
	inline_script = {
		script = tec_type_hint
		int = $experience$
	}

	create_variable_if_not_exists = {
		VARIABLE = tec_gamification_cortex_xp
		VALUE_IF_CREATED = 0
	}

	create_variable_if_not_exists = {
		VARIABLE = tec_gamification_cortex_tier
		VALUE_IF_CREATED = 0
	}

	change_variable = {
		which = tec_gamification_cortex_xp
		value = $experience$
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_edict = tec_gamified_ascendance
			}
		}
		change_variable = {
			which = tec_gamification_cortex_xp
			value = @[ $experience$ / 2 ]
		}
	}

	if = {
		limit = {
			check_variable_arithmetic = {
				which = tec_gamification_cortex_xp
				value < 0
			}
		}
		set_variable = {
			which = tec_gamification_cortex_xp
			value = 0
		}
	}

	while = {
		limit = {
			check_variable_arithmetic = {
				which = tec_gamification_cortex_xp
				value >= 100
			}
			check_variable_arithmetic = {
				which = tec_gamification_cortex_tier
				value < 3
			}
		}
		subtract_variable = {
			which = tec_gamification_cortex_xp
			value = 100
		}
		change_variable = {
			which = tec_gamification_cortex_tier
			value = 1
		}
		tec_leader_cyber_cortex_gamification_roll_bonus = yes
	}
	if = {
		limit = {
			check_variable_arithmetic = {
				which = tec_gamification_cortex_xp
				value >= 100
			}
		}
		set_variable = {
			which = tec_gamification_cortex_xp
			value = 100
		}
	}
}

tec_leader_cyber_cortex_gamification_roll_bonus = {
	random_list = {
		# ruler
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_influence
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_influence
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_exceptional
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_exceptional
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_effective
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_effective
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_face
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					OR = {
						is_homicidal = yes
						has_valid_civic = civic_inwards_perfection
					}
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						tec_has_diplomatic_civic = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				leader_class = official
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_face
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_ascension
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_ascensionists
						has_valid_civic = civic_corporate_ascensionists
					}
				}
			}
			modifier = {
				mult = 1.5
				leader_class = official
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_ascension
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_enigma
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_ascension_perk = ap_technological_ascendancy
						has_ascension_perk = ap_archaeoengineers
						has_ascension_perk = ap_cosmogenesis
						is_dark_consortium_empire = yes
						is_dimensional_worship_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				leader_class = scientist
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_enigma
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_cooperator
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					OR = {
						is_homicidal = yes
						has_valid_civic = civic_inwards_perfection
					}
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						tec_has_diplomatic_civic = yes
						has_valid_civic = civic_tec_corporate_scientific_corp
					}
				}
			}
			modifier = {
				mult = 1.5
				leader_class = scientist
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_cooperator
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_tactical
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						is_homicidal = yes
						has_valid_civic = civic_tec_regular_stratocracy
						has_valid_civic = civic_individual_machine_warbots
						has_valid_civic = civic_tec_regular_war_engineers
						has_valid_civic = civic_tec_regular_war_lords
						has_valid_civic = civic_tec_corporate_militarybureau
						has_valid_civic = civic_tec_corporate_navaltraders
						has_valid_civic = civic_crusader_spirit
						has_valid_civic = civic_crusader_spirit_corporate
						has_valid_civic = civic_barbaric_despoilers
					}
				}
			}
			modifier = {
				mult = 1.5
				leader_class = commander
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_tactical
		}
		10 = {
			modifier = {
				mult = 0
				is_ruler = no
				is_heir = no
			}
			modifier = {
				mult = 1.5
				is_heir = yes
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_ruler_defensive
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_inwards_perfection
						has_valid_civic = civic_tec_regular_secured_domain
						tec_is_hoarder_empire = yes
						is_sovereign_guardianship_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				leader_class = commander
			}
			set_leader_flag = tec_cyborg_gamification_cortex_ruler_defensive
		}
		# councilors
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_edict
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_edict
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_agenda
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_agenda
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_agenda_2
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_agenda_2
		}
		# councilor economy lean
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_parliamentary_system
						has_valid_civic = civic_tec_regular_political_virtue
						has_valid_civic = civic_free_haven
						tec_is_direct_democracy_swap = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_official_economy_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = official }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_faction
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_faction
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						tec_is_engineer_empire = yes
						has_ascension_perk = ap_master_builders
						has_galactic_wonders = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_official_economy_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = official }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_mega
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_mega
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_origin = origin_arc_welders
						has_ascension_perk = ap_grasp_the_void
						has_valid_civic = civic_tec_regular_computerized_extraction
						has_valid_civic = civic_tec_regular_space_pioneers
						has_valid_civic = civic_private_prospectors
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_official_economy_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = official }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_void
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_void
		}
		# councilor diplo lean
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_tec_corporate_cooperacorp
						has_valid_civic = civic_tec_regular_wealth_cult
						has_valid_civic = civic_tec_regular_corporate_politics
						has_valid_civic = civic_tec_corporate_wealth_cult
						has_valid_civic = civic_tec_corporate_flagshipbureau
						has_valid_civic = civic_tec_corporate_bank_corp
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_official_economy_councilor
					has_trait = subclass_official_diplomacy_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = official }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_void
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_void
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					OR = {
						is_homicidal = yes
						has_valid_civic = civic_inwards_perfection
					}
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						tec_has_diplomatic_civic = yes
						tec_is_pompous_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_official_diplomacy_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = official }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_diplo
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_diplo
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						tec_is_netrunner_empire = yes
						is_criminal_syndicate = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_official_diplomacy_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = official }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_encryption
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_encryption
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						tec_is_netrunner_empire = yes
						is_criminal_syndicate = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_official_diplomacy_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = official }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_decryption
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_decryption
		}
		# councilor res lean
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_technocracy
						has_valid_civic = civic_tec_regular_science_directorate
						has_valid_civic = civic_tec_regular_scientific_belief
						has_valid_civic = civic_tec_corporate_scientific_corp
						has_valid_civic = civic_tec_corporate_innovative
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_scientist_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_research
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_research
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_ascension_perk = ap_grasp_the_void
						has_valid_civic = civic_tec_regular_computerized_extraction
						has_valid_civic = civic_tec_regular_space_pioneers
						has_valid_civic = civic_private_prospectors
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_scientist_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_orbital
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_orbital
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 0
				has_ancrel = no
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_origin = origin_remnants
						has_valid_civic = civic_corporate_scavengers
						has_valid_civic = civic_scavengers
						has_ascension_perk = ap_archaeoengineers
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_scientist_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_ancient
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_ancient
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_ascension_perk = ap_transcendent_learning
						is_memory_vault_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_scientist_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_educator
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_educator
		}
		# councilor mili lean
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_inwards_perfection
						has_valid_civic = civic_tec_regular_secured_domain
						tec_is_hoarder_empire = yes
						is_sovereign_guardianship_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_commander_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_platform
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_platform
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						always = no
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_commander_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_logistics
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_logistics
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_tec_regular_stratocracy
						has_valid_civic = civic_tec_corporate_militarybureau
						has_valid_civic = civic_tec_corporate_navaltraders
						has_valid_civic = civic_crusader_spirit
						has_valid_civic = civic_crusader_spirit_corporate
						has_valid_civic = civic_barbaric_despoilers
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_commander_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_ship
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_ship
		}
		10 = {
			modifier = {
				mult = 0
				OR = {
					is_councilor = no
					is_ruler = yes
				}
			}
			modifier = {
				mult = 2
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_heroic_tales
						has_valid_civic = civic_inwards_perfection
						has_valid_civic = civic_tec_regular_secured_domain
						tec_is_hoarder_empire = yes
						is_sovereign_guardianship_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					has_trait = subclass_commander_councilor
				}
			}
			modifier = {
				mult = 0.25
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_councilor_army
			}
			set_leader_flag = tec_cyborg_gamification_cortex_councilor_army
		}

		# galcom

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_competitive = yes
						tec_has_cult = {
							cult = tec_tenet_reform_and_opening
						}
						tec_has_cult = {
							cult = tec_tenet_entrepreneur_economy
						}
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_commerce
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_commerce
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_cooperative = yes
						is_pluralist = yes
						is_egalitarian = yes
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_good
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_good
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_industrialist = yes
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_industry
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_industry
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_ecologist = yes
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_ecologist
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_ecologist
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_spiritualist = yes
						tec_has_cult = { cult = tec_tenet_state_religion }
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_divinity
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_divinity
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_materialist = yes
						tec_has_cult = { cult = tec_tenet_materialistic_views }
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_studies
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_studies
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_militarist = yes
						tec_has_cult = { cult = tec_tenet_strategic_readiness_initiaitive }
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_defense
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_defense
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_pacifist = yes
						tec_has_cult = { cult = tec_tenet_deescalation_doctrine }
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_arbiter
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_arbiter
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_competitive = yes
						is_militarist = yes
						has_valid_civic = civic_warrior_culture
						has_valid_civic = civic_naval_contractors
						has_valid_civic = civic_barbaric_despoilers
						has_valid_civic = civic_private_military_companies
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_mercenary
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_mercenary
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_egalitarian = yes
						is_authoritarian = yes
						is_elitist = yes
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_reformer
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_reformer
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_xenophobe = yes
						tec_is_pompous_empire = yes
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_opposer
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_opposer
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_galcom = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_xenophile = yes
						tec_has_diplomatic_civic = yes
						has_valid_civic = civic_tec_regular_globalism
						has_valid_civic = civic_tec_corporate_globalism
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_supporter
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_supporter
		}

		# fed

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_federation = no
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					exists = federation
					federation = {
						has_federation_law = fleet_contribution_none
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					exists = federation
					federation = {
						OR = {
							has_federation_type = hegemony_federation
							has_federation_type = military_federation
						}
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_militarist = yes
						has_valid_civic = civic_tec_regular_peacekeepers
						has_valid_civic = civic_tec_corporate_militarybureau
						has_valid_civic = civic_tec_corporate_navaltraders
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_naval
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_naval
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_federation = no
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					exists = federation
					federation = {
						has_federation_law = fleet_contribution_none
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					exists = federation
					federation = {
						OR = {
							has_federation_type = hegemony_federation
							has_federation_type = military_federation
						}
					}
				}
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_militarist = yes
						has_valid_civic = civic_tec_regular_peacekeepers
						has_valid_civic = civic_tec_corporate_militarybureau
						has_valid_civic = civic_tec_corporate_navaltraders
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_naval_2
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_naval_2
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_federation = no
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					exists = federation
					federation = {
						has_federation_law = fleet_contribution_none
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					exists = federation
					federation = {
						OR = {
							has_federation_type = hegemony_federation
							has_federation_type = military_federation
						}
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_militarist = yes
						has_valid_civic = civic_tec_regular_peacekeepers
						has_valid_civic = civic_tec_corporate_militarybureau
						has_valid_civic = civic_tec_corporate_navaltraders
					}
				}
			}
			modifier = {
				mult = 0
				is_councilor = no
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_naval_3
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_naval_3
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_federation = no
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_xenophile = yes
						has_valid_civic = civic_tec_regular_globalism
						has_valid_civic = civic_tec_corporate_globalism
					}
				}
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_cohesion
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_cohesion
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_federation = no
			}
			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_exp
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_exp
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_federation = no
			}

			modifier = {
				mult = 0
				exists = owner
				owner = {
					exists = federation
					federation = {
						federation_leader = {
							NOT = { is_same_value = prevprev }
						}
					}
				}
			}
			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					exists = federation
					federation = {
						OR = {
							has_federation_type = hegemony_federation
						}
					}
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_fed_diplo
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_fed_diplo
		}

		10 = {
			modifier = {
				mult = 0
				is_assigned_to_federation = no
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					exists = federation
					federation = {
						OR = {
							has_federation_type = research_federation
						}
					}
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_diplomat_fed_research
			}
			set_leader_flag = tec_cyborg_gamification_cortex_diplomat_fed_research
		}
		# governors

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_build
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_build
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_stable
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_stable
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_crime
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_crime
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = owner
				owner = {
					allows_slavery = no
				}
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					NOT = {
						any_owned_pop = {
							is_enslaved = yes
						}
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					has_modifier = slave_colony
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_slaver = yes
						tec_has_slaver_civic = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				leader_class = commander
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_slave
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_slave
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_worker_coop
						has_valid_civic = civic_tec_corporate_comunistcorp
						has_valid_civic = civic_tec_corporate_unions
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_rural_designation = yes
						has_mining_designation = yes
						has_generator_designation = yes
						has_farming_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				OR = {
					leader_class = commander
				}
			}

			modifier = {
				mult = 1.25
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_worker
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_worker
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = owner
				owner = {
					tec_is_worker_coop_empire = yes
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_elitist = yes
						has_valid_civic = civic_tec_corporate_dystopian_society
					}
				}
			}

			modifier = {
				mult = 1.5
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_ruler
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_ruler
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:farming_combined_value
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_ecologist = yes
						is_catalytic_empire = yes
						AND = {
							tec_is_aquatic_empire = yes
							is_lithoid_empire = no
							is_machine_empire = no
						}
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_rural_designation = yes
						has_farming_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				OR = {
					leader_class = scientist
				}
			}

			modifier = {
				mult = 1.25
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_farmer
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_farmer
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:mining_combined_value
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_industrialist = yes
						AND = {
							tec_is_aquatic_empire = yes
							is_lithoid_empire = yes
							is_machine_empire = no
						}
						has_valid_civic = civic_tec_corporate_mining_guilds
						has_valid_civic = civic_mining_guilds
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_rural_designation = yes
						has_mining_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				OR = {
					leader_class = scientist
				}
			}

			modifier = {
				mult = 1.25
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_miner
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_miner
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:generator_combined_value
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						tec_is_quantum_alloys_empire = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					has_building = building_betharian_power_plant
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_rural_designation = yes
						has_generator_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				OR = {
					leader_class = scientist
				}
			}

			modifier = {
				mult = 1.25
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_technician
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_technician
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:military_combined_value
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_fortress_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						tec_has_soldier_swap = yes
						has_valid_civic = civic_citizen_service
						has_valid_civic = civic_tec_regular_martial_brotherhood
						is_sovereign_guardianship_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					leader_class = commander
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_soldier
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_soldier
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:research_combined_value
						value < 4
					}
				}
			}


			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_research_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						tec_is_special_researcher_empire = yes
						tec_replaces_half_researcher_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					leader_class = scientist
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_researcher
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_researcher
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:industrial_districts_value|ALLOY_ONLY|yes|
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_foundry_designation = yes
						has_industrial_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						tec_is_quantum_alloys_empire = yes
						is_catalytic_empire = yes
						has_valid_civic = civic_tec_regular_inventinkers
						has_valid_civic = civic_tec_corporate_inventinker_corp
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 1.25
				OR = {
					leader_class = scientist
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_industry_alloy
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_industry_alloy
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:industrial_districts_value|CG_ONLY|yes|
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_factory_designation = yes
						has_industrial_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_crafter_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 1.25
				OR = {
					leader_class = scientist
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_industry_cg
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_industry_cg
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:unity_combined_value
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_unity_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						is_spiritualist = yes
						tec_is_worker_coop_empire = yes
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_unity
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_unity
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { exists = planet }
			}

			modifier = {
				mult = 0
				exists = planet
				planet = {
					check_variable_arithmetic = {
						which = value:trade_combined_value
						value < 4
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = planet
				planet = {
					OR = {
						has_trade_designation = yes
					}
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						has_valid_civic = civic_tec_corporate_bank_corp
						has_valid_civic = civic_tec_corporate_flagshipbureau
					}
				}
			}
			modifier = {
				mult = 1.5
				OR = {
					leader_class = official
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_governor_trade
			}
			set_leader_flag = tec_cyborg_gamification_cortex_governor_trade
		}

		# scientist

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_anomaly
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_anomaly
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_anomaly_2
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_anomaly_2
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_survey
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_survey
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						has_origin = origin_remnants
						has_ascension_perk = ap_archaeoengineers
					}
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_dig
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_dig
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						has_origin = origin_remnants
						has_ascension_perk = ap_archaeoengineers
					}
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_dig_2
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_dig_2
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					NOT = { has_technology = tech_rift_sphere }
				}
			}

			modifier = {
				mult = 1.5
				exists = owner
				owner = {
					OR = {
						has_origin = origin_riftworld

						has_valid_civic = civic_corporate_dimensional_worship
						has_valid_civic = civic_dimensional_worship

						has_valid_civic = civic_tec_regular_researchers_astrologers
						has_valid_civic = civic_tec_corporate_researchers_astrologers
					}
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_astral
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_astral
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}
			modifier = {
				mult = 0
				exists = owner
				owner = {
					NOT = { has_technology = tech_cloaking_1 }
				}
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_cloaking
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_cloaking
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = scientist }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_scientist_sensors
			}
			set_leader_flag = tec_cyborg_gamification_cortex_scientist_sensors
		}

		# commander

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_army
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_army
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_army_2
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_army_2
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_width
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_width
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_evasive
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_evasive
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_accurate
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_accurate
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_tracker
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_tracker
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_sniper
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_sniper
		}

		10 = {
			modifier = {
				mult = 0
				NOT = { leader_class = commander }
			}
			modifier = {
				mult = 0
				NOT = { exists = fleet }
			}

			modifier = {
				mult = 0
				has_leader_flag = tec_cyborg_gamification_cortex_comander_fleet
			}
			set_leader_flag = tec_cyborg_gamification_cortex_comander_fleet
		}
	}

}


tec_planet_cyber_cortex_gamification_project_done = {
	inline_script = {
		script = tec_type_hint
		[[disable_flag] country_flag = $disable_flag$ ]
		int = $experience$
	}

	hidden_effect = {
		if = {
			limit = {
				exists = owner
				owner = {
					is_country_type = default
					has_authority = auth_tec_patrocorporate
					has_country_flag = cyber_collectivist
				}
				exists = leader
				leader = {
					has_trait = leader_trait_tec_cyborg_gamification_cortex
				}
			}
			[[disable_flag]
				if = {
					limit = {
						NOT = { has_planet_flag = $disable_flag$}
					}
					set_planet_flag = $disable_flag$
					leader = {
						tec_leader_cyber_cortex_gamification_xp = {
							experience = $experience$
						}
					}
				}
			]
			[[!disable_flag]
				leader = {
					tec_leader_cyber_cortex_gamification_xp = {
						experience = $experience$
					}
				}
			]
		}
	}
}