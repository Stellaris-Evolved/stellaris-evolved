# common\scripted_effects\zzzzzzz_evolved_debug_effects.txt

# Ambient objects
	tec_debug_create_ambient_object = {
		star = {
			create_ambient_object = {
				type = "tec_system_effect_test_6"
				location = this
				scale = 0.05
				use_3d_location = yes
				entity_offset_height = { min = 3 max = 3 }
			}
			last_created_ambient_object = {
				set_ambient_object_flag = tec_test_ambient_1
			}
			create_ambient_object = {	# Purple
				type = "tec_system_effect_test_1"
				location = this
				scale = 0.02
				use_3d_location = yes
				entity_offset_height = { min = 0 max = 0 }
			}
			create_ambient_object = {	# Blue brown COOL
				type = "tec_system_effect_test_2"
				location = this
				scale = 0.02
				use_3d_location = yes
				entity_offset_height = { min = 3 max = 3 }
			}
			create_ambient_object = {	# Brown
				type = "tec_system_effect_test_3"
				location = this
				scale = 0.05
				use_3d_location = yes
				entity_offset_height = { min = 3 max = 3 }
			}
			create_ambient_object = {	# Brown blue meh
				type = "tec_system_effect_test_4"
				location = this
				scale = 0.05
				use_3d_location = yes
				entity_offset_height = { min = 3 max = 3 }
			}
			create_ambient_object = {	# Pinkish
				type = "tec_system_effect_test_5"
				location = this
				scale = 0.05
				use_3d_location = yes
				entity_offset_height = { min = 3 max = 3 }
			}
			create_ambient_object = {	# Cyan lace
				type = "tec_system_effect_test_6"
				location = this
				scale = 0.05
				use_3d_location = yes
				entity_offset_height = { min = 3 max = 3 }
			}
		}
	}
# /

# Deprecated effects
	OLD_DISTRICT_GEN = {
		# OLD_generate_start_buildings_and_districts_old
		optimize_memory
		if = {
			limit = {
				owner = {
					NOR = {
						has_origin = origin_shattered_ring
						has_origin = origin_broken_shackles
					}
				}
			}
			if = {
				limit = {
					owner = {
						OR = {
							has_valid_civic = civic_machine_assimilator
							has_valid_civic = civic_machine_servitor
							has_origin = origin_syncretic_evolution
							has_origin = origin_necrophage
						}
					}
				}

				if = {
					limit = { owner = { last_created_species = { is_lithoid = yes } }}
					owner = {
						set_country_flag = lithoid_subspecies
					}
				}
				else = {
					owner = {
						set_country_flag = non_lithoid_subspecies
					}
				}
			}

			if = {
				limit = {
					owner = {
						has_origin = origin_tree_of_life
						is_lithoid_empire = yes
					}
				}
				owner = {
					set_country_flag = non_lithoid_subspecies
				}
			}

			if = {
				limit = { owner = { is_regular_empire = yes } }

				# total - 24 jobs

				# 3 jobs
				if = {
					limit = { NOT = { owner = { has_origin = origin_payback } } }
					add_district_and_planet_size_if_needed_effect = {
						district = district_city
					}
				}

				if = {
					limit = {
						owner = {
							has_origin = origin_payback
							tec_is_agrarian_idyll_empire = yes
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_city
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}

				if = {
					limit = {
						owner = { tec_is_agrarian_idyll_empire = no }
					}
					while = {
						count = 2
						add_district_and_planet_size_if_needed_effect = {
							district = district_city
						}
					}
				}
				else = {
					if = {
						limit = {
							owner = {
								is_lithoid_empire = yes
							}
						}
						while = {
							count = 2
							add_district_and_planet_size_if_needed_effect = {
								district = district_mining
							}
						}
					}
					else = {
						while = {
							count = 2
							add_district_and_planet_size_if_needed_effect = {
								district = district_farming
							}
						}
					}
				}

				if = {
					limit = { owner = { is_megacorp = yes } }
					add_district_and_planet_size_if_needed_effect = {
						district = district_city
					}
				}

				# 4 - 6 jobs
				if = {
					limit = {
						owner = {
							OR = {
								is_lithoid_empire = no
								has_country_flag = non_lithoid_subspecies
							}
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
					if = {
						limit = {
							NOT = { owner = { has_origin = origin_payback } }
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
					if = {
						limit = {
							owner = {
								has_origin = origin_default
								is_eager_explorer_empire = no
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
				}
				else = {
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
					if = {
						limit = {
							NOT = { owner = { has_origin = origin_payback } }
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
					if = {
						limit = {
							owner = {
								has_origin = origin_default
								is_eager_explorer_empire = no
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
				}

				# 4 jobs
				add_district_and_planet_size_if_needed_effect = {
					district = district_mining
				}
				if = {
					limit = {
						NOT = { owner = { has_origin = origin_payback } }
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}

				# 2 jobs
				add_district_and_planet_size_if_needed_effect = {
					district = district_generator
				}

				# 4 jobs
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}
				if = {
					limit = {
						NOT = { owner = { has_origin = origin_payback } }
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_industrial
					}
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							is_megacorp = no
							NOT = { has_origin = origin_payback }
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							has_origin = origin_default
							is_eager_explorer_empire = no
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}

				# 3 jobs
				add_building = building_capital

				# 2 jobs
				if = {
					limit = {
						owner = {
							tec_is_aiauth_empire = yes
						}
					}
					add_building = building_tec_aiauth_1
				}
				else = {
					if = {
						limit = { owner = { is_spiritualist = no } }
						add_building = building_bureaucratic_1
					}
					# 2 jobs - temples
						if = {
							limit = {
								owner = {
									is_spiritualist = yes
									tec_is_death_cult = no
									tec_is_machine_cult = no
								} 
							}
							add_building = building_temple
						}
						if = {
							limit = {
								owner = {
									is_spiritualist = yes
									tec_is_machine_cult = yes
								} 
							}
							add_building = building_tec_mecha_temple_1
						}
						if = {
							limit = {
								owner = {
									is_spiritualist = yes
									tec_is_death_cult = yes
								} 
							}
							add_building = building_sacrificial_temple_1
						}
					# /
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							is_low_tech_start = no
						}
					}
					if = {
						limit = {
							owner = {
								tec_is_reanimator_empire = no
							}
						}
						add_building = building_research_lab_1
					}
					else = {
						add_building = building_dread_encampment
		
						solar_system = { #Necromancers do not give engineering. So make sure there's some readily-accessible engineering
							while = {
								count = 2
								random_system_planet = {
									limit = {
										has_deposit_for = shipclass_research_station
										NOT = { has_deposit = d_engineering_6 }
									}
									clear_deposits = yes
									add_deposit = d_engineering_6
								}
							}
						}
					}
				}
				# 1 job
				if = {
					limit = {
						owner = {
							has_valid_civic = civic_permanent_employment
						}
					}
					add_building = building_posthumous_employment_center
				}
				# 2 Jobs
				if = {
					limit = {
						owner = {
							NOT = {
								has_origin = origin_payback
							}
							tec_is_terraformer_environmentalist_empire = yes
						}
					}
					add_building = building_ranger_lodge
					add_blocker = { type = d_big_nature_preserve_blocker }
				}
				# 4-5 jobs
				if = {
					limit = {
						owner = {
							tec_is_agrarian_idyll_empire = no
						}
					}
					if = {
						limit = {
							owner = {
								is_spiritualist = no
								is_pleasure_seeker = yes
							}
						}
						add_building = building_holo_theatres
						add_district_and_planet_size_if_needed_effect = {
							district = district_industrial
						}
					}
					else_if = {
						limit = {
							owner = {
								is_spiritualist = yes
								tec_is_death_cult = yes
							}
						}
						add_building = building_sacrificial_temple_1
						add_district_and_planet_size_if_needed_effect = {
							district = district_industrial
						}
					}
					else_if = {
						limit = {
							owner = {
								is_megacorp = no
								is_spiritualist = yes
							}
						}
						# 2 jobs - temples
							if = {
								limit = {
									owner = {
										is_spiritualist = yes
										tec_is_death_cult = no
										tec_is_machine_cult = no
									} 
								}
								add_building = building_temple
							}
							if = {
								limit = {
									owner = {
										is_spiritualist = yes
										tec_is_machine_cult = yes
									} 
								}
								add_building = building_tec_mecha_temple_1
							}
							if = {
								limit = {
									owner = {
										is_spiritualist = yes
										tec_is_death_cult = yes
									} 
								}
								add_building = building_sacrificial_temple_1
							}
						# /
						if = {
							limit = {
								owner = {
									is_anglers_empire = yes
									is_catalytic_empire = yes
								}
							}
							add_district_and_planet_size_if_needed_effect = {
								district = district_farming
							}
						}
						else = {
							add_district_and_planet_size_if_needed_effect = {
								district = district_industrial
							}
						}
					}
					else = {
						add_building = building_commercial_zone
					}
				}

			}

			if = {
				limit = { owner = { is_hive_empire = yes } }

				# 9 jobs
				while = {
					count = 3
					add_district_and_planet_size_if_needed_effect = {
						district = district_hive
					}
				}

				# 6-9 jobs
				if = {
					limit = { owner = { is_lithoid_empire = no } }
					while = {
						count = 2
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
					if = {
						limit = {
							owner = {
								has_origin = origin_default
								is_eager_explorer_empire = no
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
					}
				}
				else = {
					while = {
						count = 2
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
					if = {
						limit = {
							owner = {
								has_origin = origin_default
								is_eager_explorer_empire = no
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}
				}

				# 6 jobs
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}
				}

				if = {
					limit = {
						owner = { has_origin = origin_tree_of_life }
					}
					remove_district = district_mining
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}

				# EVOLVED syncretic
				if = {
					limit = {
						owner = {
							is_hive_empire = yes
							has_origin = origin_syncretic_evolution
							has_country_flag = non_lithoid_subspecies
						}
					}
					while = {
						count = 1
						add_district_and_planet_size_if_needed_effect = {
							district = district_farming
						}
						remove_district = district_hive
					}
				}

				# 6 jobs
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}

				# 3 jobs
				if = {
					limit = {
						owner = {
							has_origin = origin_default
							is_eager_explorer_empire = no
						}
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_generator
					}
				}

				# 2 jobs
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}

				# 5 jobs
				if = {
					limit = {
						owner = {
							tec_is_cyberhive = no
							tec_is_biohive = no
						}
					}
					add_building = building_hive_capital
				}

				if = {
					limit = {
						owner = {
							tec_is_cyberhive = yes
						}
					}
					add_building = building_tec_cyberhive_capital
				}

				if = {
					limit = {
						owner = {
							tec_is_biohive = yes
						}
					}
					add_building = building_tec_biohive_capital
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							OR = {
								AND = {
									has_origin = origin_necrophage
									has_valid_civic = civic_hive_devouring_swarm
								}
								NOT = { has_origin = origin_necrophage }
							}
						}
					}
					if = {
						limit = {
							owner = {
								tec_is_cyberhive = no
								tec_is_biohive = no
							}
						}
						add_building = building_hive_node
					}
					if = {
						limit = {
							owner = {
								tec_is_cyberhive = yes
							}
						}
						add_building = building_tec_cyberhive_node
					}
					if = {
						limit = {
							owner = {
								tec_is_biohive = yes
							}
						}
						add_building = building_tec_biohive_node
					}
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							is_low_tech_start = no
						}
					}
					if = {
						limit = {
							owner = {
								tec_is_biohive = yes
							}
						}
						add_building = building_tec_biohive_research_lab_1
					}
					else = {
						add_building = building_research_lab_1
					}
				}

				# 1 job
				if = {
					limit = {
						owner = {
							tec_hive_can_have_spawningpools = yes
							NOT = {
								has_origin = origin_mechanists
							}
							NAND = {
								has_origin = origin_necrophage
								has_valid_civic = civic_hive_devouring_swarm
							}
						}
					}
					if = {
						limit = {
							owner = {
								tec_is_biohive = yes
							}
						}
						add_building = building_tec_biohive_spawning_pool_1
					}
					else = {
						add_building = building_spawning_pool
					}
				}

				if = {
					limit = {
						owner = { has_origin = origin_progenitor_hive }
					}
					add_building = building_offspring_nest
				}
			}

			# Replace capital building for machine empires
			if = {
				limit = { owner = { is_machine_empire = yes } }

				# total - 27 jobs

				# 3 jobs
				while = {
					count = 2
					add_district_and_planet_size_if_needed_effect = {
						district = district_nexus
					}
				}

				# 2 jobs
				add_district_and_planet_size_if_needed_effect = {
					district = district_industrial
				}

				# 6 jobs
				add_building = building_machine_capital

				# 1 job
				if = {
					limit = {
						owner = {
							NOT = {
								has_valid_civic = civic_tec_machine_reimaginator_cluster
							}
						}
					}
					add_building = building_machine_assembly_plant
				}

				if = {
					limit = {
						owner = {
							has_valid_civic = civic_tec_machine_reimaginator_cluster
						}
						uses_district_set = standard
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
				if = {
					limit = {
						owner = {
							has_valid_civic = civic_tec_machine_reimaginator_cluster
						}
						uses_district_set = machine_world
					}
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
				# 2 job
				if = {
					limit = { owner = { NOT = { has_valid_civic = civic_machine_servitor } } }
					add_building = building_uplink_node
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							is_low_tech_start = no
						}
					}
					add_building = building_research_lab_1
				}

				if = {
					limit = { owner = { NOT = { has_origin = origin_machine } }}

					# 4 jobs
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining
					}

					# 2 jobs
					if = {
						limit = {
							owner = {
								has_origin = origin_default
								is_eager_explorer_empire = no
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_mining
						}
					}

					# 8 jobs
					while = {
						count = 4
						add_district_and_planet_size_if_needed_effect = {
							district = district_generator
						}
					}

					# 2 jobs
					if = {
						limit = {
							owner = {
								has_origin = origin_default
								is_eager_explorer_empire = no
							}
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_generator
						}
					}

					#Assimilators
					if = {
						limit = { owner = { has_civic = civic_machine_assimilator } }
						remove_district = district_generator

						if = {
							limit = { owner = { has_country_flag = lithoid_subspecies } }
							add_district_and_planet_size_if_needed_effect = {
								district = district_mining
							}
						}
						else = {
							add_district_and_planet_size_if_needed_effect = {
								district = district_farming
							}
						}
					}

					#Servitors
					if = {
						limit = { owner = { has_civic = civic_machine_servitor } }

						if = {
							limit = { owner = { has_country_flag = lithoid_subspecies } }
							add_district_and_planet_size_if_needed_effect = {
								district = district_mining
							}
						}
						else = {
							add_district_and_planet_size_if_needed_effect = {
								district = district_farming
							}
						}

						add_district_and_planet_size_if_needed_effect = {
							district = district_nexus
						}
						add_building = building_organic_sanctuary
					}
				}
				
				# Resource Consolidation
				else = {
					while = {
						count = 4
						add_district_and_planet_size_if_needed_effect = {
							district = district_generator_uncapped
						}
					}

					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}

					#Assimilators
					if = {
						limit = { owner = { has_civic = civic_machine_assimilator } }
						add_deposit = d_organic_slurry
					}

					# Blocker that removes the extra machine world replicator jobs until removed
					add_deposit = d_resource_consolidation_1
				}
			}
			# Replace a mining district with a farming district for lithoid empires with an organic secondary species that use food for alloy production
			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
						has_country_flag = non_lithoid_subspecies
						is_catalytic_empire = yes
					}
				}
				remove_district = district_mining
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
			}
			# Replace two mining districts with farming district for non-machine empires that use food for alloy production
			if = {
				limit = {
					owner = {
						NOT = { has_country_flag = non_lithoid_subspecies }
						NOT = { is_machine_empire = yes }
						is_catalytic_empire = yes
					}
				}
				while = {
					count = 2
					remove_district = district_mining
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming
					}
				}
			}
			# And machine empires swap a generator district for another farming district
			if = {
				limit = {
					owner = {
						is_machine_empire = yes
						is_catalytic_empire = yes
					}
				}
				remove_district = district_mining
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
				remove_district = district_generator
				add_district_and_planet_size_if_needed_effect = {
					district = district_farming
				}
			}
			# Replace 1 generator district with 1 farming district for anglers civic on wet worlds
			if = {
				limit = {
					owner = {
						tec_is_aquatic_empire = yes
						is_lithoid_empire = no
						is_machine_empire = no
					}
					has_climate = wet
				}
				remove_district = district_generator
				add_district = district_farming
			}
			if = {
				limit = {
					owner = {
						tec_is_aquatic_empire = yes
						is_lithoid_empire = yes
						is_machine_empire = no
					}
					has_climate = wet
				}
				remove_district = district_generator
				add_district = district_mining
			}
			# Replace farming districts with uncapped ones for anglers civic on ocean worlds
			if = {
				limit = {
					owner = { is_anglers_empire = yes }
					is_planet_class = pc_ocean
				}
				while = {
					limit = { num_districts = { type = district_farming value > 0 } }
					remove_district = district_farming
					add_district_and_planet_size_if_needed_effect = {
						district = district_farming_uncapped
					}
				}
			}
			# Replace mining districts with uncapped ones for subterranean origin
			if = {
				limit = {
					owner = { is_subterranean_empire = yes }
				}
				while = {
					limit = { num_districts = { type = district_mining value > 0 } }
					remove_district = district_mining
					add_district_and_planet_size_if_needed_effect = {
						district = district_mining_uncapped
					}
				}
			}
			# Give Idyllic Bloom a Gaiaseeder to start with if they have room
			if = {
				limit = {
					owner = {
						tec_is_idyllic_bloom_empire = yes
						NOT = { has_origin = origin_life_seeded }
					}
					free_building_slots > 0
				}
				add_building = building_gaiaseeders_1
			}
		}

		if = {	# Shattered ring
			limit = {
				owner = {
					has_origin = origin_shattered_ring
				}
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_rw_industrial
			}
			add_district_and_planet_size_if_needed_effect = {
				district = district_tec_rw_replicator
			}
			add_deposit = d_segment_rubble_3
			add_deposit = d_segment_rubble_3
			add_district_and_planet_size_if_needed_effect = {
				district = district_rw_generator
			}
			add_deposit = d_segment_rubble_2
			add_deposit = d_segment_rubble_2
			add_district_and_planet_size_if_needed_effect = {
				district = district_rw_farming
			}
			add_deposit = d_segment_rubble_1
			add_deposit = d_segment_rubble_1

			add_deposit = d_arcane_generator
			# RP DEPOSITS
			add_deposit = d_tec_rw_minor_structural_damage
			add_deposit = d_tec_rw_major_structural_damage

			add_deposit = d_decrepit_tunnels_1
			add_deposit = d_decrepit_tunnels_2
			# add_deposit = d_decrepit_tunnels_3 # Commented cause causes districts to disappear

			if = {	# lithoids
				limit = {
					owner = {
						is_lithoid_empire = yes
						NOT = {
							has_civic = civic_hive_devouring_swarm 
						}
					}
				}
				while = {
					count = 4
					add_deposit = d_hibernating_lithoids
				}
			}

			if = {
				limit = {
					owner = {
						is_lithoid_empire = yes
						has_civic = civic_hive_devouring_swarm
					}
				}
				while = {
					count = 2
					add_deposit = d_hibernating_lithoids
				}
			}

			if = {	# Lithoids get double the mining districts
				limit = {
					owner = {
						is_lithoid_empire = yes
						any_owned_species = {
							NOR = {
								is_archetype = BIOLOGICAL
							}
						}
						is_catalytic_empire = no
					}
				}
				remove_district = district_rw_farming
				remove_deposit = d_segment_rubble_1
				remove_deposit = d_segment_rubble_1

				add_district_and_planet_size_if_needed_effect = {
					district = district_tec_rw_replicator
				}
				add_deposit = d_segment_rubble_3
				add_deposit = d_segment_rubble_3
			}

			if = {
				limit = { owner = { is_regular_empire = yes } }

					if = {
						limit = {
							owner = { is_megacorp = no }
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_rw_city
						}
					}
					if = {
						limit = {
							owner = { is_megacorp = yes }
						}
						add_district_and_planet_size_if_needed_effect = {
							district = district_tec_rw_trade
						}
					}

				# 3 jobs
				add_building = building_capital

				# 2 jobs
				if = {
					limit = {
						owner = {
							tec_is_aiauth_empire = yes
						}
					}
					add_building = building_tec_aiauth_1
				}
				else = {
					if = {
						limit = { owner = { is_spiritualist = no } }
						add_building = building_bureaucratic_1
					}
					# 2 jobs - temples
						if = {
							limit = {
								owner = {
									is_spiritualist = yes
									tec_is_death_cult = no
									tec_is_machine_cult = no
								} 
							}
							add_building = building_temple
						}
						if = {
							limit = {
								owner = {
									is_spiritualist = yes
									tec_is_machine_cult = yes
								} 
							}
							add_building = building_tec_mecha_temple_1
						}
						if = {
							limit = {
								owner = {
									is_spiritualist = yes
									tec_is_death_cult = yes
								} 
							}
							add_building = building_sacrificial_temple_1
						}
					# /
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							NOT = { has_valid_civic = civic_reanimated_armies }
						}
					}
					add_building = building_research_lab_1
				}
				else = {
					add_building = building_dread_encampment

					solar_system = { #Necromancers do not give engineering. So make sure there's some readily-accessible engineering
						random_system_planet = {
							limit = {
								has_deposit_for = shipclass_research_station
								has_deposit = d_engineering_5
							}
							# Total size 15 deposit as the Irreparable Damage is normally a size 5 and non-Shattered Ring starts get an additional two size 6 deposits.
							add_deposit = d_engineering_10
						}
					}
				}

				if = {
					limit = {
						owner = {
							has_valid_civic = civic_permanent_employment
						}
					}
					add_building = building_posthumous_employment_center
				}

				# 5 jobs
				if = {
					limit = { owner = { is_megacorp = yes } }
					add_building = building_commercial_zone
				}
			}

			if = {
				limit = { owner = { is_hive_empire = yes } }

				add_district_and_planet_size_if_needed_effect = {
					district = district_rw_hive
				}

				# 5 jobs
				if = {
					limit = {
						owner = {
							tec_is_cyberhive = no
							tec_is_biohive = no
						}
					}
					add_building = building_hive_capital
				}

				if = {
					limit = {
						owner = {
							tec_is_cyberhive = yes
						}
					}
					add_building = building_tec_cyberhive_capital
				}

				if = {
					limit = {
						owner = {
							tec_is_biohive = yes
						}
					}
					add_building = building_tec_biohive_capital
				}

				# 2 jobs
				add_building = building_hive_node

				# 2 jobs
				if = {
					limit = {
						owner = {
							is_low_tech_start = no
						}
					}
					add_building = building_research_lab_1
				}

				# 1 job
				if = {
					limit = {
						owner = {
							tec_hive_can_have_spawningpools = yes
							NOT = {
								has_origin = origin_mechanists
							}
							NAND = {
								has_origin = origin_necrophage
								has_valid_civic = civic_hive_devouring_swarm
							}
						}
					}
					if = {
						limit = {
							owner = {
								tec_is_biohive = yes
							}
						}
						add_building = building_tec_biohive_spawning_pool_1
					}
					else = {
						add_building = building_spawning_pool
					}
				}

				if = {
					limit = {
						owner = { has_origin = origin_progenitor_hive }
					}
					add_building = building_offspring_nest
				}

				# 1 job
				add_building = building_hive_warren
			}

			# Replace capital building for machine empires
			if = {
				limit = {
					owner = {
						is_machine_empire = yes
					}
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_rw_nexus
				}

				# 6 jobs
				add_building = building_machine_capital

				# 2 job
				if = {
					limit = {
						owner = {
							NOT = {
								has_civic = civic_machine_servitor 
							}
						}
					}
					add_building = building_uplink_node
				}

				# 2 jobs
				if = {
					limit = {
						owner = {
							is_low_tech_start = no
						}
					}
					add_building = building_research_lab_1
				}

				#Servitors
				if = {
					limit = {
						owner = {
							has_civic = civic_machine_servitor 
						}
					}
					add_building = building_organic_sanctuary
				}

				if = {
					limit = {
						owner = {
							NOT = {
								has_valid_civic = civic_tec_machine_reimaginator_cluster
							}
						}
					}
					add_building = building_machine_assembly_plant
				}

				if = {
					limit = {
						owner = {
							OR = {
								NOR = {
									has_valid_civic = civic_machine_servitor
									has_valid_civic = civic_machine_assimilator
									has_valid_civic = civic_tec_machine_promethean
								}
								any_owned_species = {
									has_trait = trait_lithoid
								}
							}
						}
					}
					if = {
						limit = {
							owner = {
								is_catalytic_empire = no
							}
						}
						remove_district = district_rw_farming
						remove_deposit = d_segment_rubble_1
						remove_deposit = d_segment_rubble_1

						add_district_and_planet_size_if_needed_effect = {
							district = district_rw_generator
						}
						add_deposit = d_segment_rubble_2
						add_deposit = d_segment_rubble_2
					}
					
				}
			}
		}

		if = {	# Broken Shackles
			limit = {
				owner = {
					has_origin = origin_broken_shackles
				}
			}
			while = {
				count = 6
				add_district_and_planet_size_if_needed_effect = {
					district = district_crashed_slaver_ship
				}
			}
			add_building = building_low_tech_farm
			add_building = building_low_tech_scrap_refinery
			add_building = building_low_tech_admin_hub
			add_building = building_low_tech_power_plant
			add_building = building_low_tech_capital
			add_building = building_low_tech_research_lab
		}

		if = {	# Payback
			limit = {
				owner = {
					has_origin = origin_payback
				}
			}
			# We want a clean slate building-wise, but to keep the districts.
			remove_all_buildings = yes
			add_planet_devastation = 33
			add_modifier = {
				modifier = payback_debris_field
			}
			add_modifier = {
				modifier = payback_unified_purpose
				days = 7200
			}
			while = {
				count = 6
				add_deposit = d_ship_debris_payback_blocker
			}
			# 3 jobs
			add_building = building_capital
			add_building = building_clinic
			add_building = building_research_lab_1
			add_building = building_mineral_purification_plant
			add_building = building_energy_grid
		}

		if = {	# Relentless
			limit = {
				owner = {
					is_relentless_industrialist_empire = yes
				}
				free_building_slots > 0
			}
			add_building = building_coordinated_fulfillment_center_1
		}

		if = {	# Archaeotech review balance
			limit = {
				owner = {
					has_origin = origin_remnants
					has_ancrel = yes
				}
			}
			owner = {
				give_technology = {
					tech = tech_archaeostudies
					message = no
				}
			}
			remove_building = building_research_lab_1
			add_building = building_archaeostudies_faculty
		}

		# Additional resources based on empire type and possible subspecies
		owner = {
			if = {
				limit = {
					is_machine_empire = yes
				}
				if = {
					limit = {
						OR = {
							has_valid_civic = civic_machine_servitor
							has_valid_civic = civic_machine_assimilator
						}
					}
					if = {
						limit = { has_country_flag = lithoid_subspecies }
						add_resource = { minerals = 100	}
						add_resource = { energy = 100 }
					}
					else = {
						add_resource = { food = 100	}
						add_resource = { energy = 100 }
					}
				}
				else = {
					add_resource = { energy = 200 }
				}
			}
			else = {
				if = {
					limit = { is_lithoid_empire = no }
					if = {
						limit = { has_country_flag = lithoid_subspecies }
						add_resource = { food = 100	}
						add_resource = { minerals = 100 }
					}
					else = {
						add_resource = { food = 200 }
					}
				}
				else = {
					if = {
						limit = { has_country_flag = non_lithoid_subspecies }
						add_resource = { food = 100	}
						add_resource = { minerals = 100 }
					}
					else = {
						add_resource = { minerals = 200 }
					}
				}
			}
		}
	}
	OLD_START_POPS_GEN = {
		# OLD generate_start_pops_old
		if = {
			limit = {
				owner = {
					OR = {
						# vanilla
						has_origin = origin_syncretic_evolution
						has_origin = origin_necrophage
						has_valid_civic = civic_machine_servitor
						has_valid_civic = civic_machine_assimilator
	
						# modded
						has_origin = origin_tec_slavetothesystem
					}
				}
			}
	
			if = {
				limit = {
					last_created_species = {
						is_species_class = MACHINE 
					}
				}
				modify_species = {
					species = last_created_species
					add_trait = trait_machine_unit
					add_traits_at_start_of_list = yes
				}
				last_created_species = {
					save_event_target_as = last_created_species 
				}
			}
	
			if = {
				limit = {
					owner = {
						OR = {
							has_origin = origin_syncretic_evolution
							has_origin = origin_necrophage
						}
					}
				}
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					if = {
						limit = {
							prev.owner = {
								has_origin = origin_syncretic_evolution
							}
						}
						set_citizenship_type = {
							country = root.owner
							type = citizenship_slavery
						}
					}
				}
				last_created_species = {
					set_species_flag = syncretic_species@root.owner
					save_event_target_as = syncretic_species
					if = {
						limit = {
							prev.owner = {
								has_origin = origin_syncretic_evolution
							}
						}
						# if = {
						# 	limit = {
						# 		prev.owner = {
						# 			is_hive_empire = yes
						# 			NOT = {
						# 				has_ethic = ethic_gestalt_empathy
						# 			}
						# 		}
						# 	}
						# 	modify_species = {
						# 		species = event_target:syncretic_species
						# 		add_trait = trait_hive_mind
						# 		add_traits_at_start_of_list = yes
						# 		change_scoped_species = no
						# 		effect = {
						# 			set_species_flag = syncretic_species@root.owner
						# 			save_event_target_as = syncretic_species
						# 			set_citizenship_type = {
						# 				country = root.owner
						# 				type = citizenship_full
						# 			}
						# 			set_living_standard = {
						# 				country = root.owner
						# 				type = living_standard_hive_mind
						# 			}
						# 		}
						# 	}
						# }
						if = {
							limit = {
								prev.owner = {
									has_valid_civic = civic_tec_origin_elders
								}
							}
							modify_species = {
								species = event_target:syncretic_species
								remove_trait = trait_syncretic_proles
								has_trait = trait_tec_se_subspecies
								effect = {
									set_species_flag = syncretic_species@root.owner
									save_event_target_as = syncretic_species
								}
							}
						}
						else = {
							set_citizenship_type = {
								country = root.owner
								type = citizenship_slavery
							}
						}
					}
				}
				
				if = {
					limit = {
						owner = {
							has_origin = origin_necrophage
							OR = {
								has_valid_civic = civic_fanatic_purifiers
								has_valid_civic = civic_hive_devouring_swarm
								is_gestalt = yes
							}
						}
					}
					while = {
						count = 6
						create_pop = {
							species = last_created_species
							ethos = random
						}
					}
				}
				else_if = {
					limit = {
						owner = {
							has_origin = origin_necrophage
							is_gestalt = yes
						}
					}
					while = {
						count = 9
						create_pop = {
							species = last_created_species
							ethos = random
						}
					}
				}
				else = {
					while = {
						count = 12
						create_pop = {
							species = last_created_species
							ethos = random
						}
					}
				}
			}
	
			if = {
				limit = {
					owner = {
						has_valid_civic = civic_machine_servitor 
					}
				}
				last_created_species = {
					set_species_flag = tec_original_biotrophy_@root.owner
					set_citizenship_type = {
						country = root.owner
						type = citizenship_organic_trophy
					}
					set_living_standard = {
						country = root.owner
						type = living_standard_organic_trophy
					}
				}
				while = {
					count = 5
					create_pop = {
						species = last_created_species
						ethos = random
					}
					last_created_pop = {
						clear_ethos = yes
					}
				}
			}
	
			if = {
				limit = {
					owner = {
						has_valid_civic = civic_machine_assimilator 
					}
				}
				last_created_species = {
					set_species_flag = cyborg_assimilated@root.owner
					set_citizenship_type = {
						country = root.owner
						type = citizenship_full_machine
					}
					set_living_standard = {
						country = root.owner
						type = living_standard_hive_mind
					}
				}
				while = {
					count = 10
					create_pop = {
						species = last_created_species
						ethos = random
					}
					last_created_pop = {
						clear_ethos = yes
					}
				}
			}
	
				#if = {
					#	limit = {
					#		owner = {
					#			has_origin = origin_tec_slavetothesystem
					#		}
					#	}
					#	last_created_species = {
					#		set_species_flag = cyborg_slaves@root.owner
					#		set_citizenship_type = {
					#			country = root.owner
					#			type = citizenship_slavery
					#		}
					#		set_living_standard = {
					#			country = root.owner
					#			type = living_standard_normal
					#		}
					#	}
					#	while = {
					#		count = 22
					#		create_pop = {
					#			species = last_created_species
					#			ethos = random
					#		}
					#	}
					#	while = {
					#		while = {
					#			limit = {
					#				num_pops > 8
					#				has_trait = trait_mechanical
					#			}
					#			random_owned_pop = {
					#				limit = {
					#					NOR = {
					#						is_pop_category = ruler
					#						is_pop_category = specialist
					#					}
					#				}
					#				kill_pop = yes
					#			}
					#		}
					#	}
				#}
		}
	
		if = {
			limit = {
				owner = {
					has_origin = origin_mechanists
				}
			}
			owner = {
				create_built_robot_species = yes
				set_country_flag = done_first_robot
			}
			while = {
				count = 10
				create_pop = {
					species = last_created_species
				}
			}
			every_owned_pop = {
				limit = {
					OR = {
						has_job = miner
						has_job = tec_reef_miner
						has_job = mining_drone
						has_job = tec_reef_drone
					}
					is_robotic_species = yes
				}
				modify_species = {
					species = this
					add_trait = trait_robot_power_drills
					add_trait = trait_robot_bulky
					add_traits_at_start_of_list = yes
				}
			}
			every_owned_pop = {
				limit = {
					OR = {
						has_job = farmer
						has_job = angler
						has_job = agri_drone
						has_job = tec_aqua_drone
					}
					is_robotic_species = yes
				}
				modify_species = {
					species = this
					add_trait = trait_robot_harvesters
					add_trait = trait_robot_bulky
					add_traits_at_start_of_list = yes
				}
			}
			every_owned_pop = {
				limit = {
					OR = {
						has_job = technician
						has_job = technician_drone
						has_job = tec_thermogenerator_drone
					}
					is_robotic_species = yes
				}
				modify_species = {
					species = this
					add_trait = trait_robot_superconductive
					add_trait = trait_robot_bulky
					add_traits_at_start_of_list = yes
				}
			}
			every_owned_pop = {
				limit = {
					is_robotic_species = yes
					NOT = { has_trait = trait_robot_bulky }
				}
				modify_species = {
					species = this
					add_trait = trait_robot_bulky
					add_traits_at_start_of_list = yes
				}
			}
			every_owned_pop = {
				limit = {
					is_robotic_species = yes
				}
				set_citizenship_type = { 
					country = root.owner
					type = citizenship_robot_servitude
				}
				set_living_standard = {
					country = root.owner
					type = living_standard_servitude
				}
			}
			if = {
				limit = {
					exists = owner
					owner = {
						is_gestalt = no
					}
				}
				if = {
					limit = {
						owner = {
							has_valid_civic = civic_tec_regular_machine_cult 
						}
					}
					add_building = building_mecha_monastery_1
				}
		
				if = {
					limit = {
						owner = {
							NOT = {
								has_valid_civic = civic_tec_regular_machine_cult
							}
						}
					}
					add_building = building_robot_assembly_plant
				}
			}
			else = {
				add_building = building_hive_robot_assembly_plant
			}
	
			add_district_and_planet_size_if_needed_effect = {
				district = district_generator
			}
	
			while = {
				limit = { num_pops < 30 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
	
		if = {
			limit = {
				owner = {
					has_origin = origin_necrophage
					NOR = {
						has_civic = civic_fanatic_purifiers 
						has_civic = civic_hive_devouring_swarm
					} #purges them instead
				}
			}
			if = {
				limit = {
					owner = {
						tec_is_agrarian_idyll_empire = yes
					} # Needs an extra building slot
				}
				add_district_and_planet_size_if_needed_effect = {
					district = district_city
				}
			}
			add_building = building_necrophage_elevation_chamber
		}
	
		if = {
			limit = {
				owner = {
					has_origin = origin_necrophage
					has_valid_civic = civic_hive_devouring_swarm #purges them instead
					is_lithoid_empire = no
				}
			}
			if = {
				limit = {
					owner = {
						tec_is_biohive = yes
					}
				}
				add_building = building_tec_biohive_spawning_pool_1
			}
			else = {
				add_building = building_spawning_pool
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_necrophage
					has_valid_civic = civic_hive_devouring_swarm
					is_lithoid_empire = yes
				}
			}
			add_district_and_planet_size_if_needed_effect = { district = district_mining }
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_clone_army
				}
			}
			while = {
				count = 2
				add_building = building_clone_army_clone_vat
			}
			planet_event = {
				id = clones.10
				days = 1095
				random = 730
			}
		}
	
		if = {
			limit = {
				owner = {
					is_hive_empire = yes
				}
			}
			while = {
				limit = { num_pops < 33 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
	
		if = {
			limit = {
				owner = {
					has_valid_civic = civic_machine_servitor 
				}
			}
			while = {
				limit = { num_pops < 33 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
	
		if = {
			limit = {
				owner = {
					is_machine_empire = yes
				}
			}
			while = {
				limit = { num_pops < 29 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
	
		if = {
			limit = {
				owner = {
					is_megacorp = yes
					has_reduced_pop_origin = no
				}
			}
			while = {
				limit = { num_pops < 28 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
	
		if = {
			limit = {
				owner = { has_origin = origin_broken_shackles }
				num_pops < 6
			}
	
			while = {
				limit = { num_pops < 6 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
	
		if = {
			limit = {
				owner = {
					owner = {
						is_regular_empire = yes
						has_reduced_pop_origin = no
					}
				}
			}
			while = {
				limit = {
					num_pops < 28 
				}
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = { has_origin = origin_payback }
				num_pops < 18
			}
			while = {
				limit = { num_pops < 18 }
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = { has_origin = origin_fear_of_the_dark }
			}
			while = {
				count = 20
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_necrophage
					is_homicidal = yes
				}
			}
			while = { #to make them start without resource deficits
				count = 2
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_origin = origin_default 
				}
			}
			while = {
				count = 4
				create_pop = {
					species = owner_main_species
					ethos = random
				}
			}
		}
		if = {
			limit = {
				owner = {
					is_eager_explorer_empire = yes
				}
			}
			while = {
				count = 10
				random_owned_pop = {
					limit = {
						is_same_species = root.owner.species
					}
					kill_pop = yes
				}
			}
		}
		if = {
			limit = {
				owner = {
					tec_is_zombie_empire = yes
				}
			}
			while = {
				count = 4
				random_owned_pop = {
					limit = {
						OR = {
							has_job = clerk
							has_job = technician
							has_job = miner
							has_job = farmer
						}
						is_robotic_species = no
					}
					modify_species = {
						species = this
						add_trait = trait_zombie
						add_traits_at_start_of_list = yes
					}
					if = {
						limit = {
							has_trait = trait_syncretic_proles
						}
						modify_species = {
							species = this
							remove_trait = trait_syncretic_proles
						}
					}
				}
			}
		}
	}
# /