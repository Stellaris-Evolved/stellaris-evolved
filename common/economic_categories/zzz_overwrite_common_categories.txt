buffer = {
	hidden = yes
	use_for_ai_budget = yes
}

country = {
	hidden = yes
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		produces
	}

	generate_add_modifiers = {
		produces
	}
	#modifier category: economic_unit is fine
	
	triggered_produces_modifier = {
		key = country_tec_at_war
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#exists = owner
			#owner = {
				#OR = {
					is_at_war = yes
					# Ideally we should add a "exist crisis" here
				#}
			#}
		}
	}
	triggered_upkeep_modifier = {
		key = country_tec_at_war
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#exists = owner
			#owner = {
				#OR = {
				is_at_war = yes
				# Ideally we should add a "exist crisis" here
				#}
			#}
		}
	}
	
	triggered_produces_modifier = {
		key = country_tec_at_peace
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#exists = owner
			#owner = {
				#OR = {
				is_at_war = no
				# Ideally we should add a "not exist crisis" here
				#}
			#}
		}
	}
	triggered_upkeep_modifier = {
		key = country_tec_at_peace
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			#exists = owner
			#owner = {
				#OR = {
				is_at_war = no
				# Ideally we should add a "not exist crisis" here
				#}
			#}
		}
	}
}

# Base income of country
country_base = {
	parent = country
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}

trade = {
	parent = country
	use_for_ai_budget = yes
}

trade_routes = {
	parent = trade
}

situations = {
	parent = country
}

resolutions = {
	parent = country
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		cost
	}
}

edicts = {
	use_for_ai_budget = yes
	parent = country
	ai_use_parent_for_resources_upkeep = {
		energy
		food
		minerals
	}
	generate_mult_modifiers = {
		cost
		upkeep
	}
	modifier_category = country
	add_unscaled_value_to_tooltip = yes
	scaled_value_key = "ECONOMICS_SCALED_RESOURCES_EMPIRE_SIZE_STRING"
}

edicts_unscaled = {
	use_for_ai_budget = yes
	parent = edicts
	add_unscaled_value_to_tooltip = no
}

rare_edicts = {
	use_for_ai_budget = yes
	parent = edicts
	generate_mult_modifiers = {
		cost
		upkeep
	}
}

ship_edicts = {
	parent = rare_edicts
	use_for_ai_budget = no
}

campaigns = {
	use_for_ai_budget = no
	parent = edicts
	generate_mult_modifiers = {
		cost
	}
}

decisions = {
	use_for_ai_budget = yes
	parent = country
	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}


decisions_arcologies = {
	parent = decisions

	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}

decisions_ecoworld = {
	parent = decisions_arcologies
	use_for_ai_budget = no
	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}

decisions_ecu = {
	parent = decisions_arcologies
	use_for_ai_budget = no
	
	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}
}

megastructures = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	parent = country
	modifier_category = megastructure
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}

	# giga support
	inline_script = {
		script = mod_support/tec_giga_present
		code = "
			# KILOSTRUCTURES
	triggered_cost_modifier 	= { key = kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_kilostructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier	= { key = kilostructures_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_kilostructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# THIRD PARTY KILOS
	triggered_cost_modifier 	= { key = third_party_kilos modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = third_party_kilos modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_kilos modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_kilos_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_third_party_kilostructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# MEGASTRUCTURES
	triggered_cost_modifier 	= { key = megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure nor = { is_kilostructure = yes is_gigastructure = yes is_technical_mega = yes } } }
	triggered_produces_modifier = { key = megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure nor = { is_kilostructure = yes is_gigastructure = yes	is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure nor = { is_kilostructure = yes is_gigastructure = yes	is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = megastructures_only_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure nor = { giga_amb_supertensiles_exception = yes is_kilostructure = yes is_gigastructure = yes	is_technical_mega = yes is_ruined_mega = yes } } }

	# GIGASTRUCTURES
	triggered_cost_modifier 	= { key = gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_gigastructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = gigastructures_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_gigastructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# THIRD PARTY GIGAS
	triggered_cost_modifier 	= { key = third_party_gigas modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes not = { is_technical_mega = yes } } }
	triggered_produces_modifier = { key = third_party_gigas modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_gigas modifier_types = { add mult } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes nor = { is_technical_mega = yes is_ruined_mega = yes } } }
	triggered_upkeep_modifier 	= { key = third_party_gigas_supertensiles modifier_types = { add } trigger = { is_scope_type = megastructure is_third_party_gigastructure = yes nor = { giga_amb_supertensiles_exception = yes is_technical_mega = yes is_ruined_mega = yes } } }

	# REPAIRING WRECKS
	triggered_cost_modifier 	= { key = megastructure_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes } }
	triggered_cost_modifier 	= { key = kilostructure_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_kilostructure = yes } }
	triggered_cost_modifier 	= { key = megastructure_only_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_cost_modifier 	= { key = gigastructure_repair modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_gigastructure = yes } }

	# WRECKS
	triggered_produces_modifier = { key = wrecked_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes } }
	triggered_upkeep_modifier 	= { key = wrecked_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes } }
	triggered_produces_modifier = { key = wrecked_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_kilostructure = yes } }
	triggered_upkeep_modifier 	= { key = wrecked_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_kilostructure = yes } }
	triggered_produces_modifier = { key = wrecked_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_upkeep_modifier 	= { key = wrecked_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_produces_modifier = { key = wrecked_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_gigastructure = yes } }
	triggered_upkeep_modifier 	= { key = wrecked_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_ruined_mega = yes is_gigastructure = yes } }

	# RESTORED MEGAS
	triggered_produces_modifier = { key = restored_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes } }
	triggered_upkeep_modifier 	= { key = restored_megastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes } }
	triggered_produces_modifier = { key = restored_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_kilostructure = yes } }
	triggered_upkeep_modifier 	= { key = restored_kilostructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_kilostructure = yes } }
	triggered_produces_modifier = { key = restored_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_upkeep_modifier 	= { key = restored_megastructures_only modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes nor = { is_kilostructure = yes is_gigastructure = yes } } }
	triggered_produces_modifier = { key = restored_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_gigastructure = yes } }
	triggered_upkeep_modifier 	= { key = restored_gigastructures modifier_types = { add mult } trigger = { is_scope_type = megastructure is_restored_mega = yes is_gigastructure = yes } }

		"
	}
}

megastructures_habitat = {
	use_for_ai_budget = yes

	# compat for giga
	inline_script = {
		script = mod_support/tec_giga_not_present
		code = "
			parent = megastructures
		"
	}
	inline_script = {
		script = mod_support/tec_giga_present
		code = "
			parent = giga_kilostructures
		"
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = megastructure
}

megastructures_gateways = {
	use_for_ai_budget = yes
	parent = megastructures
	generate_mult_modifiers = {
		cost
	}
	modifier_category = megastructure
}

# Evolved


megastructures_protoworlds = {
	parent = megastructures
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}
# /

megastructures_hyper_relay = {
	# compat for giga
	inline_script = {
		script = mod_support/tec_giga_not_present
		code = "
			parent = megastructures
		"
	}
	inline_script = {
		script = mod_support/tec_giga_present
		code = "
			parent = giga_kilostructures
		"
	}

	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	modifier_category = megastructure
}

ships = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		upkeep
		cost
	}
	generate_add_modifiers = {
		upkeep
		cost
	}

	ai_use_parent_for_resources_upkeep = {
		energy
		# this is for bioships
		#food
		#minerals
	}

	parent = country
	modifier_category = ship

	triggered_cost_modifier = {
		key = starbase_shipyard_build
		use_parent_icon = yes

		modifier_types = {
			mult
			add
		}
	}

	triggered_cost_modifier = {
		key = gdf_ship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			has_ship_owner_type = galactic_community
		}
	}

	triggered_cost_modifier = {
		key = ship_nanite_swarmer
		use_parent_icon = yes
		modifier_types = {
			mult
		}

		trigger = {
			is_scope_valid = yes
			is_ship_size = nanite_swarmer
		}
	}

	triggered_cost_modifier = {
		key = ship_corvette
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = corvette
				is_ship_size = offspring_corvette
				is_ship_size = frigate
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_destroyer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = destroyer
				is_ship_size = offspring_destroyer
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_cruiser
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = cruiser
				is_ship_size = offspring_cruiser
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_battleship
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_size = battleship
				is_ship_size = offspring_battleship
			}
		}
	}

	triggered_cost_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			is_ship_size = military_station_small
		}
	}

	triggered_upkeep_modifier = {
		key = ship_military_station_small
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			is_ship_size = military_station_small
		}
	}

	triggered_cost_modifier = {
		key = ship_military
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_class = shipclass_military
				is_ship_class = shipclass_military_special
			}
		}
	}

	triggered_upkeep_modifier = {
		key = ship_military
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes
			OR = {
				is_ship_class = shipclass_military
				is_ship_class = shipclass_military_special
			}
		}
	}
}

colonies = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	modifier_category = ship

	triggered_cost_modifier = {
		key = ship_colonizer
		use_parent_icon = yes
		modifier_types = {
			mult
			add
		}

		trigger = {
			is_scope_valid = yes #When called from ship designer the design is not valid yet.
			is_ship_class = shipclass_colonizer
		}
	}

	parent = ships
}

ship_components = {
	parent = ships
	generate_mult_modifiers = {
		cost
	}
}

ship_sections = {
	parent = ships
}

ship_upgrades = {
	parent = ships
	use_for_ai_budget = yes
}

stations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	parent = country
}

station_gatherers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_researchers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = deposit #it applies to the planet
}

station_observers = {
	parent = stations

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
}

station_observer_missions = {
	parent = station_observers
}

starbases = {
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		upkeep
		cost
	}
	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
	modifier_category = starbase
}

starbase_stations = {
	parent = starbases
	modifier_category = starbase

	triggered_cost_modifier = {
		key = starbase_outpost
		modifier_types = {
			mult
			add
		}
		trigger = {
			is_scope_valid = yes
			# ^ When called from ship designer the design is not valid yet.
			OR = {
				is_ship_size = starbase_outpost
				is_ship_size = orbital_ring_tier_1
			}
		}
	}

	# Why i left this here? i dont know, it is just there, commented out, watching you from afar
		#triggered_cost_modifier = {
		#	key = starbase_starport
		#	modifier_types = {
		#		mult
		#		add
		#	}
		#	trigger = {
		#		is_scope_valid = yes #When called from ship designer the design is not valid yet.
		#		OR = {
		#			is_ship_size = starbase_starport
		#			is_ship_size = orbital_ring_tier_2
		#		}
		#	}
		#}

		#triggered_cost_modifier = {
		#	key = starbase_starhold
		#	modifier_types = {
		#		mult
		#		add
		#	}
		#	trigger = {
		#		is_scope_valid = yes #When called from ship designer the design is not valid yet.
		#		OR = {
		#			is_ship_size = starbase_starhold
		#			is_ship_size = orbital_ring_tier_3
		#		}
		#	}
		#}

		#triggered_cost_modifier = {
		#	key = starbase_starfortress
		#	modifier_types = {
		#		mult
		#		add
		#	}
		#	trigger = {
		#		is_scope_valid = yes #When called from ship designer the design is not valid yet.
		#		is_ship_size = starbase_starfortress
		#	}
		#}

		#triggered_cost_modifier = {
		#	key = starbase_citadel
		#	modifier_types = {
		#		mult
		#		add
		#	}
		#	trigger = {
		#		is_scope_valid = yes #When called from ship designer the design is not valid yet.
		#		is_ship_size = starbase_citadel
		#	}
		#}
	# /
}

starbase_constructions = {
	parent = starbases

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}

	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = starbase
}

starbase_buildings = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = starbase
}

starbase_modules = {
	parent = starbase_constructions

	generate_mult_modifiers = {
		produces
		cost
		upkeep
	}
	
	generate_add_modifiers = {
		produces
		cost
		upkeep
	}
	modifier_category = starbase
}

# Production and research modules 
	starbase_production_modules = {
		parent = starbase_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_food_production_modules = {
		parent = starbase_production_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_minerals_production_modules = {
		parent = starbase_production_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_energy_production_modules = {
		parent = starbase_production_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_research_modules = {
		parent = starbase_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_physics_research_modules = {
		parent = starbase_research_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_society_research_modules = {
		parent = starbase_research_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}

	starbase_engineering_research_modules = {
		parent = starbase_research_modules

		generate_mult_modifiers = {
			produces
			cost
			upkeep
		}
		
		generate_add_modifiers = {
			produces
			cost
			upkeep
		}
		modifier_category = starbase
	}
# /

terraforming = {
	parent = country
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}

	modifier_category = planet
}

terraforming_ocean = {
	parent = terraforming

	generate_mult_modifiers = {
		cost
	}

	generate_add_modifiers = {
		cost
	}

	modifier_category = planet
}

planets = {
	parent = country
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
		consumer_goods
	}
	generate_mult_modifiers = {
		produces
	}
	generate_add_modifiers = {
		produces
	}
	hidden = yes
}

planet_structures = {
	parent = planets
	hidden = yes
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

#Evolved
	planet_buildings_strongholds = {
		parent = planet_buildings

		generate_mult_modifiers = {
			cost
			upkeep
			produces
		}
		generate_add_modifiers = {
			cost
			upkeep
			produces
		}
	}

	planet_buildings_bastions = {
		parent = planet_buildings_strongholds

		generate_mult_modifiers = {
			cost
			upkeep
			produces
		}
		generate_add_modifiers = {
			cost
			upkeep
			produces
		}
	}
# /

planet_branch_offices = {
	parent = planets

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings_hab_capital = {
	parent = planet_buildings

	generate_mult_modifiers = {
		upkeep
		produces
	}
	generate_add_modifiers = {
		upkeep
		produces
	}
	modifier_category = planet
}

planet_buildings_clone_vats = {
	parent = planet_buildings

	generate_mult_modifiers = {
		upkeep
		produces
	}
	generate_add_modifiers = {
		upkeep
		produces
	}
	modifier_category = planet
}


planet_branch_office_buildings = {
	parent = planets
}

planet_holdings = {
	parent = planets
}

planet_districts = {
	parent = planet_structures

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}


planet_districts_farming = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}

	modifier_category = planet
}

planet_districts_mining = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	modifier_category = planet
}

planet_districts_generator = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	
	modifier_category = planet
}

planet_districts_cities = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_industrial = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
}

planet_districts_hab_energy = {
	parent = planet_districts_hab

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_food = {
	parent = planet_districts_hab

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_research = {
	parent = planet_districts_hab

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_mining = {
	parent = planet_districts_hab

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_trade = {
	parent = planet_districts_hab

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_hab_leisure = {
	parent = planet_districts_hab

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_orders_demesne = {
	parent = planet_districts_hab
	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}

planet_districts_rw_generator = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}
planet_districts_rw_farming = {
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}
planet_districts_rw_replicator = {	#Evolved
	parent = planet_districts

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = planet
}


planet_jobs = {
	parent = planets

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = pop

	# Job/Pop Category Types
		triggered_produces_modifier = {
			key = planet_jobs_slave
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_slave = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_slave
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_slave = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_worker
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_worker = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_cyborg_worker
			modifier_types = {
				mult
			}
			trigger = {
				tec_is_cyborg_species = yes
				tec_ecocat_planet_jobs_worker = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_cyborg_worker
			modifier_types = {
				mult
			}
			trigger = {
				tec_is_cyborg_species = yes
				tec_ecocat_planet_jobs_worker = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_psionic_worker
			modifier_types = {
				mult
			}
			trigger = {
				tec_is_psionic_species = yes
				tec_ecocat_planet_jobs_worker = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_psionic_worker
			modifier_types = {
				mult
			}
			trigger = {
				tec_is_psionic_species = yes
				tec_ecocat_planet_jobs_worker = { CACHED = yes }
			}
		}
	
		triggered_produces_modifier = {
			key = planet_jobs_robot_worker
			modifier_types = {
				mult
			}
			trigger = {
				OR = {
					is_robot_pop = yes
					# Evolved
					species = {
						tec_is_replicant_species = yes
					}
				}
				tec_ecocat_planet_jobs_worker = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_worker
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_worker = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_worker_only
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_worker_only = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_worker_only
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_worker_only = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_specialist
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_specialist = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_specialist
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_specialist = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_specialist_only
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_specialist_only = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_specialist_only
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_specialist_only = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_ruler
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_has_ruler_job_category = yes
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_ruler
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_has_ruler_job_category = yes
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_simple_drone
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_simple_drone = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_simple_drone
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_simple_drone = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_complex_drone
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_complex_drone = { CACHED = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_complex_drone
			modifier_types = {
				add
				mult
			}
			trigger = {
				tec_ecocat_planet_jobs_complex_drone = { CACHED = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_complex_and_simple_drone
			modifier_types = {
				add
				mult
			}
			trigger = {
				OR = {
					tec_ecocat_planet_jobs_simple_drone = { CACHED = yes }
					tec_ecocat_planet_jobs_complex_drone = { CACHED = yes }
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_complex_and_simple_drone
			modifier_types = {
				add
				mult
			}
			trigger = {
				OR = {
					tec_ecocat_planet_jobs_simple_drone = { CACHED = yes }
					tec_ecocat_planet_jobs_complex_drone = { CACHED = yes }
				}
			}
		}

		# Evolved
			triggered_produces_modifier = {
				key = planet_jobs_tec_prime_drone
				modifier_types = {
					add
					mult
				}
				trigger = {
					has_job_category = tec_prime_drone
				}
			}

			triggered_upkeep_modifier = {
				key = planet_jobs_tec_prime_drone
				modifier_types = {
					add
					mult
				}
				trigger = {
					has_job_category = tec_prime_drone
				}
			}

			triggered_produces_modifier = {
				key = planet_jobs_tec_free_agent
				modifier_types = {
					add
					mult
				}
				trigger = {
					is_pop_category = tec_free_agent
				}
			}

			triggered_upkeep_modifier = {
				key = planet_jobs_tec_free_agent
				modifier_types = {
					add
					mult
				}
				trigger = {
					is_pop_category = tec_free_agent
				}
			}
		# /
	# /

	# Species Archetypes
		triggered_produces_modifier = {
			key = planet_psionic_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				species = {
					tec_is_any_psionic_species = yes
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_psionic_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				species = {
					tec_is_any_psionic_species = yes
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_virtual_jobs
			modifier_types = {
				mult
			}
			trigger = {
				has_virtual_species_trait = yes
			}
		}

		triggered_produces_modifier = {
			key = planet_cyborg_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				species = {
					tec_is_cyborg_species = yes
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_cyborg_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				species = {
					tec_is_cyborg_species = yes
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_robotic
			modifier_types = {
				add
				mult
			}
			trigger = {
				OR = {
					is_robot_pop = yes
					# Evolved
					species = {
						tec_is_replicant_species = yes
					}
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_robotic
			modifier_types = {
				add
				mult
			}
			trigger = {
				OR = {
					is_robot_pop = yes
					# Evolved
					species = {
						tec_is_replicant_species = yes
					}
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_jobs_organics
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_robot_pop = no
			}
		}

		triggered_upkeep_modifier = {
			key = planet_jobs_organics
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_robot_pop = no
			}
		}

		# Evolved
			triggered_produces_modifier = {
				key = planet_jobs_tec_bioservant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_bioservant_species = yes
					}
				}
			}


			triggered_upkeep_modifier = {
				key = planet_jobs_tec_bioservant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_bioservant_species = yes
					}
				}
			}

			triggered_produces_modifier = {
				key = planet_jobs_tec_replicant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_replicant_species = yes
					}
				}
			}


			triggered_upkeep_modifier = {
				key = planet_jobs_tec_replicant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_replicant_species = yes
					}
				}
			}

			triggered_produces_modifier = {
				key = planet_jobs_tec_cybernetics
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						OR = {
							is_robotic = yes
							tec_is_cyborg_species = yes
						}
					}
				}
			}


			triggered_upkeep_modifier = {
				key = planet_jobs_tec_cybernetics
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						OR = {
							is_robotic = yes
							tec_is_cyborg_species = yes
						}
					}
				}
			}

			triggered_produces_modifier = {
				key = planet_jobs_tec_biopsionic_embroidered
				modifier_types = {
					add
					mult
				}
				trigger = {
					has_trait = trait_tec_biopsionic_embroidered
				}
			}


			triggered_upkeep_modifier = {
				key = planet_jobs_tec_biopsionic_embroidered
				modifier_types = {
					add
					mult
				}
				trigger = {
					has_trait = trait_tec_biopsionic_embroidered
				}
			}

			triggered_produces_modifier = {
				key = planet_jobs_tec_converged
				modifier_types = {
					add
					mult
				}
				trigger = {
					has_modifier = tec_converged_pop
				}
			}


			triggered_upkeep_modifier = {
				key = planet_jobs_tec_converged
				modifier_types = {
					add
					mult
				}
				trigger = {
					has_modifier = tec_converged_pop
				}
			}

			triggered_produces_modifier = {
				key = planet_jobs_tec_main_species
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						is_same_species = owner_main_species
					}
				}
			}


			triggered_upkeep_modifier = {
				key = planet_jobs_tec_main_species
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						is_same_species = owner_main_species
					}
				}
			}

			triggered_produces_modifier = {
				key = planet_jobs_tec_xeno_species
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						NOT = { is_same_species = owner_main_species }
					}
				}
			}


			triggered_upkeep_modifier = {
				key = planet_jobs_tec_xeno_species
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						NOT = { is_same_species = owner_main_species }
					}
				}
			}
		# /
	# /
	# Planet Archetypes
		triggered_produces_modifier = {
			key = habitat_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = {
					tec_is_habitat = yes
				}
			}
		}


		triggered_upkeep_modifier = {
			key = habitat_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = {
					tec_is_habitat = yes
				}
			}
		}

		triggered_produces_modifier = {
			key = non_artificial_planet_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = {
					is_artificial = no
					uses_habitat_capitals = no
					tec_is_viable_voidwellerneutral_planet = no
				}
			}
		}


		triggered_upkeep_modifier = {
			key = non_artificial_planet_jobs
			modifier_types = {
				add
				mult
			}
			trigger = {
				exists = planet
				planet = {
					is_artificial = no
					uses_habitat_capitals = no
					tec_is_viable_voidwellerneutral_planet = no
				}
			}
		}

		# Evolved

			triggered_produces_modifier = {
				key = artificial_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						is_artificial = yes
					}
				}
			}


			triggered_upkeep_modifier = {
				key = artificial_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						is_artificial = yes
					}
				}
			}

			triggered_produces_modifier = {
				key = gaia_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						tec_is_gaia_world = yes
					}
				}
			}


			triggered_upkeep_modifier = {
				key = gaia_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						tec_is_gaia_world = yes
					}
				}
			}

			triggered_produces_modifier = {
				key = perfect_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						tec_is_perfect_planet = { cached = yes }
					}
				}
			}


			triggered_upkeep_modifier = {
				key = perfect_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						tec_is_perfect_planet = { cached = yes }
					}
				}
			}

			triggered_produces_modifier = {
				key = non_perfect_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						NOT = { tec_is_perfect_planet = { cached = yes } }
						NOT = { tec_is_neutral_planet = { cached = yes } }
					}
				}
			}


			triggered_upkeep_modifier = {
				key = non_perfect_planet_jobs
				modifier_types = {
					add
					mult
				}
				trigger = {
					exists = planet
					planet = {
						NOT = { tec_is_perfect_planet = { cached = yes } }
						NOT = { tec_is_neutral_planet = { cached = yes } }
					}
				}
			}
		# /
	# /
	# Situational bonuses
		triggered_produces_modifier = {
			key = planet_jobs_tec_at_war
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_scope_valid = yes
				exists = owner
				owner = {
					OR = {
						is_at_war = yes
						# Ideally we should add a "exist crisis" here
					}
				}
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_at_war
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_scope_valid = yes
				exists = owner
				owner = {
					OR = {
						is_at_war = yes
						# Ideally we should add a "exist crisis" here
					}
				}
			}
		}
		
		triggered_produces_modifier = {
			key = planet_jobs_tec_at_peace
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_scope_valid = yes
				exists = owner
				owner = {
					OR = {
						is_at_war = no
						# Ideally we should add a "not exist crisis" here
					}
				}
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_tec_at_peace
			use_parent_icon = yes
			modifier_types = {
				mult
				add
			}
			trigger = {
				is_scope_valid = yes
				exists = owner
				owner = {
					OR = {
						is_at_war = no
						# Ideally we should add a "not exist crisis" here
					}
				}
			}
		}
	# /
	# Other and compat
		triggered_produces_modifier = {
			key = planet_jobs_hired
			modifier_types = {
				mult
			}
			trigger = {
				tec_has_hired_job = yes
			}
		}
		triggered_upkeep_modifier = {
			key = planet_jobs_hired
			modifier_types = {
				mult
			}
			trigger = {
				tec_has_hired_job = yes
			}
		}

		triggered_produces_modifier = {
			key = planet_worker_ownership_jobs
			modifier_types = {
				mult
			}
			trigger = {
				tec_pop_under_worker_ownership = yes
			}
		}
		triggered_upkeep_modifier = {
			key = planet_worker_ownership_jobs
			modifier_types = {
				mult
			}
			trigger = {
				tec_pop_under_worker_ownership = yes
			}
		}
	# /

	inline_script = {
		script = conditional/tec_number
		value = @xvcv_mdlc_bio_robot_growth_add_1
		equal = 1
		code = "
			inline_script = economic_categories/tec_xvcv_pop_category_drones
		"
	}
	inline_script = {
		script = mod_support/tec_pd_uniques_present
		code = "
			inline_script = economic_categories/tec_pd_biosynths
		"
	}
}

planet_jobs_productive = { #this should contain all categories that primarily produce resources (rather than e.g. amenities, trade, stability)
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bio_trophies = {
	parent = planet_culture_workers
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_pop_assemblers = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}
	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

planet_criminals = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_farmers = {
	icon = "job_farmer"
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces 
		upkeep
	}
}

planet_anglers = {
	parent = planet_farmers
}

planet_miners = {
	icon = "job_miner"
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_technician = {
	icon = "job_technician"
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_sr_miners = { #added because we don't want miners_minerals_produces_add to apply to these
	parent = planet_miners
	modifier_category = pop
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

planet_livestock = {
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	
	# Inherited Modifiers
	inline_script = {
		script = economic_categories/tec_subtype_inheritance
		subtype = planet_farmers 	# This check is done so that livestock working zoo jobs don't inherit the modifier
		trigger = "
			has_job = livestock
			is_organic_species = yes
			is_lithoid = no
		"
	}
	inline_script = {
		script = economic_categories/tec_subtype_inheritance
		subtype = planet_miners 	# This check is done so that livestock working zoo jobs don't inherit the modifier
		trigger = "
			has_job = livestock
			is_organic_species = yes
			is_lithoid = yes
		"
	}
}

planet_organic_batteries = {
	parent = planet_jobs_productive
	modifier_category = pop

	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}

	inline_script = {
		script = economic_categories/tec_subtype_inheritance
		subtype = planet_technician 	# This check is done so that livestock working zoo jobs don't inherit the modifier
		trigger = ""
	}
}

planet_colonists = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_politicians = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_administrators = {
	icon = "job_bureaucrat"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_executives = {
	parent = planet_politicians
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_managers = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
	# Inherited Modifiers

	inline_script = {
		script = economic_categories/tec_subtype_inheritance_only_add
		subtype = planet_administrators
		trigger = ""
	}
}

planet_researchers = {
	icon = "job_researcher"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_rangers = {
	icon = "job_ranger"
	parent = planet_researchers
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}

	modifier_category = pop

	inline_script = {
		script = economic_categories/tec_subtype_inheritance_only_add
		subtype = planet_researchers
		trigger = ""
	}

}

planet_metallurgists = {
	icon = "job_foundry"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_laborer = {
	icon = job_low_tech_laborer
	parent = planet_jobs_productive
	modifier_category = pop
}

planet_culture_workers = {
	parent = planet_administrators
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}


planet_evaluators = {
	parent = planet_administrators
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_nobles = {
	parent = planet_politicians
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_necro_apprentices = {
	parent = planet_pop_assemblers
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_merchants = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_entertainers = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_soldiers = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}


planet_squires = {
	parent = planet_jobs_productive
	generate_add_modifiers = {
		produces
	}
}

planet_knights = {
	parent = planet_jobs_productive
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	# Inherited Modifiers

	inline_script = {
		script = economic_categories/tec_subtype_inheritance
		subtype = planet_administrators
		trigger = ""
	}

	inline_script = {
		script = economic_categories/tec_subtype_inheritance
		subtype = planet_researchers
		trigger = ""
	}
}

planet_priests = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
	# Inherited Modifiers
	inline_script = {
		script = economic_categories/tec_subtype_inheritance_only_add
		subtype = planet_administrators
		trigger = ""
	}
}

planet_enforcers = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_clerks = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
}

planet_traders = {
	parent = planet_jobs
	modifier_category = pop
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	
	# Subtypes
		inline_script = {
			script = economic_categories/tec_subtype_inheritance
			subtype = planet_clerks
			trigger = ""
		}
	#
}

planet_telepaths = {
	parent = planet_administrators
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
	# Inherited Modifiers

		inline_script = {
			script = economic_categories/tec_subtype_inheritance_only_add
			subtype = planet_administrators
			trigger = ""
		}
}

planet_doctors = {
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_augmentors = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		upkeep
	}
	modifier_category = pop
}

planet_refiners = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_translucers = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_chemists = {
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_artisans = {
	icon = "job_artisan"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}

	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}


planet_bath_attendants = {
	icon = "job_bath_attendant"
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bath_attendants_hive = {
	icon = "job_bath_attendant"
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bath_attendants_machine = {
	icon = "job_bath_attendant"
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_bath_attendants_individual_machine = {
	icon = "job_bath_attendant"
	parent = planet_jobs
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

planet_neural_chips = {
	icon = "job_neural_chip"
	parent = planet_jobs_productive
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

# Evolved
	planet_maintenancedrones = {
		icon = "job_maintenance_drone"
		parent = planet_jobs

		generate_add_modifiers = {
			produces
			upkeep
		}

		generate_mult_modifiers = {
			produces
			upkeep
		}
		modifier_category = pop
	}
# /

planet_pops = {
	parent = planets
	generate_mult_modifiers = {
		produces
		upkeep
	}
	generate_add_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# Archetype
		triggered_produces_modifier = {
			key = planet_pops_robotics
			modifier_types = {
				add
				mult
			}
			trigger = {
				OR = {
					is_robot_pop = yes
					species = {
						tec_is_replicant_species = yes
					}
				}
			}
		}

		triggered_upkeep_modifier = {
			key = planet_pops_robotics
			modifier_types = {
				add
				mult
			}
			trigger = {
				OR = {
					is_robot_pop = yes
					species = {
						tec_is_replicant_species = yes
					}
				}
			}
		}

		triggered_produces_modifier = {
			key = planet_pops_cyborgs
			modifier_types = {
				add
				mult
			}
			trigger = {
				species = { tec_is_cyborg_species = yes }
			}
		}

		triggered_upkeep_modifier = {
			key = planet_pops_cyborgs
			modifier_types = {
				add
				mult
			}
			trigger = {
				species = { tec_is_cyborg_species = yes }
			}
		}

		triggered_produces_modifier = {
			key = planet_pops_organics
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_robot_pop = no
			}
		}

		triggered_upkeep_modifier = {
			key = planet_pops_organics
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_robot_pop = no
			}
		}

		triggered_produces_modifier = {
			key = planet_pops_lithoids
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_lithoid = yes
			}
		}

		triggered_upkeep_modifier = {
			key = planet_pops_lithoids
			modifier_types = {
				add
				mult
			}
			trigger = {
				is_lithoid = yes
			}
		}


		# Evolved
			triggered_produces_modifier = {
				key = planet_pops_tec_bioservant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_bioservant_species = yes
					}
				}
			}

			triggered_upkeep_modifier = {
				key = planet_pops_tec_bioservant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_bioservant_species = yes
					}
				}
			}

			triggered_produces_modifier = {
				key = planet_pops_tec_replicant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_replicant_species = yes
					}
				}
			}

			triggered_upkeep_modifier = {
				key = planet_pops_tec_replicant
				modifier_types = {
					add
					mult
				}
				trigger = {
					species = {
						tec_is_replicant_species = yes
					}
				}
			}

			triggered_produces_modifier = {
				key = planet_pops_tec_cybernetics
				modifier_types = {
					add
					mult
				}
				trigger = {
					OR = {
						is_robot_pop = yes
						species = { tec_is_cyborg_species = yes }
					}
				}
			}

			triggered_upkeep_modifier = {
				key = planet_pops_tec_cybernetics
				modifier_types = {
					add
					mult
				}
				trigger = {
					OR = {
						is_robot_pop = yes
						species = { tec_is_cyborg_species = yes }
					}
				}
			}
		# /
	# /
	triggered_produces_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			add
			mult
		}
		trigger = {
			is_unemployed = yes
		}
	}

	triggered_upkeep_modifier = {
		key = planet_pops_unemployed
		modifier_types = {
			add
			mult
		}
		trigger = {
			is_unemployed = yes
		}
	}

	# PD

	inline_script = {
		script = mod_support/tec_pd_uniques_present
		code = "
			inline_script = economic_categories/tec_pd_biosynths
		"
	}
}

unemployment_resources = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop
}

pop_category_precursor = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	
	# New eco modification
		inline_script = economic_categories/tec_pop_category_non_slave_resources
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /
}

pop_category_xeno_ward = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

		
	# New eco modification
		inline_script = economic_categories/tec_pop_category_non_slave_resources
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /
}

pop_category_pre_sapients = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	
	# New eco modification
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /
}

pop_category_purge = {
	parent = planet_pops
	modifier_category = pop
	generate_add_modifiers = {
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	# New eco modification
	# NOTE: Deliberatedly different
		inline_script = economic_categories/tec_pop_category_purge_resources
	# /
}

pop_category_bio_trophy = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	
	# New eco modification
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /
}

pop_category_slave = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /

	inline_script = {
		script = conditional/tec_number
		value = @xvcv_mdlc_bio_robot_growth_add_1
		equal = 1
		code = "
			inline_script = {
				script = economic_categories/tec_xvcv_pop_category_bio_robot
				pop_category = slave
			}
		"
	}
	inline_script = {
		script = economic_categories/tec_pse_pop_category_psionic
		pop_category = slave
	}
}

pop_category_robot = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /
}

pop_category_drones = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/tec_pop_category_non_slave_resources
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /

	inline_script = {
		script = conditional/tec_number
		value = @xvcv_mdlc_bio_robot_growth_add_1
		equal = 1
		code = "
			inline_script = economic_categories/tec_xvcv_pop_category_drones
		"
	}
}

pop_category_workers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	triggered_produces_modifier = {
		key = pop_category_workers_cyborgs
		modifier_types = {
			add
			mult
		}
		trigger = {
			tec_is_cyborg_species = yes
		}
	}

	triggered_upkeep_modifier = {
		key = pop_category_workers_cyborgs
		modifier_types = {
			add
			mult
		}
		trigger = {
			tec_is_cyborg_species = yes
		}
	}

	# New eco modification
		inline_script = economic_categories/tec_pop_category_non_slave_resources
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /


	inline_script = {
		script = conditional/tec_number
		value = @xvcv_mdlc_bio_robot_growth_add_1
		equal = 1
		code = "
			inline_script = {
				script = economic_categories/tec_xvcv_pop_category_bio_robot
				pop_category = workers
			}
		"
	}

	inline_script = {
		script = economic_categories/tec_pse_pop_category_psionic
		pop_category = workers
	}
}

pop_category_specialists = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/tec_pop_category_non_slave_resources
		inline_script = economic_categories/tec_pop_category_normal_resources
	# /

	inline_script = {
		script = conditional/tec_number
		value = @xvcv_mdlc_bio_robot_growth_add_1
		equal = 1
		code = "
			inline_script = {
				script = economic_categories/tec_xvcv_pop_category_bio_robot
				pop_category = specialists
			}
		"
	}

	inline_script = {
		script = economic_categories/tec_pse_pop_category_psionic
		pop_category = specialists
	}
}

pop_category_rulers = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	# New eco modification
		inline_script = economic_categories/tec_pop_category_non_slave_resources

		inline_script = economic_categories/tec_pop_category_normal_resources
	# /

	inline_script = {
		script = conditional/tec_number
		value = @xvcv_mdlc_bio_robot_growth_add_1
		equal = 1
		code = "
			inline_script = {
				script = economic_categories/tec_xvcv_pop_category_bio_robot
				pop_category = rulers
			}
		"
	}

	inline_script = {
		script = economic_categories/tec_pse_pop_category_psionic
		pop_category = rulers
	}
}

pop_category_assimilation = {
	parent = planet_pops
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = pop

	
	# New eco modification
		# Note: Deliberatedly different
		inline_script = economic_categories/tec_pop_category_assimilation_resources
	# /
}

# Evolved
	pop_category_tec_free_agent = {
		parent = planet_pops
		generate_add_modifiers = {
			upkeep
		}
		generate_mult_modifiers = {
			produces
			upkeep
		}
		modifier_category = pop

		
		# New eco modification
			inline_script = economic_categories/tec_pop_category_normal_resources
		# /
	}
# /

planet_deposits = {
	parent = planets
	generate_add_modifiers = {
		produces
	}
}

hab_deposits = {
	parent = planet_deposits
	generate_mult_modifiers = {
		produces
	}
}

orbital_mining_deposits = {
	parent = station_gatherers
}

orbital_research_deposits = {
	parent = station_researchers
}

hab_mining_deposits = {
	parent = orbital_mining_deposits
	generate_mult_modifiers = {
		produces
	}
}

hab_research_deposits = {
	parent = station_researchers
	generate_mult_modifiers = {
		produces
	}
}

deposit_blockers = {
	use_for_ai_budget = yes
	generate_mult_modifiers = {
		cost
	}

	modifier_category = deposit

	ai_use_parent_for_resources_upkeep = {
		energy
	}

	parent = country
}

deposit_blockers_natural = {
	generate_add_modifiers = {
		produces
	}
	modifier_category = deposit

	parent = deposit_blockers
}

armies = {
	use_for_ai_budget = yes

	generate_mult_modifiers = {
		cost
		upkeep
		produces
	}
	generate_add_modifiers = {
		cost
		upkeep
		produces
	}
	modifier_category = army

	parent = country
}

leaders = {
	use_for_ai_budget = yes

	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	modifier_category = leader

	parent = country
}

leader_commanders = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}

	inline_script = economic_categories/tec_leaders

	inline_script = economic_categories/tec_leaders_resources

	inline_script = {
		script = economic_categories/tec_pse_leader_psionic
		class = commanders
	}
}

leader_admirals = {
	parent = leader_commanders
}

leader_generals = {
	parent = leader_commanders
}

leader_scientists = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	inline_script = economic_categories/tec_leaders

	inline_script = economic_categories/tec_leaders_resources

	inline_script = {
		script = economic_categories/tec_pse_leader_psionic
		class = scientists
	}
}

leader_officials = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
	inline_script = economic_categories/tec_leaders
	
	inline_script = economic_categories/tec_leaders_resources

	inline_script = {
		script = economic_categories/tec_pse_leader_psionic
		class = officials
	}
}

leader_governors = {
	parent = leader_officials
}

leader_envoys = {
	parent = leaders
	modifier_category = leader
	generate_add_modifiers = {
		cost
		produces
		upkeep
	}
	generate_mult_modifiers = {
		cost
		produces
		upkeep
	}
}

diplomacy = {
	hidden = yes
	parent = country
	generate_mult_modifiers = {
		produces
		upkeep
	}
	modifier_category = country
}

# Country wide modifier collection
country_container = {
	hidden = yes
	parent = country
}

country_monuments = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ambition = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_federation_perks = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_civics = {
	parent = country_container
	generate_add_modifiers = {
		upkeep
		produces
	}

	generate_mult_modifiers = {
		upkeep
		produces
	}
	modifier_category = country
}

country_ai_uprising = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_covenant = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_dessanu = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_extended_payout = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_shoulders = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_galactic_standard = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_concessions = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_first_contact = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_custodian = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_tech = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_traditions = {
	parent = country_container
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
	modifier_category = country
}

country_councilor = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ruler = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_agendas = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_ethic = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_first_league_homeworld = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

country_power_projection = {
	parent = country_container
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
	modifier_category = country
}

pop_factions = {
	parent = country
	generate_mult_modifiers = {
		produces
	}

	generate_add_modifiers = {
		produces
	}
	modifier_category = country #pop factions category currently unused
}

subjects = {
	parent = diplomacy
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

federation = {
	parent = diplomacy
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

rivalries = {
	parent = diplomacy
	generate_add_modifiers = {
		produces
	}
	generate_mult_modifiers = {
		produces
	}
}

non_aggression_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

migration_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

research_agreements = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

commercial_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

defensive_pacts = {
	parent = diplomacy
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

guarantees = {
	parent = diplomacy
}

monthly_trades = {
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}

claims = {
	use_for_ai_budget = yes
	parent = country
}

agreement_proposals = {
	use_for_ai_budget = yes
	parent = diplomacy
}

subject_tax = {
}

envoy_costs = {
	parent = diplomacy
}

diplo_closed_borders = {
	parent = diplomacy
}

diplomatic_networking = {
	parent = diplomacy
}

societal_enlightenment_pacts = {
	parent = diplomacy
}

open_technological_enlightenment_pacts = {
	parent = diplomacy
}

stratified_technological_enlightenment_pacts = {
	parent = diplomacy
}

pre_ftl_trade_pacts = {
	parent = diplomacy
}

subject_integration = {
}

overlord_subsidy = {
}

specialist_subject_conversion = {
}

relics = {
}

artifact_actions = {
}

sector = {
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}
}

menace = {
}

traditions = {
	use_for_ai_budget = yes
	parent = country
	generate_mult_modifiers = {
		produces
		upkeep
		cost
	}

	generate_add_modifiers = {
		produces
		upkeep
		cost
	}
}

operations = {
	use_for_ai_budget = yes
	ai_use_parent_for_resources_upkeep = {
		energy
	}
	generate_mult_modifiers = {
		cost
		upkeep
	}
	parent = country
	modifier_category = espionage
}

country_situations = {
	generate_add_modifiers = {
		produces
	}
	modifier_category = country
}


planet_astrometeorologists = {
	parent = planet_researchers
	modifier_category = pop
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	# Subtypes
	inline_script = {
		script = economic_categories/tec_subtype_inheritance_only_add
		subtype = planet_researchers
		trigger = ""
	}

}

planet_storm_dancers = {
	parent = planet_entertainers
	modifier_category = pop
	generate_add_modifiers = {
		produces
		upkeep
	}
	generate_mult_modifiers = {
		produces
		upkeep
	}

	inline_script = {
		script = economic_categories/tec_subtype_inheritance_only_add
		subtype = planet_entertainers
		trigger = ""
	}
}