# from = country
# this = species

citizenship_full = {
	is_full_citizenship = yes

	potential = {
		exists = from
		from = {
			is_machine_empire = no
		}
		NOR = {
			AND = {
				has_trait = trait_mechanical
				is_shackled_robot_species_rights = yes
				#from = {
					#has_policy_flag = ai_servitude
				#}
			}
			AND = {
				has_trait = @trait_tec_bioservant
				is_shackled_bioservant_species_rights = yes
				#from = {
					#has_policy_flag = bioservant_servitude 
				#}
			}
		}
	}

	allow = {
		hidden_trigger = { exists = from }

		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = "disconnected_machine_pops_kill_themselves_citizenship"
			is_disconnected_machine_pop = no
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_SPECIES_CITIZENS_ONLY"
			OR = {
				from = {
					is_hive_empire = no
				}
				has_trait = trait_hive_mind
			}
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = too_alien
			OR = {
				is_same_species = from
				from = {
					NOR = {
						has_ethic = ethic_xenophobe
						has_ethic = ethic_fanatic_xenophobe
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = no_service_no_citizenship
			OR = {
				NOT = { from = { has_valid_civic = civic_citizen_service } }
				has_military_service_type = { type = military_service_full country = from }
			}
		}
		custom_tooltip = {
			fail_text = no_bioservant_no_citizenship
			is_shackled_bioservant_species_rights = no
		}
		custom_tooltip = {
			fail_text = no_synth_no_citizenship
			is_shackled_robot_species_rights = no
		}
	}
	ai_will_do = {
		factor = 1
	}
}

citizenship_full_machine = {
	is_full_citizenship = yes

	potential = {
		host_has_dlc = "Synthetic Dawn Story Pack"
		exists = from
		from = { is_machine_empire = yes }
	}

	allow = {
		hidden_trigger = { exists = from }
		if = {
			limit = {
				from = { NOT = { has_valid_civic = civic_machine_assimilator } }
			}

			custom_tooltip = {
				fail_text = MACHINE_SPECIES_NOT_MACHINE
				OR = {
					has_trait = trait_mechanical
					has_trait = trait_machine_unit
				}
			}
		}
		else = {
			custom_tooltip = {
				fail_text = ASSIMILATOR_SPECIES_NOT_CYBORG
				OR = {
					#	has_trait = @trait_tec_rudimentary_cyborg
					tec_is_cyborg_species = yes

					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}		
	}
	ai_will_do = {
		factor = 101
	}
}

citizenship_assimilation = {
	is_assimilation = yes

	potential = {
		OR = {
			host_has_dlc = "Synthetic Dawn Story Pack"
			host_has_dlc = "Utopia"
		}
		exists = from
		
		NOT = {	is_exact_same_species = from }	# Prevents main species from autoassimilating
		is_sapient = yes						# avoid presapients
		from = {								# Exceptions
			OR = {
				AND = {
					OR = { # Purifier exceptions - Total assimilation
						NOT = {
							has_civic = civic_fanatic_purifiers 
						}
						AND = {
							has_civic = civic_fanatic_purifiers
							OR = {	# Total assimilations
								has_country_flag = tec_replicant_assimilation
								has_country_flag = tec_biological_assimilation
								has_country_flag = tec_synthetic_assimilation
								has_country_flag = tec_total_assimilation
							}
						}
					}
					OR = { # Assimilation sort
						AND = {	# Machine into robots Assimilation
							root = {
								has_trait = trait_machine_unit
							}
							OR = {
								has_technology = tech_tec_machine_assimilation
								has_country_flag = tec_machine_into_robot_assimilation
								has_country_flag = tec_robot_total_assimilation
							}
						}
						AND = {	# Robots into Machine Assimilation
							root = {
								has_trait = trait_mechanical
							}
							OR = {
								AND = { # Machines convert all robots into machines
									is_machine_empire = yes
									OR = {
										has_technology = tech_tec_robot_assimilation
										has_country_flag = tec_robot_into_machine_assimilation
									}
								}
								AND = {	# Robots into robot main frame
									is_machine_empire = no
									OR = {
										has_technology = tech_tec_machine_assimilation
										has_country_flag = tec_machine_into_robot_assimilation
										has_country_flag = tec_robot_total_assimilation
									}
									root = {
										NOT = { # Was @from, just in case
											has_species_flag = mechanical_species@prev
										}
									}
								}
							}
						}
						AND = { # Hive trait Deassimilation
							OR = {
								# Note: this flag is unlocked by the genetic ap
								has_country_flag = can_add_advanced_traits
								has_country_flag = tec_hive_trait_deassimilation
								has_technology = tech_tec_hive_deassimilation
							}
							NOT = {
								has_ethic = ethic_gestalt_consciousness 
							}
							root = {
								has_trait = trait_hive_mind
								NOR = {
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						AND = { # Hive trait Assimilation
							# Note - Hiveminds will be able to assimilate without aps, just with tech, but for organics
							is_hive_empire = yes
							OR = {
								has_country_flag = can_add_advanced_traits
								has_technology = tech_tec_hive_assimilation
								has_country_flag = tec_hive_trait_assimilation
							}
							NOT = { # swarms only devours
								has_civic = civic_hive_devouring_swarm 
							}
							root = {
								NOR = {
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
									has_trait = trait_hive_mind
								}
							}
						}
						AND = { # Machine Cyborg Assimilation
							is_machine_empire = yes
							has_civic = civic_machine_assimilator
							root = {
								NOR = {
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						AND = {	# Regular Cyborg Assimilation
							has_country_flag = tec_cybernetic_t1_assimilation
							root = {
								NOR = {
									has_trait = trait_cybernetic
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						AND = {	# Adv Cyborg Assimilation
							has_country_flag = tec_cybernetic_t2_assimilation
							root = {
								NOR = {
									has_trait = trait_tec_advanced_cyborg
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						AND = { # Psionic Assimilation
							has_country_flag = tec_psionic_assimilation
							root = {
								NOR = {
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						AND = { # Cyberpsio Assimilation
							has_country_flag = tec_cyberpsionic_assimilation
							root = {
								NOR = {
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						AND = { # Biopsio Assimilation
							has_country_flag = tec_biopsionic_assimilation
							root = {
								NOR = {
									has_trait = trait_tec_biopsionic
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						AND = { # Biological assimilation (total organic)
							has_country_flag = tec_biological_assimilation
							root = {
								NOR = {
									has_trait = trait_mechanical
									has_trait = trait_machine_unit
								}
							}
						}
						# Synthetic assimilation (total)
						has_country_flag = tec_synthetic_assimilation
						# Replicant Assimilation (total)
						has_country_flag = tec_replicant_assimilation
						# Replicant Assimilation (total)
						has_country_flag = tec_total_assimilation
					}
				}
				has_country_flag = tec_test_assimilations
			}
		}
	}

	allow = {
		hidden_trigger = {
			exists = from 
		}
		# Not the same species
		custom_tooltip = {
			fail_text = MUST_NOT_BE_DOMINANT_SPECIES
			NOT = {
				is_exact_same_species = from
			}
		}
		# SORT BY AUTHORITY
		if = {			# OVERRIDE
			limit = {
				from = {
					OR = {
						has_country_flag = tec_total_assimilation
						has_country_flag = tec_test_assimilations
						has_global_flag = tec_test_assimilations
					}
				}
			}
			always = yes
		}
		else_if = { 	# HIVE MINDS
			limit = {
				from = {
					is_hive_empire = yes
				}
			}
			if = {		# Machine pop - Robot Assimilation
				limit = {
					from = {	# organic hives don't use robots at all
						tec_is_biohive = no
					}
					has_trait = trait_machine_unit
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_ROBOTIC_CRAFTED_SPECIES
					fail_text = TEC_MACHINE_INTO_ROBOTS_REQUIRE_TECH
					from = {
						OR = {
							has_country_flag = tec_machine_into_robot_assimilation
							has_technology = tech_tec_machine_assimilation
							has_technology = tech_tec_robot_assimilation
						}
					}
					has_trait = trait_machine_unit
				}
			}
			else_if = { # Robot pop - Robot Consolidation
				limit = {
					from = {	# organic hives don't use robots at all
						tec_is_biohive = no
					}
					has_trait = trait_mechanical
					NOT = {
						has_species_flag = mechanical_species@from
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_ROBOTIC_CRAFTED_SPECIES
					from = {
						OR = {
							has_technology = tech_tec_machine_assimilation
							has_country_flag = tec_robot_total_assimilation
						}
					}
					has_trait = trait_mechanical
				}
			}
			else_if = { # Full organic assimilation
				limit = {
					from = {
						OR = {
							has_country_flag = tec_genetics_t2_completed
							has_country_flag = tec_biological_assimilation	
						}
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_MAIN_SPECIES
					fail_text = TEC_HIVEPOPS_HIVE_BIO
					from = {
						OR = {
							has_country_flag = tec_genetics_t2_completed
							has_country_flag = tec_biological_assimilation	
						}
					}
					is_robotic_species = no
				}
			}
			else_if = { # Hivemind trait assimilation
				limit = {
					is_robotic_species = no
					from = {
						OR = {
							has_country_flag = can_add_advanced_traits
							has_technology = tech_tec_hive_assimilation
							has_country_flag = tec_hive_trait_assimilation
							# debug
							has_country_flag = tec_hive_biological_assimilation_debug
						}
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_GAIN_HIVE_TRAIT
					fail_text = TEC_HIVEPOPS_HIVE_ASSIMILATION
					from = {
						OR = {
							has_country_flag = can_add_advanced_traits
							has_technology = tech_tec_hive_assimilation
							has_country_flag = tec_hive_trait_assimilation
							# debug
							has_country_flag = tec_hive_biological_assimilation_debug
						}
					}
					NOR = {
						has_trait = trait_hive_mind
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
			}
			else_if = {	# Replicant Assimilation
				limit = {
					from = {
						has_country_flag = tec_replicant_assimilation
					}
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_REPLICANT
					}
				}
				custom_tooltip = {
					fail_text = TEC_CAN_ONLY_ASSIMILATE_NON_REPLICANTS
					tec_is_replicant_species = no
				}
			}
			if = { # Cybernetic integration
				limit = {
					from = {
						OR = {
							# Cyberhives can cyborg assimilate by default
							tec_is_cyberhive = yes
							AND = {
								tec_is_cyberhive = no
								OR = {
									has_country_flag = tec_cybernetic_t1_assimilation
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
							NOT = {
								has_country_flag = tec_replicant_assimilation
							}
						}
					}
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				custom_tooltip = {
					fail_text = TEC_CYBORGS_MUST_BE_ORGANIC
					NOR = {
						AND = {
							from = {
								NOT = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
							has_trait = trait_cybernetic
						}
						has_trait = @trait_tec_advanced_cyborg
						has_trait = @trait_tec_cyberpsionic
						tec_is_replicant_species = yes
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_GAIN_CYBERNETIC_TRAIT
					fail_text = TEC_CYBORGS_CANT_BE_CYBORGD
					OR = {
						NAND = {
							from = {
								NOR = {
									has_country_flag = tec_cybernetic_t1_assimilation
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
							OR = {
								#	has_trait = @trait_tec_rudimentary_cyborg
								has_trait = trait_cybernetic
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								tec_is_replicant_species = yes
							}
						}
						NAND = {
							from = {
								has_country_flag = tec_cybernetic_t1_assimilation
							}
							OR = {
								has_trait = trait_cybernetic
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								tec_is_replicant_species = yes
							}
						}
						NAND = {
							from = {
								has_country_flag = tec_cybernetic_t2_assimilation
							}
							OR = {
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								tec_is_replicant_species = yes
							}
						}
						
					}
				}
			}
		}
		else_if = {		# MACHINE EMPIRES
			limit = {
				from = {
					is_machine_empire = yes 
				}
			}
			if = { 		# Robot - Machine pop Assimilation
				limit = {
					has_trait = trait_mechanical
					from = {
						NOT = {
							has_country_flag = tec_replicant_assimilation
						}
					}
				}
				custom_tooltip = {
					text = TEC_POP_CONVERT_INTO_MAIN_SPECIES_MACHINE
					fail_text = TEC_ROBOTS_INTO_MACHINES_REQUIRE_TECH
					from = {
						has_technology = tech_tec_robot_assimilation
					}
					has_trait = trait_mechanical
				}
			}
			else_if = { # Machines into own machines
				limit = {
					has_trait = trait_machine_unit
					NOR = {
						is_exact_same_species = from
						is_subspecies = from
					}
				}
				custom_tooltip = {
					text = TEC_POP_CONVERT_INTO_MAIN_SPECIES_MACHINE
					fail_text = TEC_ROBOTS_INTO_MACHINES_REQUIRE_TECH
					from = {
						has_technology = tech_tec_robot_assimilation
					}
					has_trait = trait_machine_unit
				}
			}
			else_if = { # Machine Assimilator
				limit = {
					from = {
						OR = {
							has_valid_civic = civic_machine_assimilator
							AND = {
								NOT = {
									has_valid_civic = civic_machine_assimilator
									OR = {
										has_country_flag = tec_cybernetic_t1_assimilation
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
							}
						}
					}
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				custom_tooltip = {
					fail_text = TEC_CYBORGS_MUST_BE_ORGANIC
					NOR = {
						#	has_trait = @trait_tec_rudimentary_cyborg
						AND = {
							has_trait = trait_cybernetic
							from = {
								NOT = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
						}
						has_trait = @trait_tec_advanced_cyborg
						has_trait = @trait_tec_cyberpsionic
						has_trait = @trait_tec_replicant_standard
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_GAIN_CYBERNETIC_TRAIT
					fail_text = TEC_CYBORGS_CANT_BE_CYBORGD
					OR = {
						NAND = {
							from = {
								NOR = {
									has_country_flag = tec_cybernetic_t1_assimilation
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
							OR = {
								#	has_trait = @trait_tec_rudimentary_cyborg
								has_trait = trait_cybernetic
								has_trait = @trait_tec_cyberpsionic
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_replicant_standard
							}
						}
						NAND = {
							from = {
								has_country_flag = tec_cybernetic_t1_assimilation
								NOT = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
							OR = {
								has_trait = trait_cybernetic
								has_trait = @trait_tec_cyberpsionic
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_replicant_standard
							}
						}
						NAND = {
							from = {
								has_country_flag = tec_cybernetic_t2_assimilation
							}
							OR = {
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								has_trait = @trait_tec_replicant_standard
							}
						}
						
					}
				}
				
			}
			# Machine Encasing

			# Machine Replicant

		}
		else_if = {		# REGULAR EMPIRES
			limit = {
				from = {
					is_regular_empire = yes
				}
			}
			if = {		# Test
				limit = {
					from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
				}
				custom_tooltip = {
					text = TEC_TEMP_ASSIMILATION_REGULAR
				}
			}	
			if = {		# Machine pop - Robot Assimilation
				limit = {
					from = {	# organic hives don't use robots at all
						tec_is_biohive = no
					}
					has_trait = trait_machine_unit
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_MACHINEPOP
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_ROBOTIC_CRAFTED_SPECIES
					fail_text = TEC_MACHINE_INTO_ROBOTS_REQUIRE_TECH
					from = {
						has_technology = tech_tec_machine_assimilation
					}
					has_trait = trait_machine_unit
				}
			}
			else_if = {	# Robot pop - Robot Consolidation
				limit = {
					has_trait = trait_mechanical
					NOT = {
						has_species_flag = mechanical_species@from
					}
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_ROBOT
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_ROBOTIC_CRAFTED_SPECIES
					from = {
						has_technology = tech_tec_machine_assimilation
					}
					has_trait = trait_mechanical
				}
			}
			else_if = {
				limit = {
					has_trait = trait_mechanical
					has_species_flag = mechanical_species@from
				}
				custom_tooltip = {
					fail_text = TEC_MAIN_ROBOT_CANT_BE_ASSIMILATED
					from = {
						has_technology = tech_tec_machine_assimilation
					}
					has_trait = trait_mechanical
					NOT = {
						has_species_flag = mechanical_species@from
					}
				}
			}
			else_if = {	# Hivemind trait de-assimilation
				limit = {
					has_trait = trait_hive_mind
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_DEHIVE
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_LOSE_HIVE_TRAIT
					fail_text = TEC_HIVEPOPS_REQUIRE_BIO
					from = {
						OR = {
							has_technology = tech_tec_hive_deassimilation
							OR = {
								has_country_flag = can_add_advanced_traits
								has_technology = tech_tec_hive_deassimilation
							}
							has_country_flag = tec_cybernetic_t1_assimilation
							has_country_flag = tec_cybernetic_t2_assimilation
							has_country_flag = tec_psionic_assimilation
							has_ascension_perk = ap_tec_biopsionic
							has_ascension_perk = ap_tec_cyberpsionic
							has_country_flag = tec_replicant_assimilation
						}
					}
					has_trait = trait_hive_mind
				}
			}
			else_if = {	# Full organic assimilation
				limit = {
					from = {
						OR = {
							has_country_flag = tec_biological_assimilation			# Convert into themselves
							has_country_flag = tec_hive_biological_assimilation
							has_country_flag = tec_biopsionic_assimilation
							has_country_flag = tec_replicant_assimilation
							has_country_flag = tec_ethereal_assimilation
						}
					}
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_FULLORGC
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_MAIN_SPECIES
					fail_text = TEC_HIVEPOPS_HIVE_BIO
					from = {
						OR = {
							has_ascension_perk = ap_tec_genetic_perfection
						}
					}
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
			}
			else_if = {	# Cybernetic assimilation
				limit = {
					from = {
						OR = {
							has_country_flag = tec_cybernetic_t1_assimilation
							has_country_flag = tec_cybernetic_t2_assimilation
						}
						NOR = {
							has_ascension_perk = ap_tec_cyberpsionic
							has_ascension_perk = ap_tec_replicant
						}
					}
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
				if = {	# checker
					limit = {
						from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_CIB
					}
				}
				custom_tooltip = {
					fail_text = TEC_CYBORGS_MUST_BE_ORGANIC
					NOR = {
						AND = {
							from = {
								has_country_flag = tec_cybernetic_t1_assimilation
								NOT = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
							OR = {
								has_trait = trait_cybernetic
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								has_trait = @trait_tec_replicant_standard
							}
						}
						AND = {
							from = {
								has_country_flag = tec_cybernetic_t2_assimilation
							}
							OR = {
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								has_trait = @trait_tec_replicant_standard
							}
						}
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_GAIN_CYBERNETIC_TRAIT
					fail_text = TEC_CYBORGS_CANT_BE_CYBORGD
					OR = {
						NAND = {
							from = {
								has_country_flag = tec_cybernetic_t1_assimilation
								NOT = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
							}
							OR = {
								has_trait = trait_cybernetic
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								has_trait = @trait_tec_replicant_standard
							}
						}
						NAND = {
							from = {
								has_country_flag = tec_cybernetic_t2_assimilation
							}
							OR = {
								has_trait = @trait_tec_advanced_cyborg
								has_trait = @trait_tec_cyberpsionic
								has_trait = @trait_tec_replicant_standard
							}
						}
					}
					
				}
			}
			else_if = {	# Synthetic Assimilation
				limit = {
					from = {
						OR = {
							has_country_flag = synthetic_empire
							has_country_flag = tec_synthetic_assimilation
						}
					}
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_SYNTHETICS
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_MAIN_SPECIES_SYNTH
					fail_text = SYNTH_SPECIES_MUST_BE_ORGANIC
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
			}
			else_if = {
				limit = {
					from = {
						OR = {
							has_country_flag = synthetic_empire
							has_country_flag = tec_synthetic_assimilation
						}
					}
					OR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
					NOT = {
						has_species_flag = mechanical_species@from
					}
				}
				custom_tooltip = {
					text = TEC_TEMP_ASSIMILATION_SYNTHS_2
					from = {
						has_country_flag = tec_test_assimilations
					}
				}
				custom_tooltip = {
					text = TEC_POP_WILL_CONVERT_INTO_MAIN_SPECIES_SYNTH
					fail_text = TEC_SYNTHS_MECHANIC_CONVERSION
					OR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
					NOT = {
						has_species_flag = mechanical_species@from
					}
				}
			}
			else_if = {	# Psionic Assimilation
				limit = {
					from = {
						has_country_flag = tec_psionic_assimilation
					}
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_PSIONIC
					}
				}
				custom_tooltip = { # crafted species cant transcend
					fail_text = TEC_CRAFTED_SPECIES_CANT_BE_PSIONIC
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit

						has_trait = @trait_tec_bioservant
					}
				}
				custom_tooltip = { # species must be organic to transcend
					fail_text = TRANSCENDING_SPECIES_MUST_BE_ORGANIC
					is_robotic_species = no
					NOT = {
						has_trait = trait_cybernetic 
					}
				}
				custom_tooltip = { # species already has psionic trait
					fail_text = TRANSCENDING_SPECIES_IS_ALREADY_PSIONIC
					NOT = {
						has_trait = trait_psionic 
					}
				}
			}
			else_if = {	# Replicant Assimilation
				limit = {
					from = {
						has_ascension_perk = ap_tec_replicant
						has_country_flag = tec_replicant_assimilation
					}
				}
				if = {	# checker
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_REPLICANT
					}
				}
				custom_tooltip = {
					fail_text = TEC_CAN_ONLY_ASSIMILATE_NON_REPLICANTS
					if = {
						limit = {
							from = {
								has_policy_flag = tec_replicant_full_assimilation
							}
						}
						OR = {
							NOT = {
								has_trait = @trait_tec_replicant_standard
							}
							has_trait = @trait_tec_replicant_standard
						}
					}
					else = {
						NOT = {
							has_trait = @trait_tec_replicant_standard
						}
					}
				}

				
			}
			else_if = {	# Cyberpsio Assimilation
				limit = {
					from = {
						has_ascension_perk = ap_tec_cyberpsionic
						OR = {
							has_country_flag = tec_u_cp_power
							has_country_flag = tec_u_cp_equilibrium
							has_country_flag = tec_u_cp_control
						}
					}
					NOR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
				if = {	# checker
					limit = {
						from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_CIBPSIO
					}
				}
				custom_tooltip = { # crafted species cant transcend
					fail_text = TEC_CRAFTED_SPECIES_CANT_BE_PSIONIC
					NOR = {
						is_robotic_species = yes
						tec_is_bioservant = yes
					}
				}
				custom_tooltip = {
					fail_text = TEC_PSICYBORGS_MUST_BE_ORGANIC
					is_robotic_species = no
				}
				custom_tooltip = {
					text = TEC_POP_WILL_GAIN_CYBERNETIC_AND_PSIONIC_TRAIT
					fail_text = TEC_PSICYBORGS_CANT_BE_CYBORGD
					NOT = {
						has_trait = @trait_tec_cyberpsionic
					}
				}
			}
			else_if = { # Pure of form Assimilation
				limit = {
					from = {
						has_ascension_perk = ap_tec_biopsionic
						OR = {
							has_country_flag = tec_u_pure_embroided
							has_country_flag = tec_u_pure_brain
						}
					}
				}
				if = {	# checker
					limit = {
						from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_PUREOFFORM
					}
				}
				custom_tooltip = { # crafted species cant transcend
					fail_text = TEC_CRAFTED_SPECIES_CANT_BE_PSIONIC
					NOR = {
						is_robotic_species = yes
						tec_is_bioservant = yes
					}
				}
				custom_tooltip = { # species must be organic to transcend
					fail_text = TRANSCENDING_SPECIES_MUST_BE_ORGANIC
					is_robotic_species = no
				}

				custom_tooltip = { # species are already pure of form
					text = TEC_POP_WILL_GAIN_PUREFORM_TRAIT
					fail_text = TRANSCENDING_SPECIES_ALREADY_PUREFORM
					NOT = {
						has_trait = @trait_tec_biopsionic
					}
				}
				custom_tooltip = { # species already has psionic trait
					fail_text = TEC_HIGHER_PSIONIC_POTENTIAL
					NOT = {
						has_trait = trait_psionic
					}
				}
			}
			else = {	# checker
				if = {	
					limit = {
						from = {
						OR = {
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_FAILED
					}
				}
				custom_tooltip = {
					fail_text = TEC_FAILED_TO_DETECT_ASSIMILATION
					always = no
				}
			}
		}
	}
	ai_will_do = {
		factor = 100
		modifier = {	# Prevents ais from autoassimilating themselves
			factor = 0
			is_exact_same_species = from
		}
		modifier = {
			factor = 0
			from = {
				is_homicidal = yes
			}
		}
		modifier = {	# Prevents ais from autoassimilating at start
			factor = 0
			from = {
				is_ai = yes
			}
			days_passed < 5
		}
		modifier = {
			factor = 10
			from = {
				OR = {
					has_valid_civic = civic_machine_assimilator		
				}
			}
		}
	}
}

citizenship_organic_trophy = {	
	new_pop_weight = 0.5

	potential = {
		host_has_dlc = "Synthetic Dawn Story Pack"
		exists = from
		from = {
			tec_is_servitor_gestalt = yes
		}
	}
	
	allow = {
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = "disconnected_machine_pops_kill_themselves_citizenship"
			is_disconnected_machine_pop = no
		}
		custom_tooltip = {
			fail_text = "tec_unworthy_biopop_citizenship"
			NOT = {
				AND = {
					from = {
						has_ethic = ethic_gestalt_apathy
					}
					NOT = {
						has_species_flag = tec_original_biotrophy_@from	
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = not_organic
			NOR = {
				has_trait = trait_mechanical
				has_trait = trait_machine_unit
			}
		}
		custom_tooltip = {
			fail_text = no_hive_trophy
			NOT = {
				has_trait = trait_hive_mind
			}
		}
	}
	ai_will_do = {
		factor = 100		
	}
}

citizenship_limited = {
	new_pop_weight = 0.75


	triggered_pop_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		pop_happiness = -0.1
		pop_amenities_usage_mult = -0.25
		pop_political_power = -0.5
	}


	potential = {
		exists = from
		from = {
			OR = {
				is_regular_empire = yes
				AND = {
					is_gestalt = yes
					has_ethic = ethic_gestalt_empathy
				}
			}
			
		}
		NOR = {
			has_trait = trait_machine_unit
			is_shackled_robot_species_rights = yes
			is_shackled_bioservant_species_rights = yes
		}


	}

	allow = {
		custom_tooltip = {
			fail_text = "HIVE_MIND_SPECIES_CITIZENS_ONLY"
			OR = {
				NOT = {
					from = {
						is_hive_empire = yes
					}
				}
				has_trait = trait_hive_mind
				AND = {
					NOT = {
						has_trait = trait_hive_mind
					}
					from = {
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_MAIN_SPECIES_ALWAYS_CITIZEN"
			NAND = {
				from = { is_hive_empire = yes }
				is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = "disconnected_machine_pops_kill_themselves_citizenship"
			is_disconnected_machine_pop = no
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = yes_service_yes_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				NOT = { has_military_service_type = { type = military_service_full country = from } }
			}
		}
	}
	ai_will_do = {
		factor = 3
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				has_ai_personality_behaviour = multispecies
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = no
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
	}
}

citizenship_slavery = {
	is_slavery = yes

	in_breach_of = {
		{
			key = resolution_greatergood_balance_in_the_middle
		}
		{
			key = resolution_greatergood_universal_prosperity_mandate
		}
	}

	potential = {
		OR = {
			NAND = {
				exists = this
				OR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical				
				}
			}

			# This is done so apathic servitors can enslave other species (than the original they pamper)
			AND = {
				from = {
					has_ethic = ethic_gestalt_apathy
				}
				NOT = {
					has_species_flag = tec_original_biotrophy_@from	
				}
			}
			# Thought Harvesters
			AND = {
				from = {
					has_civic = civic_tec_hive_mindflayers
				}
				NOT = {
					is_same_value = owner_main_species
				}
			}
		}
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = "HIVE_MIND_MAIN_SPECIES_ALWAYS_CITIZEN"
			NAND = {
				from = {
					is_hive_empire = yes
					# Ceremorpsh can mental-enslave other hiveminds	
					NOT = {	has_valid_civic = civic_tec_hive_mindflayers }
				}
				has_trait = trait_hive_mind	#is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = SERVITORS_CANNOT_ENSLAVE
			from = {
				OR = {
					tec_is_servitor_gestalt = no
					AND = {
						tec_is_servitor_gestalt = yes
						has_ethic = ethic_gestalt_apathy
						prevprev = {
							NOT = {
								has_species_flag = tec_original_biotrophy_@from		
							}
						}
					}
				}
				
			}
		}
		custom_tooltip = {
			fail_text = ASSIMILATORS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_machine_assimilator }
			}
		}
		custom_tooltip = {
			fail_text = TERMINATORS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_machine_terminator }
			}
		}
		custom_tooltip = {
			fail_text = DEVOURERS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_hive_devouring_swarm }
			}
		}
		custom_tooltip = {
			fail_text = empire_xenophile
			from = {
				NOR = {
					has_ethic = ethic_gestalt_empathy
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
			}
		}

		custom_tooltip = {
			fail_text = does_not_embrace_species_slavery
			from = {
				allows_slavery = yes
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian			
					has_ethic = ethic_elitist
					has_ethic = ethic_fanatic_elitist
					has_ethic = ethic_gestalt_consciousness
					has_valid_civic = civic_slaver_guilds
					has_valid_civic = civic_indentured_assets
				}
			}
		}
		custom_tooltip = {
			fail_text = yes_service_yes_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				NOT = { has_military_service_type = { type = military_service_full country = from } }
			}
		}
	}
	ai_will_do = {
		factor = 15	
		modifier = {
			factor = 100
			from = {
				has_valid_civic = civic_tec_hive_mindflayers
			}
		}
		modifier = {
			factor = 0			
			from = {
				has_valid_ai_personality = yes
				NOT = {
					has_ai_personality_behaviour = slaver
				}
				NAND = {
					is_ai = no
					is_xenophobe = yes
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				is_authoritarian = no
				is_xenophobe = no
				is_hive_empire = no
			}
		}
		modifier = {
			factor = 0.1
			from = {
				is_galactic_community_member = yes
			}
			OR = {
				is_active_resolution = "resolution_greatergood_balance_in_the_middle"
				is_active_resolution = "resolution_greatergood_universal_prosperity_mandate"
			}
		}
	}
}

citizenship_robot_servitude = {
	is_robot_servant = yes

	potential = {
		exists = from
		from = {
			OR = {
				is_gestalt = no
				AND = {
					has_ethic = ethic_gestalt_consciousness
					is_hive_empire = yes
					tec_is_biohive = no
					tec_is_radical_hive = no
				}
			}
		}
		OR = {
			has_trait = trait_mechanical
			has_trait = @trait_tec_bioservant
		}
	}

	
	allow = {
		hidden_trigger = {
			exists = from 
		}
		from = {
			NOR = {
				has_origin = origin_tec_slavetothesystem
				has_origin = origin_tec_robosapiens
			}
		}
		if = {
			limit = {
				is_robotic_species = yes
			}
			custom_tooltip = {
				fail_text = ROBOTS_HAVE_RIGHTS
				from = {
					NOT = { has_policy_flag = ai_full_rights }
				}
			}
			custom_tooltip = {
				fail_text = ROBOTS_ARE_OUTLAWED
				from = {
					NOT = { has_policy_flag = robots_outlawed }
				}
			}
		}
		else_if = {
			limit = {
				tec_is_bioservant = yes
			}
			custom_tooltip = {
				fail_text = TEC_BIOSERVANTS_HAVE_RIGHTS
				from = {
					NOT = { has_policy_flag = bioservant_full_rights }
				}
			}
			custom_tooltip = {
				fail_text = TEC_BIOSERVANTS_ARE_OUTLAWED
				from = {
					NOT = { has_policy_flag = bioservants_outlawed }
				}
			}
		}
	}
	ai_will_do = {
		factor = 30
		modifier = {
			factor = 1000
			from = {
				has_ethic = ethic_gestalt_consciousness
				is_hive_empire = yes
				tec_is_biohive = no
				tec_is_radical_hive = no
			}
			OR = {
				has_trait = trait_mechanical
				has_trait = @trait_tec_bioservant
			}
		}
	}
}

citizenship_purge = {
	new_pop_weight = 0.0

	is_purge = yes
	
	potential = {
		exists = from
		OR = {
			tec_is_servitor_gestalt = no
			from = {
				tec_is_servitor_gestalt = yes
				has_ethic = ethic_gestalt_apathy
			}
		}
		if = {
			limit = { is_robotic_species = yes }
			from = {
				has_policy_flag = robots_outlawed
			}
		}
		# Prev effect
			#OR = {
			#	NOT = { has_trait = trait_mechanical }
			#	from = { has_policy_flag = robots_outlawed }
			#	AND = {
			#		from = { is_hive_empire = yes }
			#		is_robotic_species = yes
			#	}
			#}
		# /
	}

	allow = {
		hidden_trigger = { exists = from }
			#custom_tooltip = {
			#	fail_text = "HIVE_MIND_MAIN_SPECIES_ALWAYS_CITIZEN"
			#	NAND = {
			#		from = { is_hive_empire = yes }
			#		has_trait = trait_hive_mind
			#	}
			#}
		
		if = {
			limit = { is_lonely_hive_mind_pop = yes }
			hidden_trigger = { always = yes }
		}
		else = {
			custom_tooltip = {
				fail_text = same_species_disallowed
				NOT = { is_same_species = from }
			}
			if = {
				limit = {
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				custom_tooltip = {
					fail_text = PURGING_NOT_ALLOWED
					OR = {
						from = {
							allows_purge = yes 
						}
						AND = {
							NOT = {
								has_species_flag = tec_original_biotrophy_@from	
							}
							from = {
								tec_is_servitor_gestalt = yes
								has_ethic = ethic_gestalt_apathy
							}
						}
					}
				}
			}
			custom_tooltip = {
				fail_text = yes_service_yes_citizenship
				if = {
					limit = {
						from = { has_valid_civic = civic_citizen_service }
					}
					NOT = { has_military_service_type = { type = military_service_full country = from } }
				}
			}
		}
	}
			
		
	ai_will_do = {
		factor = 20
		modifier = {
			factor = 0
			has_trait = trait_machine_unit
			from = {
				is_machine_empire = yes
			}
		}
		modifier = {
			factor = 0
			has_trait = trait_mechanical
			from = {
				AND = {
					is_hive_empire = yes
					has_policy_flag = robots_allowed
				}
			}
		}
		modifier = {
			factor = 0
			has_trait = trait_mechanical
			from = {
				AND = {
					is_hive_empire = yes
					has_policy_flag = robots_allowed
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = no
				NOT = { is_hive_empire = yes }
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				NOR = {
					has_ai_personality_behaviour = purger
					AND = {
						has_ai_personality_behaviour = displacer
						if = {
							limit = {
								has_origin = origin_necrophage
							}
							is_hive_empire = yes
						}
					}
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				NOR = {
					has_ai_personality_behaviour = purger
					AND = {
						has_ai_personality_behaviour = displacer
						if = {
							limit = { has_origin = origin_necrophage }
							is_hive_empire = yes
						}
					}
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				is_machine_empire = yes
				has_government = gov_machine_industrial
			}
		}
		modifier = {
			factor = 0
			from = {
				is_gestalt = yes
				has_ethic = ethic_gestalt_empathy
			}
		}
		modifier = {
			factor = 0
			from = {
				is_hive_empire = yes
				NOT = { has_valid_civic = civic_hive_devouring_swarm }
				NOT = {
					has_origin = origin_necrophage
				}
				OR = {
					has_valid_civic = civic_hive_one_mind
					has_valid_civic = civic_hive_subsumed_will
					root = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				OR = {
					has_origin = origin_tec_bioservant
					has_origin = origin_syncretic_evolution
					has_valid_civic = civic_slave_race		
					has_valid_civic = civic_tec_se_symbiotic_race
				}
			}
		}
		modifier = {
			factor = 10
			from = {
				is_ai = yes
				has_ascension_perk = ap_become_the_crisis
			}
		}
		modifier = {
			add = 1000
			not = { has_species_flag = syncretic_species@from }
			is_robotic = no
			from = {
				has_origin = origin_necrophage
				is_xenophobe = yes
			}
		}
	}
}

citizenship_purge_machine = {
	new_pop_weight = 0.0

	is_purge = yes
	
	potential = {
		exists = from
		from = {
			is_machine_empire = yes
		}
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
		}
		OR = {
			from = {
				NOR = {
					tec_is_servitor_gestalt = yes
					has_ethic = ethic_gestalt_empathy
				}
			}
			AND = {
				is_lonely_hive_mind_pop = yes
				from = {
					OR = {
						tec_is_servitor_gestalt = yes
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			AND = {
				NOT = {
					has_species_flag = tec_original_biotrophy_@from	
				}
				from = {
					tec_is_servitor_gestalt = yes
					has_ethic = ethic_gestalt_apathy
				}
			}
		}
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
	}
	ai_will_do = {
		factor = 0
		modifier = {
			factor = 0
			from = {
				is_gestalt = yes
				has_ethic = ethic_gestalt_empathy
			}
		}
	}
}
