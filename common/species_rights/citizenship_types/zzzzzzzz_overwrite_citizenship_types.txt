# common\species_rights\citizenship_types\zzzzzzzz_overwrite_citizenship_types.txt

# from = country
# this = species

citizenship_full = {
	is_full_citizenship = yes

	potential = {
		exists = from
		from = {
			is_machine_empire = no
		}
		#NOR = {
		#	AND = {
		#		has_trait = trait_mechanical
		#		is_shackled_robot_species_rights = yes
		#		#from = {
		#			#has_policy_flag = ai_servitude
		#		#}
		#	}
		#	AND = {
		#		has_trait = trait_tec_bioservant
		#		tec_is_shackled_bioservant_species_rights = yes
		#		#from = {
		#			#has_policy_flag = bioservant_servitude 
		#		#}
		#	}
		#}
	}

	allow = {
		hidden_trigger = { exists = from }

		custom_tooltip = {
			fail_text = "pre_sapients_citizenship"
			is_sapient = yes
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_SPECIES_CITIZENS_ONLY"
			OR = {
				from = {
					is_hive_empire = no
				}
				has_trait = trait_hive_mind
			}
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = too_alien
			if = {
				limit = {
					from = {
						NOT = { has_origin = origin_synthetic_fertility }
					}
					has_trait = trait_mechanical
				}
				OR = {
					is_same_species = from
					from = {
						AND = {
							tec_is_selective_kinship_empire = yes
							is_same_species_class = root
						}
					}
					from = {
						is_xenophobe = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = wrong_species_class
			if = {
				limit = {
					from = { tec_is_selective_kinship_empire = yes }
				}
				is_same_species_class = from
			}
		}
		custom_tooltip = {
			fail_text = no_service_no_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				has_military_service_type = { type = military_service_full country = from }
			}
		}
		custom_tooltip = {
			fail_text = ROBOTS_NO_RIGHTS
			if = {
				limit = {
					OR = {
						has_trait = trait_mechanical
						has_trait = trait_machine_unit
					}
				}
				from = {
					has_policy_flag = ai_full_rights
				}
			}
		}
		custom_tooltip = {
			fail_text = TEC_BIOSERVANTS_NO_RIGHTS
			if = {
				limit = {
					has_trait = trait_tec_bioservant
				}
				from = {
					has_policy_flag = bioservant_full_rights
				}
			}
		}
		custom_tooltip = {
			fail_text = no_bioservant_no_citizenship
			tec_is_shackled_bioservant_species_rights = no
		}
		custom_tooltip = {
			fail_text = no_synth_no_citizenship
			is_shackled_robot_species_rights = no
		}
	}
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 35
			root = {
				is_robotic_species = yes
			}
			from = {
				is_individual_machine = yes
			}
		}
	}
}

citizenship_full_machine = {
	is_full_citizenship = yes

	potential = {
		OR = {
			has_synthetic_dawn = yes
			has_machine_age_dlc = yes
		}
		exists = from
		from = { is_machine_empire = yes }
	}

	allow = {
		hidden_trigger = { exists = from }
		if = {
			limit = {
				from = { NOT = { has_valid_civic = civic_machine_assimilator } }
			}

			custom_tooltip = {
				fail_text = MACHINE_SPECIES_NOT_MACHINE
				OR = {
					has_trait = trait_mechanical
					has_trait = trait_machine_unit
					AND = {
						FROM = {
							has_ascension_perk = ap_mechromancy
						}
						tec_is_cyborg_species = yes
						has_trait = trait_zombie
					}
				}
			}
		}
		else = {
			custom_tooltip = {
				fail_text = ASSIMILATOR_SPECIES_NOT_CYBORG
				OR = {
					tec_is_cyborg_species = yes

					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
	}
	ai_will_do = {
		factor = 101
	}
}

citizenship_assimilation = {
	is_assimilation = yes

	# from = country
	# root = species
	potential = {
		OR = {
			has_synthetic_dawn = yes
			has_utopia = yes
			has_machine_age_dlc = yes
		}
		exists = this # avoid console errors, somehow invalid/inexistent species is checked lol
		exists = from
		from = { # Sorted per case
			OR = {
				AND = {	# tec_assimilation_test
					has_country_flag = tec_test_assimilations
				}
				# Hivemind block
					AND = {	# tec_assimilation_remove_hivemind
						# Species
						root = {
							is_robotic = no
							has_trait = trait_hive_mind
						}
						# Empire
						is_hive_empire = no
						is_homicidal = no
						OR = {
							has_technology = tech_tec_hive_deassimilation
							has_country_flag = can_add_advanced_traits
						}
					}
					AND = {	# tec_assimilation_add_hivemind
						# Species
						root = {
							is_robotic = no
							NOT = {
								has_trait = trait_hive_mind
							}
						}
						# Empire
						is_hive_empire = yes
						tec_is_cyberhive = no
						is_homicidal = no
						OR = {
							has_country_flag = can_add_advanced_traits
							has_technology = tech_tec_hive_assimilation
						}
						
					}
				# /
				# Robot block
					AND = {	# tec_assimilation_unify_robots
						# Species
						root = {
							is_robotic = yes
							NOT = {
								has_species_flag = mechanical_species@from
							}
						}
						# Empire
						is_machine_empire = no
						OR = {
							has_technology = tech_tec_machine_assimilation
							has_country_flag = tec_synthetic_assimilation
							has_country_flag = synth_assimilation
						}
					}
					AND = {	# tec_assimilation_unify_machines
						# Species
						root = {
							is_robotic = yes
							NOR = {
								is_same_species = from
								is_subspecies = from
							}
						}
						# Empire
						is_machine_empire = yes
						OR = {
							has_technology = tech_tec_robot_assimilation
							has_active_tradition = tr_synthetics_adopt
							has_active_tradition = tr_synthetics_adopt_machine
							has_country_flag = tec_synthetic_assimilation
						}
					}
				# /
				# Cybernetic block
					AND = {	# tec_assimilation_cybernetic_t1
						# Species
						root = {
							is_robotic = no
							tec_is_cyborg_species = no
						}
						# Empire
						is_gestalt = no
						OR = {
							has_tradition = tr_cybernetics_transubstantiation_synthesis
							has_country_flag = tec_cybernetic_t1_assimilation
							has_country_flag = cyborg_empire
						}
					}
					AND = {	# tec_assimilation_cybernetic_t1_gestalt
						# Species
						root = {
							is_robotic = no
							tec_is_cyborg_species = no
						}
						# Empire
						is_gestalt = yes
						OR = {
							has_tradition = tr_cybernetics_transubstantiation_synthesis
							has_country_flag = tec_cybernetic_t1_assimilation
							has_country_flag = cyborg_empire
							tec_is_cyberhive = yes
							has_valid_civic = civic_machine_assimilator
						}
					}
					#AND = {	# tec_assimilation_cybernetic_t1_upgrade
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_cybernetic_t1_upgrade_gestalt
						# Species

						# Empire
						
					#}
					AND = {	# tec_assimilation_cybernetic_t2
						# Species
						root = {
							is_robotic = no
							tec_is_cyborg_species = no
							NOT = {
								has_trait = trait_tec_superior_cybernetics_main
							}
						}
						# Empire
						is_gestalt = no
						has_country_flag = tec_cybernetic_t2_assimilation
					}
					AND = {	# tec_assimilation_cybernetic_t2_gestalt
						# Species
						root = {
							is_robotic = no
							tec_is_cyborg_species = no
							NOT = {
								has_trait = trait_tec_superior_cybernetics_main
							}
						}
						# Empire
						is_gestalt = yes
						has_country_flag = tec_cybernetic_t2_assimilation
					}
					AND = {	# tec_assimilation_cybernetic_t2_upgrade
						# Species
						root = {
							tec_is_cyborg_species = yes
							tec_is_replicant_species = no
							NOT = {
								has_trait = trait_tec_superior_cybernetics_main
							}
						}
						# Empire
						is_gestalt = no
						has_country_flag = tec_cybernetic_t2_assimilation
					}
					AND = {	# tec_assimilation_cybernetic_t2_upgrade_gestalt
						# Species
						root = {
							tec_is_cyborg_species = yes
							tec_is_replicant_species = no
							NOT = {
								has_trait = trait_tec_superior_cybernetics_main
							}
						}
						# Empire
						is_gestalt = yes
						has_country_flag = tec_cybernetic_t2_assimilation
					}
					#AND = {	# tec_assimilation_cybernetic_t2_total
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_cybernetic_t2_digitalization
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_cybernetic_t2_merge_robot
						# Species

						# Empire
						
					#}
				# /
				# Synth/Mechanical Assimilation
					AND = {	# tec_assimilation_synthetic_total
						# Species
						# Empire
						is_gestalt = no
						OR = {
							has_country_flag = tec_synthetic_assimilation
							has_country_flag = synth_assimilation
						}
					}
					AND = {	# tec_assimilation_synthetic_total_machine
						# Species
						# Empire
						is_gestalt = yes
						OR = {
							has_country_flag = tec_synthetic_assimilation
							has_country_flag = synth_assimilation
						}
					}
					#AND = {	# tec_assimilation_synthetic_digitalization
						# Species

						# Empire
						
					#}
				# /
				# Psionic
					AND = {	# tec_assimilation_psionic
						# Species
						root = {
							is_robotic = no
						}
						# Empire
						has_country_flag = tec_psionic_assimilation
					}
					#AND = {	# tec_assimilation_psionic_ascend
						# Species

						# Empire
					#}
				# /
				# Genetic
					AND = {	# tec_assimilation_genetic_total
						# Species
						root = {
							is_robotic = no
						}
						# Empire
						#has_ascension_perk = ap_tec_genetic_perfection
						has_country_flag = tec_genetic_assimilation
					}
					#AND = {	# tec_assimilation_genetic_add
						# Species

						# Empire
						
					#}
				# /
				# Biopsionic
					AND = {	# tec_assimilation_biopsionic_total
						# Species
						root = {
							is_robotic = no
						}
						# Empire
						#has_ascension_perk = ap_tec_biopsionic
						has_country_flag = tec_biopsionic_assimilation
					}
					#AND = {	# tec_assimilation_biopsionic_add
						# Species

						# Empire
					#}
				# /
				# Cyberpsionic Assimilation
					AND = {	# tec_assimilation_cyberpsionic
						# Species
						root = {
							is_robotic = no
							NOR = {
								has_trait = trait_tec_cyberpsionic_main
								AND = {
									tec_is_replicant_species = yes
									tec_is_any_psionic_species = yes
								}
							}
						}
						# Empire
						#has_ascension_perk = ap_tec_cyberpsionic
						has_country_flag = tec_cyberpsionic_assimilation
					}
					AND = {	# tec_assimilation_cyberpsionic_upgrade
						# Species
						root = {
							tec_is_cyborg_species_no_repl = yes
							is_robotic = no
							NOT = {
								has_trait = trait_tec_cyberpsionic_main
							}
						}
						# Empire
						#has_ascension_perk = ap_tec_cyberpsionic
						has_country_flag = tec_cyberpsionic_assimilation
					}
				# /
				# Replicant Assimilation
					AND = {	# tec_assimilation_replicant_total
						# Species
						# Empire
						has_country_flag = tec_replicant_assimilation
					}
					#AND = {	# tec_assimilation_replicant_add
						# Species

						# Empire
						
					#}
				# /
				# Biopath Assimilation
					#AND = {	# tec_assimilation_biological_total
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_biological_add
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_biological_decompose
						# Species

						# Empire
						
					#}
				# /
				# Psychic Assimilation
					#AND = {	# tec_assimilation_psychic
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_psychic_hivemind
						# Species

						# Empire
						
					#}
				# /
				# Bioware Assimilation
					#AND = {	# tec_assimilation_bioware
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_bioware_gestalt
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_bioware_upgrade
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_bioware_upgrade_gestalt
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_bioware_total
						# Species

						# Empire
						
					#}
				# /
				# Ethereal Assimilation
					#AND = {	# tec_assimilation_ethereal_total
						# Species

						# Empire
						
					#}
					#AND = {	# tec_assimilation_ethereal_energy
						# Species

						# Empire
						
					#}
				# /
			}
		}

		if = {	# OLD CODE
			limit = {
				always = no
			}
			OR = {
				host_has_dlc = "Synthetic Dawn Story Pack"
				host_has_dlc = "Utopia"
			}
			exists = from
			
			NOT = {	is_exact_same_species = from }	# Prevents main species from autoassimilating
			is_sapient = yes						# avoid presapients
			from = {								# Exceptions
				OR = {
					AND = {
						OR = { # Purifier exceptions - Total Assimilation
							NOT = {
								has_civic = civic_fanatic_purifiers 
							}
							AND = {
								has_civic = civic_fanatic_purifiers
								OR = {	# Total Assimilations
									has_country_flag = tec_replicant_assimilation
									has_country_flag = tec_genetic_assimilation
									has_country_flag = tec_synthetic_assimilation
									has_country_flag = tec_total_assimilation
								}
							}
						}
						OR = { # Assimilation sort
							AND = {	# Machine into robots Assimilation
								root = {
									has_trait = trait_machine_unit
								}
								OR = {
									has_technology = tech_tec_machine_assimilation
									has_country_flag = tec_machine_into_robot_assimilation
									has_country_flag = tec_robot_total_assimilation
								}
							}
							AND = {	# Robots into Machine Assimilation
								root = {
									has_trait = trait_mechanical
								}
								OR = {
									AND = { # Machines convert all robots into machines
										is_machine_empire = yes
										OR = {
											has_technology = tech_tec_robot_assimilation
											has_country_flag = tec_robot_into_machine_assimilation
										}
									}
									AND = {	# Robots into robot main frame
										is_machine_empire = no
										OR = {
											has_technology = tech_tec_machine_assimilation
											has_country_flag = tec_machine_into_robot_assimilation
											has_country_flag = tec_robot_total_assimilation
										}
										root = {
											NOT = { # Was @from, just in case
												has_species_flag = mechanical_species@prev
											}
										}
									}
								}
							}
							AND = { # Hive trait Deassimilation
								OR = {
									# Note: this flag is unlocked by the genetic ap
									has_country_flag = can_add_advanced_traits
									has_country_flag = tec_hive_trait_deassimilation
									has_technology = tech_tec_hive_deassimilation
								}
								NOT = {
									has_ethic = ethic_gestalt_consciousness 
								}
								root = {
									has_trait = trait_hive_mind
									NOR = {
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							AND = { # Hive trait Assimilation
								# Note - Hiveminds will be able to assimilate without aps, just with tech, but for organics
								is_hive_empire = yes
								OR = {
									has_country_flag = can_add_advanced_traits
									has_technology = tech_tec_hive_assimilation
									has_country_flag = tec_hive_trait_assimilation
								}
								NOT = { # swarms only devours
									has_civic = civic_hive_devouring_swarm 
								}
								root = {
									NOR = {
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
										has_trait = trait_hive_mind
									}
								}
							}
							AND = { # Machine Cyborg Assimilation
								is_machine_empire = yes
								has_civic = civic_machine_assimilator
								root = {
									NOR = {
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							AND = {	# Regular Cyborg Assimilation
								has_country_flag = tec_cybernetic_t1_assimilation
								root = {
									NOR = {
										has_trait = trait_cybernetic
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							AND = {	# Adv Cyborg Assimilation
								has_country_flag = tec_cybernetic_t2_assimilation
								root = {
									NOR = {
										has_trait = trait_tec_superior_cybernetics_main
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							AND = { # Psionic Assimilation
								has_country_flag = tec_psionic_assimilation
								root = {
									NOR = {
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							AND = { # Cyberpsio Assimilation
								has_country_flag = tec_cyberpsionic_assimilation
								root = {
									NOR = {
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							AND = { # Biopsio Assimilation
								has_country_flag = tec_genetic_assimilation
								root = {
									NOR = {
										has_trait = trait_tec_biopsionic_main
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							AND = { # Biological Assimilation (total organic)
								has_country_flag = tec_genetic_assimilation
								root = {
									NOR = {
										has_trait = trait_mechanical
										has_trait = trait_machine_unit
									}
								}
							}
							# Synthetic Assimilation (total)
							has_country_flag = tec_synthetic_assimilation
							# Replicant Assimilation (total)
							has_country_flag = tec_replicant_assimilation
							# Replicant Assimilation (total)
							has_country_flag = tec_total_assimilation
						}
					}
					has_country_flag = tec_test_assimilations
				}
			}
		}
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = MUST_NOT_BE_DOMINANT_SPECIES
			NOT = { is_exact_same_species = from }
		}
		custom_tooltip = {
			fail_text = pre_sapients_citizenship
			is_sapient = yes
		}
		# Sorted per playstyle
			if = {	# Debug
				limit = {
					OR = {
						has_global_flag = tec_test_assimilations
						from = {
							has_country_flag = tec_test_assimilations
						}
					}
				}
				always = yes
			}
			else_if = {	# Machine Empires
				limit = {
					from = { is_machine_empire = yes }
				}
				if = {	# Debug
					limit = {
						from = {
							has_country_flag = tec_test_assimilations_country
						}
					}
					always = yes
				}

				else_if = {	# Fallback Total Assimilation (total)
					limit = {
						from = {
							tec_has_all_species_total_assimilation = yes
						}
						if = {	# Do not assimilate the main servitor biotrophies
							limit = {
								from = {
									has_valid_civic = civic_machine_servitor
								}
							}
							NOT = {
								has_species_flag = tec_original_biotrophy_@from	
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						}
						if = {
							limit = { 
								from = { has_country_flag = tec_digitalization_assimilation }
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_CAN_BE_DIGITALIZED
							}
						}
						if = {
							limit = { 
								from = { has_country_flag = tec_consumergoods_assimilation }
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_CAN_BE_CONVERTED_INTO_CG
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Robot Assimilation (total)
					limit = {
						is_robotic = yes
						from = {
							OR = {
								has_technology = tech_tec_robot_assimilation
								has_country_flag = tec_robot_total_assimilation
								has_active_tradition = tr_synthetics_adopt_machine
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_CONVERT_INTO_MAIN_SPECIES_MACHINE
						}
					# /
					# Exceptions
						if = {
							limit = {
								from = {
									has_valid_civic = civic_machine_servitor
								}
							}
							custom_tooltip = { # Servitors love their biotrophies
								fail_text = TEC_ASSIMILATION_INVALID_SERVITOR_LOVE_BIO
								NOT = {
									has_species_flag = tec_original_biotrophy_@from	
								}
							}
						}
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Organic Assimilation (total)
					limit = {
						is_robotic = no
						from = {
							tec_has_biological_total_assimilation = yes
						}
						if = {	# Do not assimilate the main servitor biotrophies
							limit = {
								from = {
									has_valid_civic = civic_machine_servitor
									has_ethic = ethic_gestalt_apathy
								}
							}
							NOT = {
								has_species_flag = tec_original_biotrophy_@from	
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Adv Cybernetic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_superior_cybernetics_main
						#}
						from = {
							has_country_flag = tec_cybernetic_t2_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								tec_is_basic_cybernetics_main_species = yes
							}
							custom_tooltip = {	# Cyborg is upgraded
								text = TEC_ASSIMILATION_WILL_UPGRADE_CYBERNETIC_TRAIT
							}
						}
						else = {
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_GAIN_ADVANCED_CYBERNETIC_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_ADVANCED_CYBORG
								NOT = {
									has_trait = trait_tec_superior_cybernetics_main
								}
								tec_is_replicant_species = no
							}
						}
						if = {
							limit = {
								from = { tec_is_zombie_empire = yes }
							}
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_BECOME_ZOMBIE
								fail_text = TEC_ASSIMILATION_ALREADY_ZOMBIE
								NOT = {
									has_trait = trait_zombie
								}
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# cybernetic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_cybernetic
						#}
						from = {
							OR = {
								has_country_flag = tec_cybernetic_t1_assimilation
								has_valid_civic = civic_machine_assimilator
							}
						}
					}
					# Trait gain
						custom_tooltip = {	# Already cyborg
							text = TEC_ASSIMILATION_WILL_GAIN_CYBERNETIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
							tec_is_cyborg_species = no
						}
						if = {
							limit = {
								from = { tec_is_zombie_empire = yes }
							}
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_BECOME_ZOMBIE
								fail_text = TEC_ASSIMILATION_ALREADY_ZOMBIE
								NOT = {
									has_trait = trait_zombie
								}
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Hivemind deassimilation (remove)
					limit = {
						is_robotic = no
						has_trait = trait_hive_mind
						from = {
							OR = {
								has_technology = tech_tec_hive_deassimilation
								has_country_flag = can_add_advanced_traits
								# debug
								has_country_flag = tec_hive_biological_assimilation_debug
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				#else_if = {	# TO DO Bioware Assimilation
				#}
				else = {
					custom_tooltip_fail = {
						text = TEC_INVALID_ASSIMILATION
						always = no
					}
				}
			}
			else_if = {	# Hive empires
				limit = {
					from = { is_hive_empire = yes }
				}
				if = {	# Debug
					limit = {
						from = {
							has_country_flag = tec_test_assimilations_country
						}
					}
					always = yes
				}
				else_if = {	# Genetic perfection Assimilation (dual)
					limit = {
						is_robotic = no
						from = {
							has_country_flag = tec_genetic_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								OR = {
									tec_has_genetic_main_traits = yes
									tec_is_replicant_species = yes
								}
							}
							custom_tooltip = {	# Can convert into main species
								text = TEC_ASSIMILATION_GENEPERF_CONVERT_INTO_MAIN_SPECIES
							}
						}
						else = {
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_GAIN_GENEPERFECTION_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_GENEPERFECTION
								tec_has_genetic_main_traits = no
							}
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						#if = {	# Cyb removal
						#	limit = { tec_is_cyborg_species_no_repl = yes }
						#	custom_tooltip = {
						#		text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
						#	}
						#}
						if = {	# biogenic
							limit = { tec_is_biogenic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOGENIC_TRAIT
							}
						}
						#if = {	# Bioware removal
						#	limit = { tec_is_bioware_species = yes }
						#	custom_tooltip = {
						#		text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
						#	}
						#}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Biosionic Assimilation (dual)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_biopsionic_main
						#}
						from = {
							has_country_flag = tec_biopsionic_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_GAIN_BIOPSIONIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_BIOPSIONIC
							NOT = {
								has_trait = trait_tec_biopsionic_main
							}
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						if = {	# Psionic removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOT = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Biogenic Assimilation (dual)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_biogenic_main
						#}
						from = {
							has_country_flag = tec_biogenic_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								OR = {
									has_trait = trait_tec_biogenic_main
									tec_is_replicant_species = yes
								}
							}
							custom_tooltip = {	# Can convert into main species
								text = TEC_ASSIMILATION_GENEPERF_CONVERT_INTO_MAIN_SPECIES
							}
						}
						else = {
							custom_tooltip = {	# Already Biogenic
								text = TEC_ASSIMILATION_WILL_GAIN_BIOGENIC_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_BIOGENIC
								NOT = {
									has_trait = trait_tec_biogenic_main
								}
							}
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
						custom_tooltip = {	# Xenocytes
							text = TEC_ASSIMILATION_BIOGENIC_XENOCYTES
						}
					# /
					# Trait removal
						if = {	# Genetic perfection removal
							limit = {
								tec_has_genetic_main_traits = yes
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_GENEPERFECTION
							}
						}
						if = {	# Cyb removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOT = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Total Assimilation (total)
					limit = {
						from = {
							tec_has_all_species_total_assimilation = yes
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Robot Assimilation (total)
					limit = {
						is_robotic = yes
						NOT = {
							has_species_flag = mechanical_species@from
						}
						from = {
							OR = {
								has_technology = tech_tec_machine_assimilation
								has_country_flag = tec_robot_total_assimilation
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_ROBOT_CRAFTED_SPECIES
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Organic Assimilation (total)
					limit = {
						is_robotic = no
						from = {
							tec_has_biological_total_assimilation = yes
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Adv Cybernetic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_superior_cybernetics_main
						#}
						from = {
							has_country_flag = tec_cybernetic_t2_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								tec_is_basic_cybernetics_main_species = yes
							}
							custom_tooltip = {	# Cyborg is upgraded
								text = TEC_ASSIMILATION_WILL_UPGRADE_CYBERNETIC_TRAIT
							}
						}
						else = {
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_GAIN_ADVANCED_CYBERNETIC_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_ADVANCED_CYBORG
								NOT = {
									has_trait = trait_tec_superior_cybernetics_main
								}
								tec_is_replicant_species = no
							}
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# cybernetic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_cybernetic
						#}
						from = {
							OR = {
								has_country_flag = tec_cybernetic_t1_assimilation
								tec_is_cyberhive = yes
							}
						}
					}
					# Trait gain
						custom_tooltip = {	# Already cyborg
							text = TEC_ASSIMILATION_WILL_GAIN_CYBERNETIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
							tec_is_cyborg_species = no
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Psionic entanglement Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_hive_psionic_entanglement
						#}
						from = {
							has_country_flag = tec_psionic_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {	# No cyborg
							text = TEC_ASSIMILATION_WILL_GAIN_PSIONIC_TRAIT_HIVE
							fail_text = TEC_ASSIMILATION_ALREADY_PSIONIC_HIVE
							NOT = {
								has_trait = trait_tec_hive_psionic_entanglement
							}
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						if = {	# Psionic removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOT = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Cyberpsionic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_cyberpsionic_main
						#}
						from = {
							has_country_flag = tec_cyberpsionic_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								tec_is_basic_cybernetics_main_species = yes
							}
							custom_tooltip = {	# Cyborg is upgraded
								text = TEC_ASSIMILATION_WILL_UPGRADE_CYBERNETIC_TRAIT
							}
						}
						else = {
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_GAIN_CYBERPSIONIC_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
								NOT = {
									has_trait = trait_tec_cyberpsionic_main
								}
								tec_is_replicant_species = no
							}
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOR = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Psychic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_psychic_main
						#}
						from = {
							has_country_flag = tec_psychic_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_GAIN_PSYCHIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_PSYCHIC
							NOT = {
								has_trait = trait_tec_psychic_main
							}
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Bioware Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_bioware_main
						#}
						from = {
							has_country_flag = tec_bioware_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {	# Already cyborg
							text = TEC_ASSIMILATION_WILL_GAIN_BIOWARE_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_BIOWARE
							NOT = {
								has_trait = trait_tec_bioware_main
							}
							tec_is_replicant_species = no
						}
						if = {	# Hivemind Integration
							limit = {
								NOT = {
									has_trait = trait_hive_mind 
								}
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							}
						}
					# /
					# Trait removal
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Cyb removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Hivemind Assimilation (add)
					limit = {
						is_robotic = no
						NOT = {
							has_trait = trait_hive_mind
						}
						from = {
							OR = {
								has_country_flag = can_add_advanced_traits
								has_technology = tech_tec_hive_assimilation
								has_country_flag = tec_hive_trait_assimilation
								# debug
								has_country_flag = tec_hive_biological_assimilation_debug
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
							fail_text = TEC_HIVE_ASSIMILATION_ALREADY_HIVEMINDED
							NOT = {
								has_trait = trait_hive_mind
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else = {
					custom_tooltip_fail = {
						text = TEC_INVALID_ASSIMILATION
						always = no
					}
				}
			}
			else_if = {	# Regular empires
				limit = {
					from = { is_regular_empire = yes }
				}
				if = {	# Debug
					limit = {
						from = {
							has_country_flag = tec_test_assimilations_country
						}
					}
					always = yes
				}
				else_if = {	# Genetic perfection Assimilation (dual)
					limit = {
						is_robotic = no
						from = {
							has_country_flag = tec_genetic_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								OR = {
									tec_has_genetic_main_traits = yes
									tec_is_replicant_species = yes
								}
							}
							custom_tooltip = {	# Can convert into main species
								text = TEC_ASSIMILATION_GENEPERF_CONVERT_INTO_MAIN_SPECIES
							}
						}
						else = {
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_GAIN_GENEPERFECTION_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_GENEPERFECTION
								tec_has_genetic_main_traits = no
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						#if = {	# Cyb removal
						#	limit = { tec_is_cyborg_species_no_repl = yes }
						#	custom_tooltip = {
						#		text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
						#	}
						#}
						if = {	# biogenic
							limit = { tec_is_biogenic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOGENIC_TRAIT
							}
						}
						#if = {	# Bioware removal
						#	limit = { tec_is_bioware_species = yes }
						#	custom_tooltip = {
						#		text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
						#	}
						#}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Biosionic Assimilation (dual)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_biopsionic_main
						#}
						from = {
							has_country_flag = tec_biopsionic_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_GAIN_BIOPSIONIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_BIOPSIONIC
							NOT = {
								has_trait = trait_tec_biopsionic_main
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
						if = {	# biogenic
							limit = { tec_is_biogenic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOGENIC_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOT = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Biogenic Assimilation (dual)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_biogenic_main
						#}
						from = {
							has_country_flag = tec_biogenic_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								OR = {
									has_trait = trait_tec_biogenic_main
									tec_is_replicant_species = yes
								}
							}
							custom_tooltip = {	# Can convert into main species
								text = TEC_ASSIMILATION_GENEPERF_CONVERT_INTO_MAIN_SPECIES
							}
						}
						else = {
							custom_tooltip = {	# Already Biogenic
								text = TEC_ASSIMILATION_WILL_GAIN_BIOGENIC_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_BIOGENIC
								NOT = {
									has_trait = trait_tec_biogenic_main
								}
							}
						}
						custom_tooltip = {	# Xenocytes
							text = TEC_ASSIMILATION_BIOGENIC_XENOCYTES
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Genetic perfection removal
							limit = {
								tec_has_genetic_main_traits = yes
							}
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_GENEPERFECTION
							}
						}
						if = {	# Cyb removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOT = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Total Assimilation (total)
					limit = {
						from = {
							tec_has_all_species_total_assimilation = yes
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Robot Assimilation (total)
					limit = {
						is_robotic = yes
						NOT = {
							has_species_flag = mechanical_species@from
						}
						from = {
							OR = {
								has_technology = tech_tec_machine_assimilation
								has_country_flag = tec_robot_total_assimilation
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_ROBOT_CRAFTED_SPECIES
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Organic Assimilation (total)
					limit = {
						is_robotic = no
						from = {
							tec_has_biological_total_assimilation = yes
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Adv Cybernetic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_superior_cybernetics_main
						#}
						from = {
							has_country_flag = tec_cybernetic_t2_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								tec_is_basic_cybernetics_main_species = yes
							}
							custom_tooltip = {	# Cyborg is upgraded
								text = TEC_ASSIMILATION_WILL_UPGRADE_CYBERNETIC_TRAIT
							}
						}
						else = {
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_GAIN_ADVANCED_CYBERNETIC_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_ADVANCED_CYBORG
								NOT = {
									has_trait = trait_tec_superior_cybernetics_main
								}
								tec_is_replicant_species = no
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# cybernetic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_cybernetic
						#}
						from = {
							has_country_flag = tec_cybernetic_t1_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {	# Already cyborg
							text = TEC_ASSIMILATION_WILL_GAIN_CYBERNETIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
							tec_is_cyborg_species = no
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Psionic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_psionic
						#}
						from = {
							has_country_flag = tec_psionic_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {	# No cyborg
							text = TEC_ASSIMILATION_WILL_GAIN_PSIONIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_PSIONIC
							NOT = {
								has_trait = trait_psionic
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOT = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Cyberpsionic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_cyberpsionic_main
						#}
						from = {
							has_country_flag = tec_cyberpsionic_assimilation
						}
					}
					# Trait gain
						if = {
							limit = {
								tec_is_basic_cybernetics_main_species = yes
							}
							custom_tooltip = {	# Cyborg is upgraded
								text = TEC_ASSIMILATION_WILL_UPGRADE_CYBERNETIC_TRAIT
							}
						}
						else = {
							custom_tooltip = {	# Already cyborg
								text = TEC_ASSIMILATION_WILL_GAIN_CYBERPSIONIC_TRAIT
								fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
								NOT = {
									has_trait = trait_tec_cyberpsionic_main
								}
								tec_is_replicant_species = no
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Bioware removal
							limit = { tec_is_bioware_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_BIOWARE_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # crafted species cant transcend
							fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
							NOR = {
								has_trait = trait_tec_bioservant
							}
						}
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Psychic Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_psychic_main
						#}
						from = {
							has_country_flag = tec_psychic_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_GAIN_PSYCHIC_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_PSYCHIC
							NOT = {
								has_trait = trait_tec_psychic_main
							}
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Bioware Assimilation (add)
					limit = {
						is_robotic = no
						#NOT = {
						#	has_trait = trait_tec_bioware_main
						#}
						from = {
							has_country_flag = tec_bioware_assimilation
						}
					}
					# Trait gain
						custom_tooltip = {	# Already cyborg
							text = TEC_ASSIMILATION_WILL_GAIN_BIOWARE_TRAIT
							fail_text = TEC_ASSIMILATION_ALREADY_BIOWARE
							NOT = {
								has_trait = trait_tec_bioware_main
							}
							tec_is_replicant_species = no
						}
					# /
					# Trait removal
						if = {	# Hivemind dissociation
							limit = { has_trait = trait_hive_mind }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
							}
						}
						if = {	# Psionic removal
							limit = { tec_is_any_psionic_species = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_PSIONIC_TRAIT
							}
						}
						if = {	# Cyb removal
							limit = { tec_is_cyborg_species_no_repl = yes }
							custom_tooltip = {
								text = TEC_ASSIMILATION_WILL_LOSE_CYBERNETIC_TRAIT
							}
						}
					# /
					# Exceptions
						custom_tooltip = {	# Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOT = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else_if = {	# Fallback Hivemind deassimilation (remove)
					limit = {
						is_robotic = no
						has_trait = trait_hive_mind
						from = {
							OR = {
								has_technology = tech_tec_hive_deassimilation
								OR = {
									has_country_flag = can_add_advanced_traits
									has_technology = tech_tec_hive_deassimilation
								}
								# debug
								has_country_flag = tec_hive_biological_assimilation_debug
							}
						}
					}
					# Trait gain
						custom_tooltip = {
							text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
						}
					# /
					# Exceptions
						custom_tooltip = { # Ethereal exceptions
							fail_text = TEC_ASSIMILATION_INVALID_ETHEREAL
							NOR = {
								has_trait = trait_tec_ethereal_main
							}
						}
					# /
				}
				else = {
					custom_tooltip_fail = {
						text = TEC_INVALID_ASSIMILATION
						always = no
					}
				}
			}
			else = {	# hehe, what do you think may come here?
				always = no
			}
		# /

		if = {	# OLD CODE
			limit = {
				always = no
			}
			hidden_trigger = {
				exists = from 
			}
			# Not the same species
			custom_tooltip = {
				fail_text = MUST_NOT_BE_DOMINANT_SPECIES
				NOT = {
					is_exact_same_species = from
				}
			}
			# SORT BY AUTHORITY
			if = {			# OVERRIDE
				limit = {
					from = {
						OR = {
							has_country_flag = tec_total_assimilation
							has_country_flag = tec_test_assimilations
							has_global_flag = tec_test_assimilations
						}
					}
				}
				always = yes
			}
			else_if = { 	# HIVE MINDS
				limit = {
					from = {
						is_hive_empire = yes
					}
				}
				if = {		# Machine pop - Robot Assimilation
					limit = {
						from = {	# organic hives don't use robots at all
							tec_is_biohive = no
						}
						has_trait = trait_machine_unit
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_ROBOT_CRAFTED_SPECIES
						fail_text = TEC_MACHINE_INTO_ROBOTS_REQUIRE_TECH
						from = {
							OR = {
								has_country_flag = tec_machine_into_robot_assimilation
								has_technology = tech_tec_machine_assimilation
								has_technology = tech_tec_robot_assimilation
							}
						}
						has_trait = trait_machine_unit
					}
				}
				else_if = { # Robot pop - Robot Consolidation
					limit = {
						from = {	# organic hives don't use robots at all
							tec_is_biohive = no
							NOR = {
								has_country_flag = tec_synthetic_assimilation
								has_country_flag = tec_replicant_assimilation
							}
						}
						has_trait = trait_mechanical
						NOT = {
							has_species_flag = mechanical_species@from
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_ROBOT_CRAFTED_SPECIES
						from = {
							OR = {
								has_technology = tech_tec_machine_assimilation
								has_country_flag = tec_robot_total_assimilation
							}
						}
						has_trait = trait_mechanical
					}
				}
				else_if = { # Full organic Assimilation
					limit = {
						from = {
							OR = {
								has_country_flag = tec_gene_path_finished
								has_country_flag = tec_genetic_assimilation	
							}
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						fail_text = TEC_HIVE_ASSIMILATION_ONLY_BIO
						from = {
							OR = {
								has_country_flag = tec_gene_path_finished
								has_country_flag = tec_genetic_assimilation	
							}
						}
						is_robotic_species = no
					}
				}
				else_if = { # Hivemind trait Assimilation
					limit = {
						is_robotic_species = no
						from = {
							OR = {
								has_country_flag = can_add_advanced_traits
								has_technology = tech_tec_hive_assimilation
								has_country_flag = tec_hive_trait_assimilation
								# debug
								has_country_flag = tec_hive_biological_assimilation_debug
							}
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_GAIN_HIVE_TRAIT
						fail_text = TEC_HIVEPOPS_HIVE_ASSIMILATION
						from = {
							OR = {
								has_country_flag = can_add_advanced_traits
								has_technology = tech_tec_hive_assimilation
								has_country_flag = tec_hive_trait_assimilation
								# debug
								has_country_flag = tec_hive_biological_assimilation_debug
							}
						}
						NOR = {
							has_trait = trait_hive_mind
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
				else_if = {	# Replicant Assimilation
					limit = {
						from = {
							has_country_flag = tec_replicant_assimilation
						}
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_REPLICANT
						}
					}
					custom_tooltip = {
						fail_text = TEC_REPLICANT_ASSIMILATION_NOT_MAIN
						tec_is_replicant_species = no
					}
				}
				if = { # Cybernetic integration
					limit = {
						from = {
							OR = {
								# Cyberhives can cyborg assimilate by default
								tec_is_cyberhive = yes
								AND = {
									tec_is_cyberhive = no
									OR = {
										has_country_flag = tec_cybernetic_t1_assimilation
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
								NOT = {
									has_country_flag = tec_replicant_assimilation
								}
							}
						}
						NOR = {
							has_trait = trait_machine_unit
							has_trait = trait_mechanical
						}
					}
					custom_tooltip = {
						fail_text = TEC_CYBORG_ASSIMILATION_REQUIRE_ORGANICS
						NOR = {
							AND = {
								from = {
									NOT = {
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
								has_trait = trait_cybernetic
							}
							has_trait = trait_tec_superior_cybernetics_main
							has_trait = trait_tec_cyberpsionic_main
							tec_is_replicant_species = yes
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_GAIN_CYBERNETIC_TRAIT
						fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
						OR = {
							NAND = {
								from = {
									NOR = {
										has_country_flag = tec_cybernetic_t1_assimilation
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
								OR = {
									#	has_trait = trait_tec_basic_cybernetics_main
									has_trait = trait_cybernetic
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									tec_is_replicant_species = yes
								}
							}
							NAND = {
								from = {
									has_country_flag = tec_cybernetic_t1_assimilation
								}
								OR = {
									has_trait = trait_cybernetic
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									tec_is_replicant_species = yes
								}
							}
							NAND = {
								from = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
								OR = {
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									tec_is_replicant_species = yes
								}
							}
							
						}
					}
				}
			}
			else_if = {		# MACHINE EMPIRES
				limit = {
					from = {
						is_machine_empire = yes
					}
				}
				if = { 		# Robot - Machine pop Assimilation
					limit = {
						has_trait = trait_mechanical
						from = {
							NOT = {
								has_country_flag = tec_replicant_assimilation
							}
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_CONVERT_INTO_MAIN_SPECIES_MACHINE
						fail_text = TEC_ROBOTS_INTO_MACHINES_REQUIRE_TECH
						from = {
							has_technology = tech_tec_robot_assimilation
						}
						has_trait = trait_mechanical
					}
				}
				else_if = { # Machines into own machines
					limit = {
						has_trait = trait_machine_unit
						NOR = {
							is_exact_same_species = from
							is_subspecies = from
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_CONVERT_INTO_MAIN_SPECIES_MACHINE
						fail_text = TEC_ROBOTS_INTO_MACHINES_REQUIRE_TECH
						from = {
							has_technology = tech_tec_robot_assimilation
						}
						has_trait = trait_machine_unit
					}
				}
				else_if = { # Machine Assimilator
					limit = {
						from = {
							OR = {
								has_valid_civic = civic_machine_assimilator
								AND = {
									NOT = {
										has_valid_civic = civic_machine_assimilator
										OR = {
											has_country_flag = tec_cybernetic_t1_assimilation
											has_country_flag = tec_cybernetic_t2_assimilation
										}
									}
								}
							}
						}
						NOR = {
							has_trait = trait_machine_unit
							has_trait = trait_mechanical
						}
					}
					custom_tooltip = {
						fail_text = TEC_CYBORG_ASSIMILATION_REQUIRE_ORGANICS
						NOR = {
							#	has_trait = trait_tec_basic_cybernetics_main
							AND = {
								has_trait = trait_cybernetic
								from = {
									NOT = {
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
							}
							has_trait = trait_tec_superior_cybernetics_main
							has_trait = trait_tec_cyberpsionic_main
							has_trait = trait_tec_replicant_main
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_GAIN_CYBERNETIC_TRAIT
						fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
						OR = {
							NAND = {
								from = {
									NOR = {
										has_country_flag = tec_cybernetic_t1_assimilation
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
								OR = {
									#	has_trait = trait_tec_basic_cybernetics_main
									has_trait = trait_cybernetic
									has_trait = trait_tec_cyberpsionic_main
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_replicant_main
								}
							}
							NAND = {
								from = {
									has_country_flag = tec_cybernetic_t1_assimilation
									NOT = {
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
								OR = {
									has_trait = trait_cybernetic
									has_trait = trait_tec_cyberpsionic_main
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_replicant_main
								}
							}
							NAND = {
								from = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
								OR = {
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									has_trait = trait_tec_replicant_main
								}
							}
							
						}
					}
					
				}
				# Machine Encasing
	
				# Machine Replicant
	
			}
			else_if = {		# REGULAR EMPIRES
				limit = {
					from = {
						is_regular_empire = yes
					}
				}
				if = {		# Test
					limit = {
						from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_REGULAR
					}
				}
				if = {		# Machine pop - Robot Assimilation
					limit = {
						from = {	# organic hives don't use robots at all
							tec_is_biohive = no
						}
						has_trait = trait_machine_unit
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_MACHINEPOP
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_ROBOT_CRAFTED_SPECIES
						fail_text = TEC_MACHINE_INTO_ROBOTS_REQUIRE_TECH
						from = {
							has_technology = tech_tec_machine_assimilation
						}
						has_trait = trait_machine_unit
					}
				}
				else_if = {	# Robot pop - Robot Consolidation
					limit = {
						has_trait = trait_mechanical
						NOT = {
							has_species_flag = mechanical_species@from
						}
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_ROBOT
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_ROBOT_CRAFTED_SPECIES
						from = {
							has_technology = tech_tec_machine_assimilation
						}
						has_trait = trait_mechanical
					}
				}
				else_if = {
					limit = {
						has_trait = trait_mechanical
						has_species_flag = mechanical_species@from
						from = {
							NOR = {
								has_country_flag = tec_synthetic_assimilation
								has_country_flag = tec_replicant_assimilation
							}
						}
					}
					custom_tooltip = {
						fail_text = TEC_ASSIMILATION_MAIN_ROBOT_CANT_BE_ASSIMILATED
						from = {
							has_technology = tech_tec_machine_assimilation
						}
						has_trait = trait_mechanical
						NOT = {
							has_species_flag = mechanical_species@from
						}
					}
				}
				else_if = {	# Hivemind trait de-assimilation
					limit = {
						has_trait = trait_hive_mind
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_DEHIVE
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_LOSE_HIVE_TRAIT
						fail_text = TEC_HIVEPOPS_REQUIRE_BIO
						from = {
							OR = {
								has_technology = tech_tec_hive_deassimilation
								OR = {
									has_country_flag = can_add_advanced_traits
									has_technology = tech_tec_hive_deassimilation
								}
								has_country_flag = tec_cybernetic_t1_assimilation
								has_country_flag = tec_cybernetic_t2_assimilation
								has_country_flag = tec_psionic_assimilation
								has_ascension_perk = ap_tec_biopsionic
								has_ascension_perk = ap_tec_cyberpsionic
								has_country_flag = tec_replicant_assimilation
							}
						}
						has_trait = trait_hive_mind
					}
				}
				else_if = {	# Full organic Assimilation
					limit = {
						from = {
							OR = {
								has_country_flag = tec_genetic_assimilation			# Convert into themselves
								has_country_flag = tec_hive_biological_assimilation
								has_country_flag = tec_biopsionic_assimilation
								has_country_flag = tec_replicant_assimilation
								has_country_flag = tec_ethereal_assimilation
							}
						}
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_FULLORGC
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES
						fail_text = TEC_HIVE_ASSIMILATION_ONLY_BIO
						from = {
							OR = {
								has_country_flag = tec_genetic_assimilation			# Convert into themselves
								has_country_flag = tec_hive_biological_assimilation
								has_country_flag = tec_biopsionic_assimilation
								has_country_flag = tec_replicant_assimilation
								has_country_flag = tec_ethereal_assimilation
							}
						}
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
				else_if = {	# Cybernetic Assimilation
					limit = {
						from = {
							OR = {
								has_country_flag = tec_cybernetic_t1_assimilation
								has_country_flag = tec_cybernetic_t2_assimilation
							}
							NOR = {
								has_ascension_perk = ap_tec_cyberpsionic
								has_ascension_perk = ap_tec_replicant
							}
						}
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
					if = {	# checker
						limit = {
							from = {
								OR = {
									has_country_flag = tec_test_assimilations
									has_global_flag = tec_test_assimilations
								}
							}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_CIB
						}
					}
					custom_tooltip = {
						fail_text = TEC_CYBORG_ASSIMILATION_REQUIRE_ORGANICS
						NOR = {
							AND = {
								from = {
									has_country_flag = tec_cybernetic_t1_assimilation
									NOT = {
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
								OR = {
									has_trait = trait_cybernetic
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									has_trait = trait_tec_replicant_main
								}
							}
							AND = {
								from = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
								OR = {
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									has_trait = trait_tec_replicant_main
								}
							}
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_GAIN_CYBERNETIC_TRAIT
						fail_text = TEC_ASSIMILATION_ALREADY_CYBORG
						OR = {
							NAND = {
								from = {
									has_country_flag = tec_cybernetic_t1_assimilation
									NOT = {
										has_country_flag = tec_cybernetic_t2_assimilation
									}
								}
								OR = {
									has_trait = trait_cybernetic
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									has_trait = trait_tec_replicant_main
								}
							}
							NAND = {
								from = {
									has_country_flag = tec_cybernetic_t2_assimilation
								}
								OR = {
									has_trait = trait_tec_superior_cybernetics_main
									has_trait = trait_tec_cyberpsionic_main
									has_trait = trait_tec_replicant_main
								}
							}
						}
						
					}
				}
				else_if = {	# Synthetic Assimilation
					limit = {
						from = {
							OR = {
								has_country_flag = synthetic_empire
								has_country_flag = tec_synthetic_assimilation
							}
						}
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_SYNTHETICS
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES_SYNTH
						fail_text = SYNTH_SPECIES_MUST_BE_ORGANIC
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
				}
				else_if = {
					limit = {
						from = {
							OR = {
								has_country_flag = synthetic_empire
								has_country_flag = tec_synthetic_assimilation
							}
						}
						OR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
						NOT = {
							has_species_flag = mechanical_species@from
						}
					}
					custom_tooltip = {
						text = TEC_TEMP_ASSIMILATION_SYNTHS_2
						from = {
							has_country_flag = tec_test_assimilations
						}
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_CONVERT_INTO_MAIN_SPECIES_SYNTH
						fail_text = TEC_SYNTH_ASSIMILATION_INVALID_ROBOT
						OR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
						NOT = {
							has_species_flag = mechanical_species@from
						}
					}
				}
				else_if = {	# Psionic Assimilation
					limit = {
						from = {
							has_country_flag = tec_psionic_assimilation
						}
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_PSIONIC
						}
					}
					custom_tooltip = { # crafted species cant transcend
						fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
	
							has_trait = trait_tec_bioservant
						}
					}
					custom_tooltip = { # species must be organic to transcend
						fail_text = TRANSCENDING_SPECIES_MUST_BE_ORGANIC
						is_robotic_species = no
						NOT = {
							has_trait = trait_cybernetic 
						}
					}
					custom_tooltip = { # species already has psionic trait
						fail_text = TRANSCENDING_SPECIES_IS_ALREADY_PSIONIC
						NOT = {
							has_trait = trait_psionic 
						}
					}
				}
				else_if = {	# Replicant Assimilation
					limit = {
						from = {
							has_country_flag = tec_replicant_assimilation
						}
					}
					if = {	# checker
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_REPLICANT
						}
					}
					custom_tooltip = {
						fail_text = TEC_REPLICANT_ASSIMILATION_NOT_MAIN
						if = {
							limit = {
								from = {
									has_policy_flag = tec_replicant_full_assimilation
								}
							}
							OR = {
								NOT = {
									has_trait = trait_tec_replicant_main
								}
								has_trait = trait_tec_replicant_main
							}
						}
						else = {
							NOT = {
								has_trait = trait_tec_replicant_main
							}
						}
					}
	
					
				}
				else_if = {	# Cyberpsio Assimilation
					limit = {
						from = {
							has_ascension_perk = ap_tec_cyberpsionic
							OR = {
								has_country_flag = tec_u_cp_power
								has_country_flag = tec_u_cp_equilibrium
								has_country_flag = tec_u_cp_control
							}
						}
						NOR = {
							has_trait = trait_mechanical
							has_trait = trait_machine_unit
						}
					}
					if = {	# checker
						limit = {
							from = {
								OR = {
									has_country_flag = tec_test_assimilations
									has_global_flag = tec_test_assimilations
								}
							}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_CIBPSIO
						}
					}
					custom_tooltip = { # crafted species cant transcend
						fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
						NOR = {
							is_robotic = yes
							tec_is_bioservant_species = yes
						}
					}
					custom_tooltip = {
						fail_text = TEC_CYBERPSIONIC_ASSIMILATION_REQUIRE_ORGANICS
						is_robotic_species = no
					}
					custom_tooltip = {
						text = TEC_ASSIMILATION_WILL_GAIN_CYBERPSIONIC_TRAIT
						fail_text = TEC_ASSIMILATION_ALREADY_CYBERPSIONIC
						NOT = {
							has_trait = trait_tec_cyberpsionic_main
						}
					}
				}
				else_if = { # Pure of form Assimilation
					limit = {
						from = {
							has_ascension_perk = ap_tec_biopsionic
							OR = {
								has_country_flag = tec_u_pure_embroidered
								has_country_flag = tec_u_pure_brain
							}
						}
					}
					if = {	# checker
						limit = {
							from = {
								OR = {
									has_country_flag = tec_test_assimilations
									has_global_flag = tec_test_assimilations
								}
							}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_PUREOFFORM
						}
					}
					custom_tooltip = { # crafted species cant transcend
						fail_text = TEC_ASSIMILATION_INVALID_PSIONIC_CRAFTED_SPECIES
						NOR = {
							is_robotic = yes
							tec_is_bioservant_species = yes
						}
					}
					custom_tooltip = { # species must be organic to transcend
						fail_text = TRANSCENDING_SPECIES_MUST_BE_ORGANIC
						is_robotic_species = no
					}
	
					custom_tooltip = { # species are already pure of form
						text = TEC_ASSIMILATION_WILL_GAIN_BIOPSIONIC_TRAIT
						fail_text = TEC_ASSIMILATION_ALREADY_BIOPSIONIC
						NOT = {
							has_trait = trait_tec_biopsionic_main
						}
					}
					custom_tooltip = { # species already has psionic trait
						fail_text = TEC_ASSIMILATION_ALREADY_PSIONIC
						NOT = {
							has_trait = trait_psionic
						}
					}
				}
				else = {	# checker
					if = {	
						limit = {
							from = {
							OR = {
								has_country_flag = tec_test_assimilations
								has_global_flag = tec_test_assimilations
							}
						}
						}
						custom_tooltip = {
							text = TEC_TEMP_ASSIMILATION_FAILED
						}
					}
					custom_tooltip = {
						fail_text = TEC_FAILED_TO_DETECT_ASSIMILATION
						always = no
					}
				}
			}
		}
	}

	ai_will_do = {
		factor = 100
		modifier = {	# Prevents ais from autoassimilating themselves
			factor = 0
			is_exact_same_species = from
		}
		modifier = {
			factor = 0
			from = {
				is_homicidal = yes
			}
		}
		modifier = {	# Prevents ais from autoassimilating at start
			factor = 0
			from = {
				is_ai = yes
			}
			days_passed < 5
		}
		modifier = {
			factor = 10
			from = {
				OR = {
					has_valid_civic = civic_machine_assimilator		
				}
			}
		}
	}
}

citizenship_organic_trophy = {
	potential = {
		has_synthetic_dawn = yes
		exists = from
		from = {
			is_machine_empire = yes
			has_civic = civic_machine_servitor
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = "disconnected_machine_pops_kill_themselves_citizenship"
			is_disconnected_machine_pop = no
		}
		custom_tooltip = {
			fail_text = "tec_unworthy_biopop_citizenship"
			NOT = {
				AND = {
					from = {
						has_ethic = ethic_gestalt_apathy
					}
					NOT = {
						has_species_flag = tec_original_biotrophy_@from	
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = not_organic
			NOR = {
				has_trait = trait_mechanical
				has_trait = trait_machine_unit
			}
		}
	}
	ai_will_do = {
		factor = 100
	}
}

citizenship_limited = {
	new_pop_weight = 0.75

	triggered_pop_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		pop_happiness = -0.1
		pop_amenities_usage_mult = -0.25
		pop_political_power = -0.5
	}

	potential = {
		OR = {
			is_sapient = no
			AND = {
				exists = from
				from = {
					OR = {
						is_regular_empire = yes
						AND = {
							is_gestalt = yes
							has_ethic = ethic_gestalt_empathy
						}
					}
					
				}
			}
		}
		NOR = {
			AND = {
				from = { is_individual_machine = no }
				has_trait = trait_machine_unit
			}
			is_shackled_robot_species_rights = yes
			tec_is_shackled_bioservant_species_rights = yes
		}
	}

	allow = {
		custom_tooltip = {
			fail_text = "presapients_not_accepted_citizenship"
			OR = {
				is_sapient = yes
				from = {
					NOT = {
						has_policy_flag = pre_sapients_eat
						has_policy_flag = pre_sapients_purge
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_SPECIES_CITIZENS_ONLY"
			OR = {
				NOT = {
					from = {
						is_hive_empire = yes
					}
				}
				AND = {
					NOT = {
						has_trait = trait_hive_mind
					}
					from = {
						OR = {
							has_ethic = ethic_gestalt_empathy
							has_valid_civic = civic_hive_guided_sapience
						}
					}
				}
			}
			
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_MAIN_SPECIES_ALWAYS_CITIZEN"
			NAND = {
				from = { is_hive_empire = yes }
				is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = "disconnected_machine_pops_kill_themselves_citizenship"
			is_disconnected_machine_pop = no
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = yes_service_yes_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				NOT = { has_military_service_type = { type = military_service_full country = from } }
			}
		}
		custom_tooltip = {
			fail_text = selective_kinship_must_citizen
			if = {
				limit = {
					from = {
						tec_is_selective_kinship_empire = yes
					}
				}
				NOT = { is_same_species_class = from }
			}
		}
	}
	ai_will_do = {
		factor = 3
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				has_ai_personality_behaviour = multispecies
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = no
				OR = {
					has_ethic = ethic_xenophile
					has_ethic = ethic_fanatic_xenophile
				}
			}
		}
	}
}

citizenship_slavery = {
	is_slavery = yes

	in_breach_of = {
		{
			key = resolution_greatergood_balance_in_the_middle
		}
		{
			key = resolution_greatergood_universal_prosperity_mandate
		}
	}

	potential = {
		OR = {
			NAND = {
				exists = this
				OR = {
					AND = {
						from = { is_individual_machine = yes }
						OR = {
							has_trait = trait_machine_unit
							has_trait = trait_mechanical
						}
					}
					AND = {
						from = { tec_is_bioservant_empire = yes }
						OR = {
							has_trait = trait_tec_bioservant
						}
					}
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
					has_trait = trait_tec_bioservant
				}
			}

			# This is done so apathic servitors can enslave other species (than the original they pamper)
			AND = {
				from = {
					has_ethic = ethic_gestalt_apathy
				}
				NOT = {
					has_species_flag = tec_original_biotrophy_@from	
				}
			}
			# Thought Harvesters
			AND = {
				from = {
					has_civic = civic_tec_hive_mindflayers
				}
				NOT = {
					is_same_value = owner_main_species
				}
			}
		}
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = "presapients_allowed_citizenship"
			OR = {
				is_sapient = yes
				from = {
					NOT = {
						has_policy_flag = pre_sapients_protect
						has_policy_flag = pre_sapients_allow
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "presapients_purged_citizenship"
			OR = {
				is_sapient = yes
				from = {
					NOT = {
						has_policy_flag = pre_sapients_purge
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "HIVE_MIND_MAIN_SPECIES_ALWAYS_CITIZEN"
			NAND = {
				from = {
					is_hive_empire = yes
					# Ceremorpsh can mental-enslave other hiveminds	
					NOT = {	has_valid_civic = civic_tec_hive_mindflayers }
				}
				has_trait = trait_hive_mind	#is_same_species = from
			}
		}
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
		custom_tooltip = {
			fail_text = "lonely_hive_mind_pops_kill_themselves_citizenship"
			is_lonely_hive_mind_pop = no
		}
		custom_tooltip = {
			fail_text = SERVITORS_CANNOT_ENSLAVE
			from = {
				OR = {
					NOT = {
						has_valid_civic = civic_machine_servitor
						
					}
					AND = {
						has_valid_civic = civic_machine_servitor
						has_ethic = ethic_gestalt_apathy
						prevprev = {
							NOT = {
								has_species_flag = tec_original_biotrophy_@from		
							}
						}
					}
				}
				
			}
		}
		custom_tooltip = {
			fail_text = ASSIMILATORS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_machine_assimilator }
			}
		}
		custom_tooltip = {
			fail_text = TERMINATORS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_machine_terminator }
			}
		}
		custom_tooltip = {
			fail_text = DEVOURERS_CANNOT_ENSLAVE
			from = {
				NOT = { has_valid_civic = civic_hive_devouring_swarm }
			}
		}
		custom_tooltip = {
			fail_text = empire_xenophile
			from = {
				NOR = {
					has_ethic = ethic_gestalt_empathy
					is_xenophile = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = "FANATIC_PURIFIERS_MUST_PURIFY"
			OR = {
				NOT = { from = { has_valid_civic = civic_fanatic_purifiers } }
				is_same_species = from
			}
		}

		custom_tooltip = {
			fail_text = does_not_embrace_species_slavery
			from = {
				allows_slavery = yes
				OR = {
					has_ethic = ethic_xenophobe
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_elitist
					has_ethic = ethic_fanatic_elitist
					has_ethic = ethic_gestalt_consciousness
					tec_has_slaver_civic = yes
				}
			}
		}
		custom_tooltip = {
			fail_text = yes_service_yes_citizenship
			if = {
				limit = {
					from = { has_valid_civic = civic_citizen_service }
				}
				NOT = { has_military_service_type = { type = military_service_full country = from } }
			}
		}
		custom_tooltip = {
			fail_text = selective_kinship_must_citizen
			if = {
				limit = {
					from = { tec_is_selective_kinship_empire = yes }
				}
				NOT = { is_same_species_class = from }
			}
		}
	}
	ai_will_do = {
		factor = 15	
		modifier = {
			factor = 100
			from = {
				has_valid_civic = civic_tec_hive_mindflayers
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				NOT = {
					has_ai_personality_behaviour = slaver
				}
				NAND = {
					is_ai = no
					is_xenophobe = yes
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				is_authoritarian = no
				is_xenophobe = no
				is_hive_empire = no
			}
		}
		modifier = {
			factor = 0.1
			from = {
				is_galactic_community_member = yes
			}
			OR = {
				is_active_resolution = "resolution_greatergood_balance_in_the_middle"
				is_active_resolution = "resolution_greatergood_universal_prosperity_mandate"
			}
		}
		modifier = {
			factor = 2
			has_species_flag = syncretic_species@from
		}
	}
}

citizenship_robot_servitude = {
	is_robot_servant = yes

	potential = {
		exists = from
		from = {
			OR = {
				is_gestalt = no
				AND = {
					has_ethic = ethic_gestalt_consciousness
					is_hive_empire = yes
					tec_is_biohive = no
					tec_is_radical_hive = no
				}
			}
		}
		OR = {
			has_trait = trait_mechanical
			has_trait = trait_machine_unit
			has_trait = trait_tec_bioservant
		}
	}

	allow = {
		hidden_trigger = {
			exists = from 
		}
		from = {
			NOR = {
				has_origin = origin_tec_slavetothesystem
				has_origin = origin_tec_robosapiens
			}
		}
		if = {
			limit = {
				is_robotic_species = yes
			}
			custom_tooltip = {
				fail_text = ROBOTS_HAVE_RIGHTS
				from = {
					NOT = { has_policy_flag = ai_full_rights }
				}
			}
			custom_tooltip = {
				fail_text = ROBOTS_ARE_OUTLAWED
				from = {
					NOT = { has_policy_flag = robots_outlawed }
				}
			}
		}
		else_if = {
			limit = {
				tec_is_bioservant_species = yes
			}
			custom_tooltip = {
				fail_text = TEC_BIOSERVANTS_HAVE_RIGHTS
				from = {
					NOT = { has_policy_flag = bioservant_full_rights }
				}
			}
			custom_tooltip = {
				fail_text = TEC_BIOSERVANTS_ARE_OUTLAWED
				from = {
					NOT = { has_policy_flag = bioservants_outlawed }
				}
			}
		}
	}
	ai_will_do = {
		factor = 30
		modifier = {
			factor = 35
			from = {
				is_individual_machine = yes
			}
		}
		modifier = {
			factor = 1000
			from = {
				has_ethic = ethic_gestalt_consciousness
				is_hive_empire = yes
				tec_is_biohive = no
				tec_is_radical_hive = no
			}
			OR = {
				has_trait = trait_mechanical
				has_trait = trait_tec_bioservant
			}
		}
	}
}

citizenship_purge = {
	new_pop_weight = 0.0

	is_purge = yes
	
	potential = {
		exists = from
		OR = {
			NOT = {
				from = {
					is_machine_empire = yes
				}
			}
			from = {
				is_machine_empire = yes
				has_ethic = ethic_gestalt_apathy
				has_civic = civic_machine_servitor
			}
		}
		if = {
			# Note: is_robotic_species cause issues with machines
			limit = {
				OR = {
					has_trait = trait_mechanical
					has_trait = trait_machine_unit
				}
			}
			from = {
				has_policy_flag = robots_outlawed
			}
		}
	}

	allow = {
		hidden_trigger = { exists = from }
		if = {
			limit = {
				is_lonely_hive_mind_pop = yes
			}
			hidden_trigger = { always = yes }
		}
		else = {
			custom_tooltip = {
				fail_text = is_broken_shackles_origin
				if = {
					limit = {
						OR = {
							is_robotic_species = no
							AND = {
								is_robotic_species = yes
								NOT = {
									from = { has_policy_flag = robots_outlawed }
								}
							}
						}
					}
					from = {
						NOT = {
							has_origin = origin_broken_shackles
						}
					}
				}
			}
			custom_tooltip = {
				fail_text = same_species_disallowed
				NOT = { is_same_species = from }
			}
			custom_tooltip = {
				fail_text = "presapients_not_purged_citizenship"
				OR = {
					is_sapient = yes
					from = {
						NOT = {
							has_policy_flag = pre_sapients_protect
							has_policy_flag = pre_sapients_allow
							has_policy_flag = pre_sapients_eat
						}
					}
				}
			}
			if = {
				limit = {
					NOR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				custom_tooltip = {
					fail_text = PURGING_NOT_ALLOWED
					OR = {
						from = {
							OR = {
								allows_purge = yes
								NOT = {
									has_policy_flag = purge_not_allowed
								}
							}
						}
						AND = {
							NOT = {
								has_species_flag = tec_original_biotrophy_@from	
							}
							from = {
								has_valid_civic = civic_machine_servitor
								has_ethic = ethic_gestalt_apathy
							}
						}
					}
				}
			}
			if = {
				limit = {
					from = {
						is_hive_empire = yes
					}
					has_trait = trait_hive_mind
				}
				custom_tooltip = {
					fail_text = hive_cant_purge_hive
					has_genesis_preserve_trait = no
				}
			}
			custom_tooltip = {
				fail_text = yes_service_yes_citizenship
				if = {
					limit = {
						from = { has_valid_civic = civic_citizen_service }
					}
					NOT = { has_military_service_type = { type = military_service_full country = from } }
				}
			}
			custom_tooltip = {
				fail_text = selective_kinship_must_citizen
				if = {
					limit = {
						from = { tec_is_selective_kinship_empire = yes }
					}
					NOT = { is_same_species_class = from }
				}
			}
		}
	}
	ai_will_do = {
		factor = 20
		modifier = {
			factor = 0
			has_trait = trait_machine_unit
			from = {
				is_machine_empire = yes
			}
		}
		modifier = {
			factor = 0
			has_trait = trait_mechanical
			from = {
				AND = {
					is_hive_empire = yes
					has_policy_flag = robots_allowed
				}
			}
		}
		modifier = {
			factor = 0
			has_trait = trait_mechanical
			from = {
				AND = {
					is_hive_empire = yes
					has_policy_flag = robots_allowed
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = no
				NOT = { is_hive_empire = yes }
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				NOR = {
					has_ai_personality_behaviour = purger
					AND = {
						has_ai_personality_behaviour = displacer
						if = {
							limit = {
								has_origin = origin_necrophage
							}
							is_hive_empire = yes
						}
					}
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				has_valid_ai_personality = yes
				NOR = {
					has_ai_personality_behaviour = purger
					AND = {
						has_ai_personality_behaviour = displacer
						if = {
							limit = { has_origin = origin_necrophage }
							is_hive_empire = yes
						}
					}
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				is_machine_empire = yes
				has_government = gov_machine_industrial
			}
		}
		modifier = {
			factor = 0
			from = {
				is_gestalt = yes
				has_ethic = ethic_gestalt_empathy
			}
		}
		modifier = {
			factor = 0
			from = {
				is_hive_empire = yes
				NOT = { has_valid_civic = civic_hive_devouring_swarm }
				NOT = {
					has_origin = origin_necrophage
				}
				OR = {
					has_valid_civic = civic_hive_one_mind
					has_valid_civic = civic_hive_subsumed_will
					root = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		modifier = {
			factor = 0
			from = {
				OR = {
					has_origin = origin_tec_bioservant
					has_origin = origin_syncretic_evolution
					has_valid_civic = civic_tec_origin_slave_race		
					has_valid_civic = civic_tec_origin_symbiotic_race
				}
			}
		}
		modifier = {
			factor = 10
			from = {
				is_ai = yes
				has_ascension_perk = ap_become_the_crisis
			}
		}
		modifier = {
			add = 1000
			not = { has_species_flag = syncretic_species@from }
			is_robotic = no
			from = {
				has_origin = origin_necrophage
				is_xenophobe = yes
			}
		}
	}
}

citizenship_purge_machine = {
	new_pop_weight = 0.0

	is_purge = yes
	
	potential = {
		exists = from
		from = {
			is_machine_empire = yes
		}
		NOR = {
			has_trait = trait_machine_unit
			has_trait = trait_mechanical
			AND = {
				tec_is_cyborg_species = yes
				has_trait = trait_zombie
				from = {
					has_ascension_perk = ap_mechromancy
				}
			}
		}
		OR = {
			from = {
				NOR = {
					has_valid_civic = civic_machine_servitor
					has_ethic = ethic_gestalt_empathy
				}
			}
			AND = {
				is_lonely_hive_mind_pop = yes
				from = {
					OR = {
						has_valid_civic = civic_machine_servitor
						has_ethic = ethic_gestalt_empathy
					}
				}
			}
			AND = {
				NOT = {
					has_species_flag = tec_original_biotrophy_@from	
				}
				from = {
					has_valid_civic = civic_machine_servitor
					has_ethic = ethic_gestalt_apathy
				}
			}
			from = { has_ascension_perk = ap_become_the_crisis }
		}
	}

	allow = {
		hidden_trigger = { exists = from }
		custom_tooltip = {
			fail_text = same_species_disallowed
			NOT = { is_same_species = from }
		}
		custom_tooltip = {
			fail_text = "presapients_not_purged_citizenship"
			OR = {
				is_sapient = yes
				from = {
					NOR = {
						has_policy_flag = pre_sapients_protect
						has_policy_flag = pre_sapients_allow
					}
				}
			}
		}
	}
	ai_will_do = {
		factor = 0
		#modifier = {
		#	factor = 0
		#	from = {
		#		is_gestalt = yes
		#		has_ethic = ethic_gestalt_empathy
		#	}
		#}
	}
}
