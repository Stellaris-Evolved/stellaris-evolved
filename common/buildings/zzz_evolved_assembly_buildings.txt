
# ----------------------------------------
	#A S S E M B L Y	B U I L D I N G S
# ----------------------------------------

# -------------- Rules
# Conversion
	# T1
		# robotics
		#building_robot_assembly_plant
		#building_mecha_monastery_1
		#building_hive_robot_assembly_plant

		# machine
		#building_machine_assembly_plant

		# Bioservant
		#building_tec_bioservant_plant_1
		#building_tec_hive_bioservant_plant_1

		# Cloning
		#building_clone_vats
		#building_tec_clone_vats_biohive_1
		#building_tec_gene_clinic_1

		#Extreme pop growth
		#building_tec_gene_clinic_1
		#building_spawning_pool
		#building_tec_biohive_spawning_pool_1

		# Other

	# T2
		# robotics
		#building_robot_assembly_complex
		#building_mecha_monastery_2
		#building_hive_robot_assembly_plant_2

		# machine
		#building_machine_assembly_complex

		# Bioservant
		#building_tec_bioservant_plant_2
		#building_tec_hive_bioservant_plant_2

		# Cloning
		#building_clone_vats_2
		##building_tec_clone_vats_biohive_2
		#building_tec_gene_clinic_2

		#Extreme pop growth
		#building_tec_gene_clinic_2
		#building_spawning_pool_2
		#building_tec_biohive_spawning_pool_2


	# T3
		# robotics
		#building_robot_assembly_plant_3
		#building_mecha_monastery_3
		##building_hive_robot_assembly_plant_3

		# machine
		#building_machine_assembly_plant_3

		# Bioservant
		#building_tec_bioservant_plant_3
		#building_tec_hive_bioservant_plant_3
		#building_tec_gene_clinic_3

		# Cloning
		#building_clone_vats_3
		##building_tec_clone_vats_biohive_2

		#Extreme pop growth
		#building_tec_gene_clinic_3
		#building_spawning_pool_3
		#building_tec_biohive_spawning_pool_3



# Future ones
	# building_ancient_machine_assembly_1
	# building_ancient_machine_assembly_2
# /

# ----------------------------------------------------------------------------------
# Assembly
# ----------------------------------------------------------------------------------

# ------------------------------------------------- Synthetics
# --------------- Regular
building_robot_assembly_plant = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	
	category = pop_assembly
	
	prerequisites = { "tech_robotic_workers" }
		
	show_tech_unlock_if = {
		is_regular_empire = yes 
		NOT = {
			has_valid_civic = civic_tec_machine_cult
		}
	}

	upgrades = {
		"building_robot_assembly_complex"
	}
	
	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_regular_empire = yes 
			NOR = {
				has_policy_flag = robots_outlawed 
				has_valid_civic = civic_tec_machine_cult
				has_policy_flag = tec_purity_assembly
			}
		}
		NOT = {
			has_modifier = slave_colony 
		}
	}


	allow = {
		tec_only_one_assembly_building = no
		#restrict the ai from making bad decisions
		if = {
			limit = {
				owner = { is_ai = yes }
				has_global_flag = tec_desired_assembly_distributed
			}
			exists = owner
			owner = {
				has_country_flag = tec_desires_to_build_robots
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
				}
			}
		# AI GUIDING
			#AND = {
			#	owner = { is_ai = yes }
			#	owner = {
			#		NOT = {
			#			has_country_flag = tec_desires_to_build_robots
			#		}
			#	}
			#}
		}
	}

	convert_to = {
		# T1
		# robotics
			#building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	planet_modifier = {
		job_roboticist_add = 1
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_tec_corporate_robocorp 
			}
		}
		modifier = {
			job_tec_minor_roboticist_add = 1
		}
	}
	
	triggered_desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				AND = {
					exists = owner
					owner = {
						NOT = { has_policy_flag = roboticist_output_build_cyborgs }
					}
				}
			}

		}
		text = job_roboticist_effect_desc
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_policy_flag = roboticist_output_build_cyborgs
			}
		}
		text = job_roboticist_cyborg_effect_desc
	}
	
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_civic = civic_tec_corporate_robocorp
			}
		}
		text = job_tec_minor_roboticist_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_robot_assembly_complex = {
	base_buildtime = @b2_time
	icon = building_machine_assembly_complex
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = { "tech_droid_workers" }

	show_tech_unlock_if = {
		is_regular_empire = yes 
		NOT = {
			has_valid_civic = civic_tec_machine_cult
		}
	}

	upgrades = {
		"building_robot_assembly_plant_3"
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_regular_empire = yes 
			NOR = {
				has_policy_flag = robots_outlawed 
				has_valid_civic = civic_tec_machine_cult
				has_policy_flag = tec_purity_assembly	
			}
		}
		NOT = { has_modifier = slave_colony }
	}

	allow = {
		#restrict the ai from making bad decisions
		if = {
			limit = {
				exists = owner
				owner = { is_ai = yes }
				has_global_flag = tec_desired_assembly_distributed
			}
			owner = {
				has_country_flag = tec_desires_to_build_robots
			}
		}
	}

	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly	
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
					#is_planet_class = pc_habitat
				}
			}
		}
	}

	convert_to = {
	# T2
		# robotics
			#building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
		#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			rare_crystals = @b2_rare_upkeep
		}
	}

	planet_modifier = {
		job_roboticist_add = 1
	}
	triggered_desc = {
		text = job_roboticist_effect_desc
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_tec_corporate_robocorp }
		}
		modifier = {
			job_tec_minor_roboticist_add = 2
		}
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_civic = civic_tec_corporate_robocorp
			}
		}
		text = job_tec_minor_roboticist_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant_species = no
				}
			}
		}
		modifier = {
			planet_pop_assembly_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant_species = yes
				}
			}
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}

	ai_weight = {
		weight = 50000
		modifier = {
			factor = 0
			OR = {
				#is_planet_class = pc_habitat
				#is_planet_class = pc_city
				num_buildings = { type = any value >= 14 }
				owner = {
					has_monthly_income = {
						resource = energy
						value < 5
					}
				}
			}
		}
	}
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_robot_assembly_plant_3 = {
	base_buildtime = @b3_time
 	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = {
		tech_synthetic_workers
	}

	show_tech_unlock_if = {
		is_regular_empire = yes 
		NOT = {
			has_valid_civic = civic_tec_machine_cult
		}
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_regular_empire = yes 
			NOR = {
				has_policy_flag = robots_outlawed 
				has_valid_civic = civic_tec_machine_cult
				has_policy_flag = tec_purity_assembly	
			}
		}
		NOT = { has_modifier = slave_colony }
	}
	
	allow = {
		#restrict the ai from making bad decisions
		if = {
			limit = {
				owner = { is_ai = yes }
				has_global_flag = tec_desired_assembly_distributed
			}
			owner = {
				has_country_flag = tec_desires_to_build_robots
			}
		}
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly	
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
					#is_planet_class = pc_habitat
				}
			}
		}
	}

	convert_to = {
	# T3
		# robotics
			#building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @tec_b3_rare_upkeep
		}
	}
	
	planet_modifier = {
		job_roboticist_add = 2
	}
	triggered_desc = {
		text = job_roboticist_effect_desc
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_tec_corporate_robocorp }
		}
		modifier = {
			job_tec_minor_roboticist_add = 2
		}
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_civic = civic_tec_corporate_robocorp
			}
		}
		text = job_tec_minor_roboticist_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = no
				}
			}
		}
		modifier = {
			planet_pop_assembly_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = yes
				}
			}
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# --------------- Hive
building_hive_robot_assembly_plant = {
	base_buildtime = @b1_time
	icon = building_robot_assembly_plant
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	
	prerequisites = {
		"tech_robotic_workers"
	}
		
	show_tech_unlock_if = {
		is_hive_empire = yes
		tec_is_biohive = no
	}

	upgrades = {
		"building_hive_robot_assembly_plant_2"
	}

	category = pop_assembly
	
	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_hive_empire = yes
			tec_is_biohive = no
		}
		NOT = {
			has_modifier = slave_colony 
		}
		
	}

	allow = {
		tec_only_one_assembly_building = no
		#restrict the ai from making bad decisions
		if = {
			limit = {
				owner = { is_ai = yes }
				has_global_flag = tec_desired_assembly_distributed
			}
			owner = {
				has_country_flag = tec_desires_to_build_robots
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
				}
			}
		# AI GUIDING
			#AND = {
			#	owner = { is_ai = yes }
			#	owner = {
			#		NOT = {
			#			has_country_flag = tec_desires_to_build_robots
			#		}
			#	}
			#}
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			#building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b1_minus_minerals
			food = @b1_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b1_minus_upkeep
			food = @b1_half_upkeep
		}
		cost = {
			trigger = {
				owner = {
					has_valid_civic = civic_tec_machine_digitalization
				}
			}
			minerals = @b1_minus_minerals
			energy = @b1_half_minerals
		}
		upkeep = {
			trigger = {
				planet = {
					exists = assembling_species
					assembling_species = {
						tec_is_replicant = no
					}
				}
			}
			alloys = 2
		}
		upkeep = {
			trigger = {
				planet = {
					exists = assembling_species
					assembling_species = {
						tec_is_replicant = yes
					}
					owner = {
						has_policy_flag = tec_replicant_food
					}
				}
			}
			alloys = 1
			food = 3
		}
		upkeep = {
			trigger = {
				planet = {
					exists = assembling_species
					assembling_species = {
						tec_is_replicant = yes
					}
					owner = {
						has_policy_flag = tec_replicant_minerals
					}
				}
			}
			alloys = 1
			minerals = 3
		}
	}

	planet_modifier = {
		job_tec_replicator_drone_add = 1
	}
	triggered_desc = {
		text = job_tec_replicator_drone_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = no
				}
			}
		}
		modifier = {
			planet_pop_assembly_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = yes
				}
			}
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_hive_robot_assembly_plant_2 = {
	base_buildtime = @b2_time
	icon = building_machine_assembly_complex
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = { "tech_droid_workers" }

	show_tech_unlock_if = {
		is_hive_empire = yes
		tec_is_biohive = no
	}

	upgrades = {
		"building_hive_robot_assembly_plant_3"
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_hive_empire = yes
			tec_is_biohive = no
		}
		NOT = {
			has_modifier = slave_colony 
		}
	}

	allow = {
		#restrict the ai from making bad decisions
		if = {
			limit = {
				owner = { is_ai = yes }
				has_global_flag = tec_desired_assembly_distributed
			}
			owner = {
				has_country_flag = tec_desires_to_build_robots
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
				}
			}
		# AI GUIDING
			#AND = {
			#	owner = { is_ai = yes }
			#	owner = {
			#		NOT = {
			#			has_country_flag = tec_desires_to_build_robots
			#		}
			#	}
			#}
		}
	}

	convert_to = {
	# T2
		# robotics
			#building_robot_assembly_complex
			building_mecha_monastery_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			rare_crystals = @b2_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b2_minus_minerals
			food = @b2_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b2_minus_upkeep
			food = @b2_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b2_minus_minerals
			energy = @b2_half_minerals
		}
	}

	planet_modifier = {
		job_tec_replicator_drone_add = 1
	}
	triggered_desc = {
		text = job_tec_replicator_drone_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = no
				}
			}
		}
		modifier = {
			planet_pop_assembly_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = yes
				}
			}
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_hive_robot_assembly_plant_3 = {
	base_buildtime = @b3_time
 	icon = building_tec_robot_assembly_plant_3
 	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = {
		tech_synthetic_workers_hive
	}

	show_tech_unlock_if = {
		is_hive_empire = yes
		tec_is_biohive = no
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_hive_empire = yes
			tec_is_biohive = no
		}
		NOT = {
			has_modifier = slave_colony 
		}
		
	}

	allow = {
		#restrict the ai from making bad decisions
		if = {
			limit = {
				owner = { is_ai = yes }
				has_global_flag = tec_desired_assembly_distributed
			}
			owner = {
				has_country_flag = tec_desires_to_build_robots
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_hive_empire = no 
					tec_is_biohive = yes
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
				}
			}
		# AI GUIDING
			#AND = {
			#	owner = { is_ai = yes }
			#	owner = {
			#		NOT = {
			#			has_country_flag = tec_desires_to_build_robots
			#		}
			#	}
			#}
		}
	}

	convert_to = {
	# T3
		# robotics
			#building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @tec_b3_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b3_minus_minerals
			food = @b3_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b3_minus_upkeep
			food = @b3_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b3_minus_minerals
			energy = @b3_half_minerals
		}
	}
	
	planet_modifier = {
		job_tec_replicator_drone_add = 2
	}
	triggered_desc = {
		text = job_tec_replicator_drone_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# --------------- Mechanicus
building_mecha_monastery_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly

	prerequisites = {
		"tech_robotic_workers"
	}

	upgrades = {
		building_mecha_monastery_2
	}

	show_tech_unlock_if = {
		has_valid_civic = civic_tec_machine_cult 
	}

	potential = {
		exists = owner
		owner = {
			has_valid_civic = civic_tec_machine_cult 
		}
		NOT = {
			has_modifier = slave_colony 
		}
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					NOT = {
						has_valid_civic = civic_tec_machine_cult
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
					#is_planet_class = pc_habitat
				}
			}
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			#building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	planet_modifier = {
		job_tec_techno_priest_add = 1
		pop_ethic_spiritualist_attraction_mult = 0.05
		pop_ethic_industrial_attraction_mult = 0.05	
	}

	triggered_desc = {
		text = job_tec_techno_priest_effect_desc
	}
		
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_mecha_monastery_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	can_build = no

	prerequisites = { "tech_droid_workers" }

	show_tech_unlock_if = {
		has_valid_civic = civic_tec_machine_cult 
	}

	upgrades = {
		"building_mecha_monastery_3"
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_regular_empire = yes 
			has_valid_civic = civic_tec_machine_cult
		}
		NOT = { has_modifier = slave_colony }
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					NOT = {
						has_valid_civic = civic_tec_machine_cult
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
					#is_planet_class = pc_habitat
				}
			}
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			#building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			rare_crystals = @b2_rare_upkeep
		}
	}

	planet_modifier = {
		job_tec_techno_priest_add = 1
		pop_ethic_spiritualist_attraction_mult = 0.10
		pop_ethic_industrial_attraction_mult = 0.10
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = no
				}
			}
		}
		modifier = {
			planet_pop_assembly_add = 1
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = no
				}
			}
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}

	
	triggered_desc = {
		text = job_tec_techno_priest_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_tec_corporate_robocorp }
		}
		modifier = {
			job_tec_minor_roboticist_add = 2
		}
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_civic = civic_tec_corporate_robocorp
			}
		}
		text = job_tec_minor_roboticist_effect_desc
	}



	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_mecha_monastery_3 = {
	base_buildtime = @b3_time
	category = pop_assembly
	can_build = no
		
	prerequisites = {
		tech_synthetic_workers
	}

	show_tech_unlock_if = {
		has_valid_civic = civic_tec_machine_cult 
	}

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			free_building_slots > 0
		}
		owner = {
			is_regular_empire = yes 
			has_valid_civic = civic_tec_machine_cult
		}
		NOT = { has_modifier = slave_colony }
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no 
					has_policy_flag = robots_outlawed
					NOT = {
						has_valid_civic = civic_tec_machine_cult
					}
				}
			}
			has_modifier = slave_colony
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = {
						type = any
						value = 16
					}
					#is_planet_class = pc_habitat
				}
			}
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			#building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @tec_b3_rare_upkeep
		}
	}

	planet_modifier = {
		job_tec_techno_priest_add = 2
		pop_ethic_spiritualist_attraction_mult = 0.15
		pop_ethic_industrial_attraction_mult = 0.15
	}
	triggered_desc = {
		text = job_tec_techno_priest_effect_desc
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_tec_corporate_robocorp }
		}
		modifier = {
			job_tec_minor_roboticist_add = 1
		}
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_civic = civic_tec_corporate_robocorp
			}
		}
		text = job_tec_minor_roboticist_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# --------------- Machines
building_machine_assembly_plant = {
	base_buildtime = @b1_time
	icon = building_robot_assembly_plant
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly

	upgrades = {
		building_machine_assembly_complex
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes 
			NOT = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
		}
	}
		
	allow = {
		tec_only_one_assembly_building = no
		OR = {
			owner = { is_ai = no }
			AND = {
				num_buildings = { type = any value <= 18 }
			}
		}
		owner = {
			NOT = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			owner = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = { type = any value = 18 } #review
					uses_habitat_capitals = yes
				}
			}
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			#building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b1_minus_minerals
			energy = @b1_half_minerals
		}
	}

	planet_modifier = {
		job_replicator_add = 1
	}
	triggered_desc = {
		text = job_replicator_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_machine_assembly_complex = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no

	category = pop_assembly

	upgrades = {
		building_machine_assembly_plant_3
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}

	prerequisites = {
		tech_mega_assembly
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes
			NOT = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
		}
	}
		
	allow = {
		exists = owner
		owner = {
			NOT = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_robot_empire = no
			}
			owner = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = { type = any value = 18 }
					is_planet_class = pc_habitat
				}
			}
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			#building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			rare_crystals = @b2_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b2_minus_minerals
			energy = @b2_half_minerals
		}
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = no
				}
			}
		}
		modifier = {
			planet_pop_assembly_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = assembling_species
				assembling_species = {
					tec_is_replicant = yes
				}
			}
		}
		modifier = {
			planet_pop_assembly_organic_add = 1
		}
	}

	planet_modifier = {
		job_replicator_add = 1
	}
	triggered_desc = {
		text = job_replicator_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_machine_assembly_plant_3 = {
	icon = building_tec_robot_assembly_plant_3
	base_buildtime = @b3_time
	can_build = no

	category = pop_assembly

	prerequisites = {
		tech_tec_giga_assembly
	}

	show_tech_unlock_if = {
		is_machine_empire = yes
	}
	
	potential = {
		exists = owner
		owner = {
			is_machine_empire = yes 
			NOT = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
		}
	}
		
	allow = {
		OR = {
			owner = { is_ai = no }
			AND = {
				num_buildings = { type = any value <= 18 }
				NOT = { is_planet_class = pc_habitat }
			}
		}
		owner = {
			NOT = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				is_machine_empire = no
			}
			owner = {
				has_valid_civic = civic_tec_machine_reimaginators
			}
			AND = {
				owner = { is_ai = yes }
				free_jobs < 1
				OR = {
					num_buildings = { type = any value = 18 }
					uses_habitat_capitals = yes
				}
			}
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			#building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			rare_crystals = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			rare_crystals = @tec_b3_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b3_minus_minerals
			energy = @b3_half_minerals
		}
	}
	
	planet_modifier = {
		job_replicator_add = 2
	}
	triggered_desc = {
		text = job_replicator_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

# ------------------------------------------------- Bioservants

# --------------- Regular
building_tec_bioservant_plant_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	category = pop_assembly

	prerequisites = { "tech_tec_bioservant" }
	
	upgrades = {
		"building_tec_bioservant_plant_2"
	}

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
			NOR = {
				has_policy_flag = bioservants_outlawed
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
	}

	allow = {
		tec_only_one_assembly_building = no
	}
	
	destroy_trigger = {
		owner = {
			OR = {
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
			
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			#building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	planet_modifier = {
		job_tec_bioengineer_add = 1
	}
	triggered_desc = {
		text = job_tec_bioengineer_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_tec_bioservant_plant_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no

	category = pop_assembly

	prerequisites = { "tech_tec_bioservant_2" }
	
	upgrades = {
		"building_tec_bioservant_plant_3"
	}
	
	potential = {
		owner = {
			is_gestalt = no
			NOR = {
				has_policy_flag = bioservants_outlawed
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
		
	}
	
	destroy_trigger = {
		owner = {
			OR = {
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
	}

	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			#building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
			food = 8
		}
	}

	planet_modifier = {
		job_tec_bioengineer_add = 1
		planet_pop_assembly_organic_add = 1
	}
	triggered_desc = {
		text = job_tec_bioengineer_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_tec_bioservant_plant_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no

	category = pop_assembly

	prerequisites = { "tech_tec_bioservant_3" }

	potential = {
		exists = owner
		owner = {
			is_gestalt = no
			NOR = {
				has_policy_flag = bioservants_outlawed
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
		
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_machine_empire = yes
				is_mechanical_empire = yes
				has_policy_flag = tec_purity_assembly
			}
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			#building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b4_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b4_upkeep
			exotic_gases = @tec_b3_rare_upkeep
			food = 8
		}
	}
	
	planet_modifier = {
		job_tec_bioengineer_add = 2
	}
	triggered_desc = {
		text = job_tec_bioengineer_effect_desc
	}
		
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

# --------------- Hive
building_tec_hive_bioservant_plant_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1
	icon = building_spawning_pool

	category = pop_assembly

	upgrades = {
		"building_tec_hive_bioservant_plant_2"
	}

	show_tech_unlock_if = {
		has_country_flag = is_hive_bioservant_empire 	
	}

	potential = {
		owner = {
			has_country_flag = is_hive_bioservant_empire 
		}
	}

	allow = {
		tec_only_one_assembly_building = no
	}
	
	destroy_trigger = {
		exists = owner
		owner = {
			is_machine_empire = yes
			is_mechanical_empire = yes
		}
	}
	
	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			#building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b1_minus_minerals
			food = @b1_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b1_minus_upkeep
			food = @b1_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b1_minus_minerals
			energy = @b1_half_minerals
		}
	}

	planet_modifier = {
		job_tec_bioengineer_drone_add = 2
	}
		
	triggered_desc = {
		text = job_tec_bioengineer_drone_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_tec_hive_bioservant_plant_2 = {
	base_buildtime = @b2_time
	can_build = no
	icon = building_spawning_pool_2

	category = pop_assembly

	prerequisites = {
		"tech_colonial_centralization"
	}

	show_tech_unlock_if = {
		has_country_flag = is_hive_bioservant_empire 	
	}
	
	upgrades = {
		"building_tec_hive_bioservant_plant_3"
	}

	potential = {
		owner = {
			has_country_flag = is_hive_bioservant_empire 
		}
	}
	
	destroy_trigger = {
		owner = {
			is_machine_empire = yes
			is_mechanical_empire = yes
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			#building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b2_minus_minerals
			food = @b2_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b2_minus_upkeep
			food = @b2_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b2_minus_minerals
			energy = @b2_half_minerals
		}
	}
	
	planet_modifier = {
		job_tec_bioengineer_drone_add = 3
	}
	
	
	
	triggered_desc = {
		text = job_tec_bioengineer_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_tec_hive_bioservant_plant_3 = {
	base_buildtime = @b3_time
	can_build = no
	icon = building_spawning_pool_3

	category = pop_assembly

	prerequisites = {
		"tech_galactic_administration"
	}

	show_tech_unlock_if = {
		has_country_flag = is_hive_bioservant_empire 	
	}

	potential = {
		owner = {
			has_country_flag = is_hive_bioservant_empire 
		}
	}
	
	destroy_trigger = {
		owner = {
			is_machine_empire = yes
			is_mechanical_empire = yes
		}
	}
	
	convert_to = {
	# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			#building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
	}
	
	planet_modifier = {
		job_tec_bioengineer_drone_add = 4
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			exotic_gases = @tec_b3_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b3_minus_minerals
			food = @b3_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b3_minus_upkeep
			food = @b3_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b3_minus_minerals
			energy = @b3_half_minerals
		}
	}
	
	triggered_desc = {
		text = job_tec_bioengineer_drone_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

# --------------- Xenogenesis
#building_tec_xenospawn_1
#building_tec_xenospawn_2
#building_tec_xenospawn_3

# ------------------------------------------------- Cloning/Organic
# --------------- Cloning
building_clone_vats = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	base_cap_amount = 1

	prerequisites = {
		tech_cloning
	}

	show_tech_unlock_if = {
		OR = {
			NOT = {
				has_ethic = "ethic_gestalt_consciousness" 
			}
			AND = {
				is_gestalt = yes
				OR = {
					AND = {
						is_hive_empire = yes
						tec_is_biohive = no
					}
					AND = {
						is_machine_empire = yes
						has_valid_civic = civic_machine_assimilator
					}
				}
			}
		}
	}

	upgrades = {
		"building_clone_vats_2"
	}

	potential = {
		exists = owner
		owner = {
			has_technology = tech_cloning 
			NOT = {
				has_policy_flag = tec_purity_assembly
			}
		}

		NOT = { has_modifier = resort_colony }
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			AND = {
				owner = { is_ai = yes }
				planet = {
					free_district_slots = 0
					free_building_slots = 0
				}
			}
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			#building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b1_minus_minerals
			food = @b1_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b1_minus_upkeep
			food = @b1_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b1_minus_minerals
			energy = @b1_half_minerals
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		job_tec_cloner_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = no
			}
		}
		text = job_tec_cloner_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = yes
			}
		}
		job_tec_cloner_drone_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = yes
			}
		}
		text = job_tec_cloner_drone_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_clone_vats_2 = {
	icon = building_tec_clone_vats_2
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_cloning_2
	}

	show_tech_unlock_if = {
		OR = {
			NOT = {
				has_ethic = "ethic_gestalt_consciousness" 
			}
			AND = {
				has_ethic = ethic_gestalt_consciousness
				OR = {
					AND = {
						is_hive_empire = yes
						tec_is_biohive = no
					}
					AND = {
						is_machine_empire = yes
						has_valid_civic = civic_machine_assimilator
					}
				}
			}
		}
	}

	upgrades = {
		"building_clone_vats_3"
	}

	potential = {
		exists = owner
		owner = {
			NOT = {
				has_policy_flag = tec_purity_assembly
			}
		}
		NOT = { has_modifier = resort_colony }
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			AND = {
				owner = { is_ai = yes }
				planet = {
					free_district_slots = 0
					free_building_slots = 0
				}
			}
		}
	}

	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			#building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b2_minus_minerals
			food = @b2_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b2_minus_upkeep
			food = @b2_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b2_minus_minerals
			energy = @b2_half_minerals
		}
	}

	planet_modifier = {
		planet_pop_assembly_organic_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		job_tec_cloner_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = no
			}
		}
		text = job_tec_cloner_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = yes
			}
		}
		job_tec_cloner_drone_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = yes
			}
		}
		text = job_tec_cloner_drone_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
	#Free resources for ais, competitive ai
	ai_resource_production = {
		trigger = { always = yes}
		exotic_gases = @b2_rare_upkeep
	}
}

building_clone_vats_3 = {
	icon = building_tec_clone_vats_3
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_cloning_3
	}

	show_tech_unlock_if = {
		OR = {
			NOT = {
				has_ethic = "ethic_gestalt_consciousness" 
			}
			AND = {
				has_ethic = ethic_gestalt_consciousness
				OR = {
					AND = {
						is_hive_empire = yes
						tec_is_biohive = no
					}
					AND = {
						is_machine_empire = yes
						has_valid_civic = civic_machine_assimilator
					}
				}
			}
		}
	}

	potential = {
		exists = owner
		owner = {
			NOT = {
				has_policy_flag = tec_purity_assembly
			}
		}
		NOT = { has_modifier = resort_colony }
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			AND = {
				owner = { is_ai = yes }
				planet = {
					free_district_slots = 0
					free_building_slots = 0
				}
			}
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			#building_clone_vats_3
			##building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			exotic_gases = @tec_b3_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b3_minus_minerals
			food = @b3_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b3_minus_upkeep
			food = @b3_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b3_minus_minerals
			energy = @b3_half_minerals
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		job_tec_cloner_add = 2
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = no
			}
		}
		text = job_tec_cloner_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = yes
			}
		}
		job_tec_cloner_drone_add = 2
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = yes
			}
		}
		text = job_tec_cloner_drone_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}

	#Free resources for ais, competitive ai
	ai_resource_production = {
		trigger = { always = yes}
		exotic_gases = @tec_b4_rare_upkeep
	}
}

# --------------- Cloning but less offensive for spiritualists and purist empires
building_tec_gene_clinic_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	category = pop_assembly
	base_cap_amount = 1

	prerequisites = {
		tech_tec_gene_1
	}

	upgrades = {
		"building_tec_gene_clinic_2"
	}

	potential = {
		exists = owner
		owner = {
			has_policy_flag = tec_purity_assembly
		}
		NOT = {
			has_modifier = resort_colony 
		}
		#restrict the ai from making bad decisions
		if = {
			limit = {
				owner = { is_ai = yes }
				has_global_flag = tec_desired_assembly_distributed
			}
			owner = {
				has_country_flag = tec_desires_to_be_pure
			}
		}
	}

	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				planet = {
					free_district_slots = 0
					free_building_slots = 0
				}
			}
			owner = {
				NOT = {
					has_policy_flag = tec_purity_assembly	
				}
			}
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			#building_tec_gene_clinic_1
		#Extreme pop growth
			#building_tec_gene_clinic_1
			building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		job_tec_cloner_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = no
			}
		}
		text = job_tec_cloner_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = yes
			}
		}
		job_tec_cloner_drone_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = yes
			}
		}
		text = job_tec_cloner_drone_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
}

building_tec_gene_clinic_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_gene_2
	}

	show_tech_unlock_if = {
		has_policy_flag = tec_purity_assembly
	}

	upgrades = {
		"building_tec_gene_clinic_3"
	}

	potential = {
		exists = owner
		owner = {
			has_policy_flag = tec_purity_assembly
		}
		NOT = { has_modifier = resort_colony }
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				planet = {
					free_district_slots = 0
					free_building_slots = 0
				}
			}
			owner = {
				NOT = {
					has_policy_flag = tec_purity_assembly	
				}
			}
		}
	}

	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			#building_tec_gene_clinic_2
		#Extreme pop growth
			#building_tec_gene_clinic_2
			building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
	}

	planet_modifier = {
		planet_pop_assembly_organic_add = 1
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		job_tec_cloner_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = no
			}
		}
		text = job_tec_cloner_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = yes
			}
		}
		job_tec_cloner_drone_add = 1
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = yes
			}
		}
		text = job_tec_cloner_drone_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}
	#Free resources for ais, competitive ai
	ai_resource_production = {
		trigger = { always = yes}
		exotic_gases = @b2_rare_upkeep
	}
}

building_tec_gene_clinic_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		tech_tec_gene_3
	}

	show_tech_unlock_if = {
		has_policy_flag = tec_purity_assembly
	}

	potential = {
		exists = owner
		owner = {
			has_policy_flag = tec_purity_assembly
		}
		NOT = { has_modifier = resort_colony }
	}

	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				owner = { is_ai = yes }
				planet = {
					free_district_slots = 0
					free_building_slots = 0
				}
			}
			owner = {
				NOT = {
					has_policy_flag = tec_purity_assembly	
				}
			}
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			#building_tec_clone_vats_biohive_3
			#building_tec_gene_clinic_3
		#Extreme pop growth
			#building_tec_gene_clinic_3
			building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			exotic_gases = @tec_b3_rare_upkeep
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = no
			}
		}
		job_tec_cloner_add = 2
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = no
			}
		}
		text = job_tec_cloner_effect_desc
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				is_gestalt = yes
			}
		}
		job_tec_cloner_drone_add = 2
	}
	triggered_desc = {
		trigger = {
			owner = {
				is_gestalt = yes
			}
		}
		text = job_tec_cloner_drone_effect_desc
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 20
	}

	#Free resources for ais, competitive ai
	ai_resource_production = {
		trigger = { always = yes}
		exotic_gases = @tec_b4_rare_upkeep
	}
}

# --------------- Hiveminds
building_spawning_pool = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly
	
	upgrades = {
		"building_spawning_pool_2"
	}
	
	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes 
			tec_hive_can_have_spawningpools = yes
		}
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}
	
	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no 
				tec_is_biohive = yes
				tec_hive_can_have_spawningpools = no
			}
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			#building_spawning_pool
			building_tec_biohive_spawning_pool_1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b1_minus_minerals
			food = @b1_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b1_minus_upkeep
			food = @b1_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b1_minus_minerals
			energy = @b1_half_minerals
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	planet_modifier = {
		job_spawning_drone_add = 1
	}
	triggered_desc = {
		trigger = {
			NAND = {
				exists = owner
				owner = {
					has_origin = origin_necrophage
				}
				exists = growing_species
				growing_species = {
					NOT = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		text = job_spawning_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
			}
			exists = growing_species
			growing_species = {
				NOT = {
					has_trait = trait_hive_mind
				}
			}
		}
		text = job_spawning_drone_necrophage_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_spawning_pool_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_colonial_centralization"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
	}

	upgrades = {
		"building_spawning_pool_3"
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_hive_can_have_spawningpools = yes
		}
		OR = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	allow = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_hive_can_have_spawningpools = yes
		}
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				tec_is_biohive = yes
				tec_hive_can_have_spawningpools = no
			}
		}
	}

	convert_to = {
		# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			#building_spawning_pool_2
			building_tec_biohive_spawning_pool_2
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b2_minus_minerals
			food = @b2_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b2_minus_upkeep
			food = @b2_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b2_minus_minerals
			energy = @b2_half_minerals
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	planet_modifier = {
		job_spawning_drone_add = 1
		planet_pop_assembly_organic_add = 1
	}
	
	triggered_desc = {
		trigger = {
			NAND = {
				exists = owner
				owner = {
					has_origin = origin_necrophage
				}
				exists = growing_species
				growing_species = {
					NOT = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		text = job_spawning_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
			}
			exists = growing_species
			growing_species = {
				NOT = {
					has_trait = trait_hive_mind
				}
			}
		}
		text = job_spawning_drone_necrophage_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_spawning_pool_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_galactic_administration"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
	}

	allow = {
		has_major_upgraded_capital = yes
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_hive_can_have_spawningpools = yes
		}
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				tec_is_biohive = yes
				tec_hive_can_have_spawningpools = no
			}
		}
	}

	convert_to = {
		# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			##building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			#building_spawning_pool_3
			building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			exotic_gases = @tec_b3_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b3_minus_minerals
			food = @b3_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b3_minus_upkeep
			food = @b3_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b3_minus_minerals
			energy = @b3_half_minerals
		}
	}
	triggered_desc = {
		text = spawning_pool_tooltip
	}

	planet_modifier = {
		job_spawning_drone_add = 2
	}
	triggered_desc = {
		trigger = {
			NAND = {
				exists = owner
				owner = {
					has_origin = origin_necrophage
				}
				exists = growing_species
				growing_species = {
					NOT = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		text = job_spawning_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
			}
			exists = growing_species
			growing_species = {
				NOT = {
					has_trait = trait_hive_mind
				}
			}
		}
		text = job_spawning_drone_necrophage_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# --------------- Biohives
building_tec_biohive_spawning_pool_1 = {
	base_buildtime = @b1_time
	position_priority = 20		# Assembly/growth
	base_cap_amount = 1

	category = pop_assembly
	
	upgrades = {
		"building_tec_biohive_spawning_pool_2"
	}
	
	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = yes
			tec_hive_can_have_spawningpools = yes
		}
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}
	
	allow = {
		tec_only_one_assembly_building = no
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				tec_is_biohive = no
				tec_hive_can_have_spawningpools = no
			}
		}
	}

	convert_to = {
		# T1
		# robotics
			building_robot_assembly_plant
			building_mecha_monastery_1
			building_hive_robot_assembly_plant
		# machine
			building_machine_assembly_plant
		# Bioservant
			building_tec_bioservant_plant_1
			building_tec_hive_bioservant_plant_1
		# Cloning
			building_clone_vats
			#building_tec_clone_vats_biohive_1
			building_tec_gene_clinic_1
		#Extreme pop growth
			building_tec_gene_clinic_1
			building_spawning_pool
			#building_tec_biohive_spawning_pool_1
	}

	planet_modifier = {
		job_spawning_drone_add = 1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b1_minus_minerals
			food = @b1_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b1_minus_upkeep
			food = @b1_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b1_minus_minerals
			energy = @b1_half_minerals
		}
	}

	triggered_desc = {
		trigger = {
			NAND = {
				exists = owner
				owner = {
					has_origin = origin_necrophage
				}
				exists = growing_species
				growing_species = {
					NOT = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		text = job_spawning_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
			}
			exists = growing_species
			growing_species = {
				NOT = {
					has_trait = trait_hive_mind
				}
			}
		}
		text = job_spawning_drone_necrophage_effect_desc
	}
	triggered_desc = {
		text = spawning_pool_tooltip
	}

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_tec_biohive_spawning_pool_2 = {
	base_buildtime = @b2_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_colonial_centralization"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
		tec_is_biohive = yes
	}

	upgrades = {
		"building_tec_biohive_spawning_pool_3"
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = yes
			tec_hive_can_have_spawningpools = yes
		}
		OR = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	allow = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = yes
			tec_hive_can_have_spawningpools = yes
		}
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				tec_hive_can_have_spawningpools = no
				tec_is_biohive = no
			}
		}
	}

	convert_to = {
	# T2
		# robotics
			building_robot_assembly_complex
			building_mecha_monastery_2
			building_hive_robot_assembly_plant_2
		# machine
			building_machine_assembly_complex
		# Bioservant
			building_tec_bioservant_plant_2
			building_tec_hive_bioservant_plant_2
		# Cloning
			building_clone_vats_2
			#building_tec_clone_vats_biohive_2
			building_tec_gene_clinic_2
		#Extreme pop growth
			building_tec_gene_clinic_2
			building_spawning_pool_2
			#building_tec_biohive_spawning_pool_2
	}
		
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			energy = @b2_upkeep
			#food = @b1_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b2_minus_minerals
			food = @b2_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b2_minus_upkeep
			food = @b2_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b2_minus_minerals
			energy = @b2_half_minerals
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	planet_modifier = {
		job_spawning_drone_add = 1
		planet_pop_assembly_organic_add = 1
	}
	triggered_desc = {
		trigger = {
			NAND = {
				exists = owner
				owner = {
					has_origin = origin_necrophage
				}
				exists = growing_species
				growing_species = {
					NOT = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		text = job_spawning_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
			}
			exists = growing_species
			growing_species = {
				NOT = {
					has_trait = trait_hive_mind
				}
			}
		}
		text = job_spawning_drone_necrophage_effect_desc
	}


	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_tec_biohive_spawning_pool_3 = {
	base_buildtime = @b3_time
	position_priority = 20		# Assembly/growth
	can_build = no
	category = pop_assembly

	prerequisites = {
		"tech_galactic_administration"
	}

	show_tech_unlock_if = {
		tec_hive_can_have_spawningpools = yes
		tec_is_biohive = yes
	}

	allow = {
		has_major_upgraded_capital = yes
	}

	potential = {
		exists = owner
		owner = {
			is_hive_empire = yes
			tec_is_biohive = yes
			tec_hive_can_have_spawningpools = yes
		}
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				tec_is_biohive = no
				tec_hive_can_have_spawningpools = no
			}
		}
	}

	convert_to = {
	# T3
		# robotics
			building_robot_assembly_plant_3
			building_mecha_monastery_3
			building_hive_robot_assembly_plant_3
		# machine
			building_machine_assembly_plant_3
		# Bioservant
			building_tec_bioservant_plant_3
			building_tec_hive_bioservant_plant_3
		# Cloning
			building_clone_vats_3
			##building_tec_clone_vats_biohive_3
			building_tec_gene_clinic_3
		#Extreme pop growth
			building_tec_gene_clinic_3
			building_spawning_pool_3
			#building_tec_biohive_spawning_pool_3
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			#food = @b3_upkeep
			exotic_gases = @tec_b3_rare_upkeep
		}
		# Special resource civics
		cost = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			minerals = @b3_minus_minerals
			food = @b3_half_minerals
		}
		upkeep = {
			trigger = {
				owner = { tec_is_bioarch_empire = yes }
			}
			energy = @b3_minus_upkeep
			food = @b3_half_upkeep
		}
		cost = {
			trigger = {
				owner = { has_valid_civic = civic_tec_machine_digitalization }
			}
			minerals = @b3_minus_minerals
			energy = @b3_half_minerals
		}
	}

	triggered_desc = {
		text = spawning_pool_tooltip
	}

	planet_modifier = {
		job_spawning_drone_add = 2
	}
	
	triggered_desc = {
		trigger = {
			NAND = {
				exists = owner
				owner = {
					has_origin = origin_necrophage
				}
				exists = growing_species
				growing_species = {
					NOT = {
						has_trait = trait_hive_mind
					}
				}
			}
		}
		text = job_spawning_drone_effect_desc
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
			}
			exists = growing_species
			growing_species = {
				NOT = {
					has_trait = trait_hive_mind
				}
			}
		}
		text = job_spawning_drone_necrophage_effect_desc
	}
	

	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# ------------------------------------------------- Mixed
#building_tec_mechadendrite_assembler_1
#building_tec_mechadendrite_assembler_2

#building_tec_replicant_printer_1
#building_tec_replicant_printer_2



# ----------------------------------------------------------------------------------
# TRANSFORMATIONS
# ----------------------------------------------------------------------------------

# --------------- Splicers
building_tec_splicechamber = {
	icon = building_tec_splicechamber
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 30		# Unique

	category = pop_assembly
	
	potential = {
		always = no
		exists = owner
		owner = {
			has_country_flag = tec_can_genesplice
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}
	
	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		NOR = {
			is_planet_class = pc_hive
			is_planet_class = pc_machine
		}
		OR = {
			owner = { is_ai = no }
			any_owned_species = {
				species_can_be_necrophaged = yes
			}
		}
		owner = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = {
						has_country_flag = tec_can_genesplice
					}
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
			owner = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
		}
	}
	
	planet_modifier = {
		planet_stability_add = 5
		job_tec_spliced_add = 3
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	upgrades = {
		building_tec_splicechamber_2
	}
	
	prerequisites = {
	}
	
	triggered_desc = {
		text = job_tec_spliced_effect_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = no }
		}
	}
	triggered_desc = {
		text = job_tec_spliced_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = yes }
		}
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_tec_splicechamber_2 = {
	icon = building_tec_splicechamber_2
	base_buildtime = @b3_time
	can_build = no
	position_priority = 30		# Unique

	category = pop_assembly
	
	potential = {
		always = no
		exists = owner
		owner = {
			has_country_flag = tec_can_genesplice
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}
	
	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		NOR = {
			is_planet_class = pc_hive
			is_planet_class = pc_machine
		}
		OR = {
			owner = { is_ai = no }
			any_owned_species = {
				species_can_be_necrophaged = yes
			}
		}
		owner = {
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_tec_hive_splicers
				has_valid_civic = civic_tec_hive_splicers_cyborg
				is_machine_empire = yes
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = {
						has_country_flag = tec_can_genesplice
					}
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
			owner = {
				OR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
		}
	}
	
	planet_modifier = {
		planet_stability_add = 10
		job_tec_spliced_add = 6
		job_tec_spliced_per_pop = 0.02 # 1 per 50 REVISAR
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
	}

	prerequisites = {
		tech_glandular_acclimation
	}
	
	show_tech_unlock_if = {
		always = no
	}
	
	triggered_desc = {
		text = job_tec_spliced_effect_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = no }
		}
	}
	triggered_desc = {
		text = job_tec_spliced_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = { is_lithoid_empire = yes }
		}
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# --------------- Necrophages
building_necrophage_elevation_chamber = {
	icon = building_chamber_of_elevation_1
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 30		# Unique
	skip_automation_upgrading = yes #colony automation will not try to upgrade this

	category = pop_assembly
	
	upgrades = {
		building_necrophage_house_of_apotheosis
	}
	
	prerequisites = {
	}
	
	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
		}
	}
	
	allow = {
		custom_tooltip = {
			fail_text = NO_CULTURE_SHOCK
			NOT = { has_modifier = planet_culture_shock }
		}
		if = {
			limit = {
				exists = owner
				owner = {
					is_hive_empire = no 
				}
			}
			NOT = { is_planet_class = pc_hive }
		}
		NOT = {
			is_planet_class = pc_machine
		}
		hidden_trigger = {
			if = {
				limit = {
					exists = owner
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
				num_pops > 5
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	planet_modifier = {
		job_necro_apprentice_add = 1
	}
	
	#you are not meant to run out of necrophaging pops on a planet with this building
	triggered_planet_modifier = {
		potential = {
			num_organic_pops_per_year >= 0.2
		}
		job_necro_apprentice_add = 1
	}
	triggered_planet_modifier = {
		potential = {
			num_organic_pops_per_year >= 0.3
		}
		job_necro_apprentice_add = 1
	}
		
	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_elevation_chamber_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_elevation_chamber_desc_hive
	}
	
	triggered_desc = {
		text = job_necro_apprentice_effect_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = yes
			}
		}
	}

	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}

	triggered_desc = {
		text = building_necrophage_elevation_chamber_scaling_tooltip
	}
	
	is_essential = yes
}

building_necrophage_house_of_apotheosis = {
	icon = building_chamber_of_elevation_2
	base_buildtime = @b3_time
	can_build = no
	position_priority = 30		# Unique

	category = pop_assembly
	
	prerequisites = {
		tech_glandular_acclimation
	}
	
	show_tech_unlock_if = {
		has_origin = origin_necrophage
		has_trait = trait_necrophage
	}

	potential = {
		exists = owner
		owner = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
			NOR = {
				has_valid_civic = civic_fanatic_purifiers
				has_valid_civic = civic_hive_devouring_swarm
			}
			is_ai = no #the AI will just kill all its necrophytes
		}
	}
	
	allow = {
		hidden_trigger = {
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_necrophage }
					NOT = { has_trait = trait_necrophage }
				}
			}
			AND = {
				owner = { is_ai = yes }
				NOT = {
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
		}
	}
	
	planet_modifier = {
		job_necro_apprentice_add = 6
	}

	triggered_planet_modifier = {
		potential = {
			is_planet_class = pc_hive
			exists = owner
			owner = { is_hive_empire = yes }
		}
		job_necro_apprentice_add = 4
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
	}

	desc = {
		trigger = {
			OR = {
				NOT = { exists = owner }
				owner = { is_hive_empire = no }
			}
		}
		text = building_necrophage_house_of_apotheosis_desc
	}
	desc = {
		trigger = {
			exists = owner
			owner = { is_hive_empire = yes }
		}
		text = building_necrophage_house_of_apotheosis_desc_hive
	}

	triggered_desc = {
		text = job_necro_apprentice_effect_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = no
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = no
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = job_necro_apprentice_effect_hive_lithoid_desc
		trigger = {
			exists = owner
			owner = {
				is_lithoid_empire = yes
				is_hive_empire = yes
			}
		}
	}
	triggered_desc = {
		text = necrophage_elevation_timer_tooltip
		trigger = {
			has_planet_flag = necrophage_elevation_timer
		}
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# ----------------------------------------------------------------------------------
# ZOMBIES
# ----------------------------------------------------------------------------------
# --------------- Zombies regular

# --------------- Zombies megacorp
building_posthumous_employment_center = {
	base_buildtime = @b1_time
	base_cap_amount = 1

	category = pop_assembly

	potential = {
		exists = owner
		OR = {
			owner = { is_ai = no }
			NOT = { exists = assembling_species }
			assembling_species = { is_organic_species = yes }
		}
		OR = {
			owner = { is_ai = no }
			NAND = {
				free_district_slots = 0
				free_building_slots <= 1
				free_housing <= 0
				free_jobs <= 0
			}
		}
		owner = {
			is_regular_empire = yes
			tec_is_zombie_empire = yes
		}
	}

	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				NOT = {
					tec_is_zombie_empire = yes 
					is_regular_empire = yes
				}
			}
			AND = {
				owner = { is_ai = yes }
				free_district_slots = 0
				free_building_slots = 0
				free_housing <= 0
				free_jobs <= 0
			}
		}
	}

	planet_modifier = {
		job_reassigner_add = 1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}

	triggered_desc = {
		text = job_reassigner_effect_desc
	}
	triggered_desc = {
		trigger = {
			has_building = building_robot_assembly_plant
		}
		text = tooltip_organic_and_artificial_assembly_warning
	}
}

# --------------- Z hives

# --------------- Z machines

# --------------- Z biohives

# ----------------------------------------------------------------------------------
# BOOSTERS
# ----------------------------------------------------------------------------------
# --------------- Clinics
building_clinic = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity

	potential = {
		owner = { is_regular_empire = yes }
		NOT = { has_modifier = slave_colony }
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = { is_ai = yes }
			}
		}
	}
	
	planet_modifier = {
		job_healthcare_add = 2
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = public_healthcare }
		}
		modifier = {
			job_healthcare_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	prerequisites = {
		"tech_frontier_health"
	}
	
	upgrades = {
		"building_hospital"
	}
	
	triggered_desc = {
		text = job_healthcare_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_hospital = {
	base_buildtime = @b2_time
	position_priority = 30		# Unique
	can_build = no

	category = amenity

	potential = {
		owner = { is_regular_empire = yes }
		NOT = { has_modifier = slave_colony }
	}
	
	allow = {
		has_upgraded_capital = yes
	}
	
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = { is_ai = yes }
			}
		}
	}
	
	planet_modifier = {
		job_healthcare_add = 4
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = public_healthcare }
		}
		modifier = {
			job_healthcare_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
		upkeep = {
				trigger = {
				owner = { has_policy_flag = public_healthcare }
			}
			energy = 2
		}
	}
	
	prerequisites = {
		"tech_frontier_hospital"
	}

	upgrades = {
		building_hospital_2
	}
	
	show_tech_unlock_if = {
		is_regular_empire = yes
	}

	triggered_desc = {
		text = job_healthcare_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

building_hospital_2 = {
	base_buildtime = @b2_time
	can_build = no
	position_priority = 30		# Unique

	category = amenity

	potential = {
		owner = { is_regular_empire = yes }
		NOT = { has_modifier = slave_colony }
	}
	
	allow = {
		has_upgraded_capital = yes
	}
	
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			has_modifier = slave_colony
			AND = {
				buildings_stop_pop = yes
				owner = { is_ai = yes }
			}
		}
	}
	
	planet_modifier = {
		job_healthcare_add = 6
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { has_policy_flag = public_healthcare }
		}
		modifier = {
			job_healthcare_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b3_minerals
			exotic_gases = @b3_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
			exotic_gases = @tec_b3_rare_upkeep
		}
		upkeep = {
				trigger = {
				owner = { has_policy_flag = public_healthcare }
			}
			energy = 2
		}
	}
	
	prerequisites = {
		"tech_tec_frontier_hospital_2"
	}
	
	show_tech_unlock_if = {
		is_regular_empire = yes
	}

	triggered_desc = {
		text = job_healthcare_effect_desc
	}
	
	ai_resource_production = {
		trigger = { always = yes }
		alloys = 5
	}
}

# --------------- Cyberclinics
#building_tec_cyberhospital_1
#building_tec_cyberhospital_2
#building_tec_cyberhospital_3

# --------------- Toxoids
building_toxic_bath = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity
	icon = building_toxic_bath

	potential = {
		NOT = { has_modifier = slave_colony }
		owner = {
			is_regular_empire = yes
			OR = {
				has_valid_civic = civic_toxic_baths
				has_valid_civic = civic_corporate_toxic_baths
			}
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					is_regular_empire = no
					NOR = {
						has_valid_civic = civic_toxic_baths
						has_valid_civic = civic_corporate_toxic_baths
					}
				}
			}
			has_modifier = slave_colony
		}
	}
	planet_modifier = {
		job_bath_attendant_add = @b1_jobs
	}

	triggered_desc = {
		trigger = {
			exists = owner
			owner = { is_megacorp = no }
		}
		text = job_toxic_baths_effect_desc
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
}

building_toxic_bath_hive = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity
	icon = building_toxic_bath_hive

	potential = {
		owner = {
			is_hive_empire = yes
			has_valid_civic = civic_hive_toxic_baths
		}
	}
	destroy_trigger = {
		exists = owner
		owner = {
			OR = {
				is_hive_empire = no
				NOT = { has_valid_civic = civic_hive_toxic_baths }
				AND = {
					is_ai = yes
					prev = { has_any_industry_district = no }
				}
			}
		}
	}
	planet_modifier = {
		job_bath_attendant_hive_add = @b1_jobs
	}

	triggered_desc = {
		trigger = {
			exists = owner
		}
		text = job_toxic_baths_effect_hive_desc
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
}

building_toxic_bath_machine = {
	base_buildtime = @b1_time
	position_priority = 30		# Unique
	base_cap_amount = 1

	category = amenity
	icon = building_toxic_bath_machine

	potential = {
		owner = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_toxic_baths
		}
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_machine_empire = no }
			owner = {
				NOT = { has_valid_civic = civic_machine_toxic_baths }
			}
		}
	}
	planet_modifier = {
		job_bath_attendant_machine_add = @b1_jobs
	}

	triggered_desc = {
		trigger = {
			exists = owner
		}
		text = job_toxic_baths_effect_machine_desc
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
}

# OTHERS
# -----------------------------------------
# Progenitor - NO LONGER ASSEMBLY BASED
building_offspring_nest = {
	base_buildtime = @b1_time
	base_cap_amount = 1
	position_priority = 10		# Important

	category = amenity

	potential = {
		owner = { has_origin = origin_progenitor_hive }
		or = {
			num_buildings = { type = any value < 15 }
			owner = { is_ai = no }
		}
	}

	destroy_trigger = {
		exists = owner
		owner = { NOT = { has_origin = origin_progenitor_hive } }
	}

	planet_modifier = {
		job_offspring_drone_add = 1
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = 2
		}
	}
	triggered_desc = {
		trigger = {
			exists = owner
			owner = { has_origin = origin_progenitor_hive }
		}
		text = job_offspring_drone_effect_desc
	}
	triggered_desc = {
		text = offspring_nest_tooltip
	}
}

# Clone Army
building_clone_army_clone_vat = {
	icon = building_ancient_relics
	base_buildtime = 90
	position_priority = 40		# Playstyle

	empire_limit = {
		base = 5
	}

	category = pop_assembly

	potential = {
		exists = owner
		owner = {
			has_origin = origin_clone_army
			NOT = {
				has_country_flag = clone_army_fertility_unlocked
			}
		}
		if = {
			limit = {
				owner = { is_ai = yes }
			}
			NOR = {
				has_building = building_clone_army_clone_vat
				AND = {
					exists = assembling_species
					assembling_species = { is_robotic_species = yes }
				}
			}
		}
	}

	destroy_trigger = {
		exists = owner
		OR = {
			owner = {
				OR = {
					NOT = { has_origin = origin_clone_army }
					is_synthetic_empire = yes
					has_country_flag = clone_army_fertility_unlocked
				}
			}
		}
	}

	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { is_ai = yes }
		}
		planet_pop_assembly_organic_add = 2
	}

	# Add growth from 0 to 25 depending on 'clone_pops_missing_per_vat'.
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 0 } }
		modifier = { planet_pop_assembly_organic_add = 2 }
	}
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 1 } }
		modifier = { planet_pop_assembly_organic_add = 3 }
	}
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 4 } }
		modifier = { planet_pop_assembly_organic_add = 2 }
	}
	triggered_planet_modifier = {
		potential = { check_variable = { which = clone_pops_missing_per_vat value > 8 } }
		modifier = { planet_pop_assembly_organic_add = 3 }
	}
	triggered_planet_modifier = {
		potential = {
			years_passed > 10
			check_variable = { which = clone_pops_missing_per_vat value > 12 }
		}
		modifier = { planet_pop_assembly_organic_add = 5 }
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
		}
		upkeep = {
			energy = @b2_upkeep
		}
	}

	upgrades = {
	}

	prerequisites = {
	}

	triggered_desc = {
		text = building_clone_army_clone_vat_effect_desc
	}

	is_essential = yes
}

#building_tec_repeatable_clone_army_vat