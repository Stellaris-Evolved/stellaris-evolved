# common\buildings\zzz_evolved_assembly_buildings.txt

# ----------------------------------------
	#A S S E M B L Y	B U I L D I N G S
# ----------------------------------------

# -------------- Rules
# Conversion
	# T1
		# robotics
		#building_robot_assembly_plant
		#building_mecha_monastery_1
		#building_hive_robot_assembly_plant

		# machine
		#building_machine_assembly_plant

		# Bioservant
		#building_tec_bioservant_plant_1
		#building_tec_hive_bioservant_plant_1

		# Cloning
		#building_clone_vats
		#building_tec_clone_vats_biohive_1
		#building_tec_gene_clinic_1

		#Extreme pop growth
		#building_tec_gene_clinic_1
		#building_spawning_pool
		#building_tec_biohive_spawning_pool_1
		#building_tec_lithohive_spawning_pool_1
		#building_tec_biomech_hive_spawning_pool_1

		# Other
		#building_tec_mechadendrite_assembler_1

	# T2
		# robotics
		#building_robot_assembly_complex
		#building_mecha_monastery_2
		#building_hive_robot_assembly_plant_2

		# machine
		#building_machine_assembly_complex

		# Bioservant
		#building_tec_bioservant_plant_2
		#building_tec_hive_bioservant_plant_2

		# Cloning
		#building_clone_vats_2
		##building_tec_clone_vats_biohive_2
		#building_tec_gene_clinic_2

		#Extreme pop growth
		#building_tec_gene_clinic_2
		#building_spawning_pool_2
		#building_tec_biohive_spawning_pool_2
		#building_tec_lithohive_spawning_pool_2
		#building_tec_biomech_hive_spawning_pool_2

		# Other
		#building_tec_mechadendrite_assembler_2

	# T3
		# robotics
		#building_robot_assembly_plant_3
		#building_mecha_monastery_3
		##building_hive_robot_assembly_plant_3

		# machine
		#building_machine_assembly_plant_3

		# Bioservant
		#building_tec_bioservant_plant_3
		#building_tec_hive_bioservant_plant_3
		#building_tec_gene_clinic_3

		# Cloning
		#building_clone_vats_3
		##building_tec_clone_vats_biohive_2

		#Extreme pop growth
		#building_tec_gene_clinic_3
		#building_spawning_pool_3
		#building_tec_biohive_spawning_pool_3
		#building_tec_lithohive_spawning_pool_3
		#building_tec_biomech_hive_spawning_pool_3

		# Other
		#building_tec_mechadendrite_assembler_3
# /

# Future ones
	# building_ancient_machine_assembly_1
	# building_ancient_machine_assembly_2
# /

# ----------------------------------------------------------------------------------
# Assembly
# ----------------------------------------------------------------------------------

# ------------------------------------------------- Synthetics
 # --------------- Regular
	building_robot_assembly_plant = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = { "tech_robotic_workers" }

		show_tech_unlock_if = {
			is_regular_empire = yes
			tec_is_machine_cult = no
		}

		upgrades = {
			"building_robot_assembly_complex"
		}

		potential = {
			exists = owner
			owner = {
				is_regular_empire = yes # TODO: MACHINE AGE
				is_individual_machine = no
				tec_is_machine_cult = no
				NOR = {
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = roboticist
			default_trigger = "
				is_machine_empire = yes
			"
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 1
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_robot_assembly_complex = {
		base_buildtime = @b2_time
		icon = building_machine_assembly_complex
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = { "tech_droid_workers" }

		show_tech_unlock_if = {
			is_regular_empire = yes
			is_individual_machine = no
			tec_is_machine_cult = no
		}

		upgrades = {
			"building_robot_assembly_plant_3"
		}

		potential = {
			exists = owner
			owner = {
				is_regular_empire = yes
				tec_is_machine_cult = no
				NOR = {
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}


			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = roboticist
			default_trigger = "
				is_machine_empire = yes
			"
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 2
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_robot_assembly_plant_3 = {
		base_buildtime = @b3_time
		icon = building_tec_robot_assembly_plant_3
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_synthetic_workers
		}

		show_tech_unlock_if = {
			is_regular_empire = yes
			is_individual_machine = no
			tec_is_machine_cult = no
		}

		potential = {
			exists = owner
			owner = {
				is_regular_empire = yes
				tec_is_machine_cult = no
				NOR = {
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = roboticist
			default_trigger = "
				is_machine_empire = yes
			"
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 3
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Hive
	building_hive_robot_assembly_plant = {
		base_buildtime = @b1_time
		icon = building_robot_assembly_plant
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		prerequisites = {
			"tech_robotic_workers"
		}

		show_tech_unlock_if = {
			is_hive_empire = yes
			tec_is_biohive = no
			tec_is_biomech_hive = no
		}

		upgrades = {
			"building_hive_robot_assembly_plant_2"
		}

		category = pop_assembly

		potential = {
			exists = owner
			owner = {
				is_hive_empire = yes
				tec_is_biohive = no
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
					has_policy_flag = robots_outlawed
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_replicator_drone
			default_trigger = "
				is_machine_empire = yes
			"
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 1
			type = hive
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_hive_robot_assembly_plant_2 = {
		base_buildtime = @b2_time
		icon = building_machine_assembly_complex
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = { "tech_droid_workers" }

		show_tech_unlock_if = {
			is_hive_empire = yes
			tec_is_biohive = no
			tec_is_biomech_hive = no
		}

		upgrades = {
			"building_hive_robot_assembly_plant_3"
		}

		potential = {
			exists = owner
			OR = {
				owner = { is_ai = no }
				free_building_slots > 0
			}
			owner = {
				is_hive_empire = yes
				tec_is_biohive = no
				tec_is_biomech_hive = no
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_replicator_drone
			default_trigger = "
				is_machine_empire = yes
			"
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = ""
		}


		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 2
			type = hive
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_hive_robot_assembly_plant_3 = {
		base_buildtime = @b3_time
		icon = building_tec_robot_assembly_plant_3
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_synthetic_workers_hive
		}

		show_tech_unlock_if = {
			is_hive_empire = yes
			tec_is_biohive = no
			tec_is_biomech_hive = no
		}

		potential = {
			exists = owner
			OR = {
				owner = { is_ai = no }
				free_building_slots > 0
			}
			owner = {
				is_hive_empire = yes
				tec_is_biohive = no
				tec_is_biomech_hive = no
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no

		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_replicator_drone
			default_trigger = "
				is_machine_empire = yes
			"
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 3
			type = hive
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	# --------------- Mechanicus
	building_mecha_monastery_1 = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = {
			"tech_robotic_workers"
		}

		upgrades = {
			building_mecha_monastery_2
		}

		show_tech_unlock_if = {
			is_individual_machine = no
			tec_is_machine_cult = yes
		}

		potential = {
			exists = owner
			owner = {
				is_individual_machine = no
				tec_is_machine_cult = yes
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		planet_modifier = {
			pop_ethic_spiritualist_attraction_mult = 0.05
			pop_ethic_industrialist_attraction_mult = 0.05
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_techno_priest
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 1
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_mecha_monastery_2 = {
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = { "tech_droid_workers" }

		show_tech_unlock_if = {
			is_individual_machine = no
			tec_is_machine_cult = yes
		}

		upgrades = {
			"building_mecha_monastery_3"
		}

		potential = {
			exists = owner
			owner = {
				is_individual_machine = no
				tec_is_machine_cult = yes
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		planet_modifier = {
			pop_ethic_spiritualist_attraction_mult = 0.10
			pop_ethic_industrialist_attraction_mult = 0.10
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_techno_priest
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = ""
		}


		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 2
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_mecha_monastery_3 = {
		base_buildtime = @b3_time
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_synthetic_workers
		}

		show_tech_unlock_if = {
			is_individual_machine = no
			tec_is_machine_cult = yes
		}

		potential = {
			exists = owner
			owner = {
				is_individual_machine = no
				tec_is_machine_cult = yes
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = rare_crystals
			}
		}

		planet_modifier = {
			pop_ethic_spiritualist_attraction_mult = 0.15
			pop_ethic_industrialist_attraction_mult = 0.15
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_techno_priest
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 3
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	# --------------- Machines
	building_machine_assembly_plant = {
		base_buildtime = @b1_time
		icon = building_robot_assembly_plant
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			building_machine_assembly_complex
		}

		show_tech_unlock_if = {
			OR = {
				is_machine_empire = yes
				is_individual_machine = yes
			}
			tec_is_machine_cult = no
		}

		potential = {
			exists = owner
			owner = {
				OR = {
					is_machine_empire = yes
					is_individual_machine = yes
				}
				tec_is_machine_cult = no
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}

			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = "owner = { is_machine_empire = yes }"
			}
		}

		inline_script = {
			script = jobs/tec_replicator
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = replicator
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = "
				owner = { is_machine_empire = yes }
			"
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 1
			type = all
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_machine_assembly_complex = {
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			building_machine_assembly_plant_3
		}

		show_tech_unlock_if = {
			OR = {
				is_machine_empire = yes
				is_individual_machine = yes
			}
			tec_is_machine_cult = no
		}

		prerequisites = {
			tech_mega_assembly
		}

		potential = {
			exists = owner
			owner = {
				OR = {
					is_machine_empire = yes
					is_individual_machine = yes
				}
				tec_is_machine_cult = no
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 2
				mult = value:tec_assembly_cost_scaling_building
				trigger = "owner = { is_machine_empire = yes }"
			}

			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = "owner = { is_individual_machine = yes }"
			}
		}

		inline_script = {
			script = jobs/tec_replicator
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = replicator
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 2
			trigger = "owner = { is_machine_empire = yes }"
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = "owner = { is_individual_machine = yes }"
			default = no
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 2
			type = all
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_machine_assembly_plant_3 = {
		icon = building_tec_robot_assembly_plant_3
		base_buildtime = @b3_time
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = {
			tech_tec_giga_assembly
		}

		show_tech_unlock_if = {
			OR = {
				is_machine_empire = yes
				is_individual_machine = yes
			}
			tec_is_machine_cult = no
		}

		potential = {
			exists = owner
			owner = {
				OR = {
					is_machine_empire = yes
					is_individual_machine = yes
				}
				tec_is_machine_cult = no
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 2
				mult = value:tec_assembly_cost_scaling_building
				trigger = "owner = { is_machine_empire = yes }"
			}
		}

		inline_script = {
			script = jobs/tec_replicator
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = replicator
		}

		inline_script = {
			script = jobs/tec_roboticist
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 2
			trigger = "owner = { is_machine_empire = yes }"
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 3
			type = all
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	# --------------- Mecha Machines

	building_mecha_machine_monastery_1 = {
		icon = building_mecha_monastery_1
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			building_mecha_machine_monastery_2
		}

		show_tech_unlock_if = {
			is_individual_machine = yes
			tec_is_machine_cult = yes
		}

		potential = {
			exists = owner
			owner = {
				is_individual_machine = yes
				tec_is_machine_cult = yes
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		planet_modifier = {
			pop_ethic_spiritualist_attraction_mult = 0.05
			pop_ethic_industrialist_attraction_mult = 0.05
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_techno_priest
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 1
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_mecha_machine_monastery_2 = {
		icon = building_mecha_monastery_2
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = { "tech_mega_assembly" }

		show_tech_unlock_if = {
			is_individual_machine = yes
			tec_is_machine_cult = yes
		}

		upgrades = {
			"building_mecha_machine_monastery_3"
		}

		potential = {
			exists = owner
			owner = {
				is_individual_machine = yes
				tec_is_machine_cult = yes
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		planet_modifier = {
			pop_ethic_spiritualist_attraction_mult = 0.10
			pop_ethic_industrialist_attraction_mult = 0.10
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_techno_priest
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 2
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_mecha_machine_monastery_3 = {
		icon = building_mecha_monastery_3
		base_buildtime = @b3_time
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_giga_assembly
		}

		show_tech_unlock_if = {
			is_individual_machine = yes
			tec_is_machine_cult = yes
		}

		potential = {
			exists = owner
			owner = {
				is_individual_machine = yes
				tec_is_machine_cult = yes
				NOR = {
					has_country_flag = tec_unlock_mechadendrite_assemblers
					has_country_flag = tec_unlock_nanite_assemblers
				}
			}
			tec_planet_special_blocks_assembly_buildings = no

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = rare_crystals
			}
		}

		planet_modifier = {
			pop_ethic_spiritualist_attraction_mult = 0.15
			pop_ethic_industrialist_attraction_mult = 0.15
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_techno_priest
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_robot_assembly
			tier = 3
			type = regular
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	# --------------- Nanite Machines
	building_tec_nanite_assembler_1 = {
		base_buildtime = @b1_time
		icon = building_robot_assembly_plant
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			building_machine_assembly_complex
		}

		show_tech_unlock_if = {
			is_machine_empire = yes
		}

		potential = {
			always = no
			exists = owner
			owner = {
				is_machine_empire = yes
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = replicator
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = replicator
			default_trigger = "is_machine_empire = no"
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_nanite_assembler_2 = {
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			building_machine_assembly_plant_3
		}

		show_tech_unlock_if = {
			is_machine_empire = yes
		}

		prerequisites = {
			tech_mega_assembly
		}

		potential = {
			exists = owner
			owner = {
				is_machine_empire = yes
			}

			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}


			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 2
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = replicator
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = replicator
			default_trigger = "is_machine_empire = no"
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 2
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_nanite_assembler_3 = {
		icon = building_tec_robot_assembly_plant_3
		base_buildtime = @b3_time
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = {
			tech_tec_giga_assembly
		}

		show_tech_unlock_if = {
			is_machine_empire = yes
		}

		potential = {
			exists = owner
			owner = {
				is_machine_empire = yes
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = rare_crystals
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = rare_crystals
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 2
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = replicator
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = replicator
			default_trigger = "is_machine_empire = no"
		}

		inline_script = {
			script = modifiers/tec_assembly_robotic
			mult = 2
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
	# /
# /

# ------------------------------------------------- Bioservants
 # --------------- Regular
	building_tec_bioservant_plant_1 = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1
		category = pop_assembly

		ai_estimate_without_unemployment = yes

		prerequisites = { "tech_tec_bioservant" }

		upgrades = {
			"building_tec_bioservant_plant_2"
		}

		potential = {
			exists = owner
			owner = {
				is_gestalt = no
				NOR = {
					has_policy_flag = bioservants_outlawed
					is_machine_empire = yes
					is_mechanical_empire = yes
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { BIO = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_bioservant_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_robotic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_bioengineer
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_bioengineer
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_bioservant_plant_2 = {
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = { "tech_tec_bioservant_2" }

		upgrades = {
			"building_tec_bioservant_plant_3"
		}

		potential = {
			exists = owner
			owner = {
				is_gestalt = no
				NOR = {
					has_policy_flag = bioservants_outlawed
					is_machine_empire = yes
					is_mechanical_empire = yes
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { BIO = yes }
			tec_ai_destroy_assembly_buildings = no

		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_bioservant_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_robotic_2

		resources = {
			category = planet_buildings

			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_bioengineer
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_bioengineer
		}

		inline_script = {
			script = modifiers/tec_assembly_bioservant
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_bioservant_plant_3 = {
		base_buildtime = @b3_time
		position_priority = 20		# Assembly/growth
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = { "tech_tec_bioservant_3" }

		potential = {
			exists = owner
			owner = {
				is_gestalt = no
				NOR = {
					has_policy_flag = bioservants_outlawed
					is_machine_empire = yes
					is_mechanical_empire = yes
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { BIO = yes }
			tec_ai_destroy_assembly_buildings = no

		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_bioservant_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_robotic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_bioengineer
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_bioengineer
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	# --------------- Hive
	building_tec_hive_bioservant_plant_1 = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1
		icon = building_spawning_pool

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			"building_tec_hive_bioservant_plant_2"
		}

		show_tech_unlock_if = {
			has_country_flag = is_hive_bioservant_empire
		}

		potential = {
			exists = owner
			owner = {
				has_country_flag = is_hive_bioservant_empire
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { BIO = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_bioservant_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_robotic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_bioengineer
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_bioengineer_drone
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_hive_bioservant_plant_2 = {
		base_buildtime = @b2_time
		can_build = no
		icon = building_spawning_pool_2

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = {
			"tech_colonial_centralization"
		}

		show_tech_unlock_if = {
			has_country_flag = is_hive_bioservant_empire
		}

		upgrades = {
			"building_tec_hive_bioservant_plant_3"
		}

		potential = {
			exists = owner
			owner = {
				has_country_flag = is_hive_bioservant_empire
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { BIO = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_bioservant_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_robotic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_bioengineer
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_bioengineer_drone
		}

		inline_script = {
			script = modifiers/tec_assembly_bioservant
			mult = 1
			trigger = ""
		}


		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_hive_bioservant_plant_3 = {
		base_buildtime = @b3_time
		can_build = no
		icon = building_spawning_pool_3

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = {
			"tech_galactic_administration"
		}

		show_tech_unlock_if = {
			has_country_flag = is_hive_bioservant_empire
		}

		potential = {
			exists = owner
			owner = {
				has_country_flag = is_hive_bioservant_empire
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { BIO = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_bioservant_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_robotic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_bioengineer
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_bioengineer_drone
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Xenogenesis
	#building_tec_xenospawn_1
	#building_tec_xenospawn_2
	#building_tec_xenospawn_3
 # /
# /

# ------------------------------------------------- Cloning/Organic
 # --------------- Cloning
	building_clone_vats = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_cloning
		}

		show_tech_unlock_if = {
			OR = {
				is_regular_empire = yes
				AND = {
					is_gestalt = yes
					OR = {
						AND = {
							is_hive_empire = yes
							tec_is_biohive = no
							tec_is_biomech_hive = no
						}
						AND = {
							is_machine_empire = yes
							has_valid_civic = civic_machine_assimilator
						}
					}
				}
			}
		}

		upgrades = {
			"building_clone_vats_2"
		}

		potential = {
			exists = owner
			owner = {
				NOT = {
					has_policy_flag = tec_purity_assembly
				}
			}

			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { CLONES = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1
		inline_script =  buildings/convert_to/tec_assembly_robotic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		#inline_script = {
		#	script = jobs/tec_cloner
		#	count = 1
		#	mult = 1
		#	display = with_desc
		#	trigger = ""
		#	default_job = tec_cloner
		#}

		inline_script = {
			script = modifiers/tec_assembly_organic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_cloning
			tier = 1
			type = all
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_clone_vats_2 = {
		icon = building_tec_clone_vats_2
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = {
			tech_tec_cloning_2
		}

		show_tech_unlock_if = {
			OR = {
				is_regular_empire = yes
				AND = {
					is_gestalt = yes
					OR = {
						AND = {
							is_hive_empire = yes
							tec_is_biohive = no
							tec_is_biomech_hive = no
						}
						AND = {
							is_machine_empire = yes
							has_valid_civic = civic_machine_assimilator
						}
					}
				}
			}
		}

		upgrades = {
			"building_clone_vats_3"
		}

		potential = {
			exists = owner
			owner = {
				NOT = {
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { CLONES = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2
		inline_script =  buildings/convert_to/tec_assembly_robotic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_cloner
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_cloner
		}

		inline_script = {
			script = modifiers/tec_assembly_organic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_cloning
			tier = 2
			type = all
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_clone_vats_3 = {
		icon = building_tec_clone_vats_3
		base_buildtime = @b3_time
		position_priority = 20		# Assembly/growth
		can_build = no

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		prerequisites = {
			tech_tec_cloning_3
		}

		show_tech_unlock_if = {
			OR = {
				is_regular_empire = yes
				AND = {
					is_gestalt = yes
					OR = {
						AND = {
							is_hive_empire = yes
							tec_is_biohive = no
							tec_is_biomech_hive = no
						}
						AND = {
							is_machine_empire = yes
							has_valid_civic = civic_machine_assimilator
						}
					}
				}
			}
		}

		potential = {
			exists = owner
			owner = {
				NOT = {
					has_policy_flag = tec_purity_assembly
				}
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { CLONES = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3
		inline_script =  buildings/convert_to/tec_assembly_robotic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_cloner
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_cloner
		}

		inline_script = {
			script = buildings/effects/type/tec_cloning
			tier = 3
			type = all
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Cloning but less offensive for spiritualists and purist empires
	building_tec_gene_clinic_1 = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_gene_1
		}

		upgrades = {
			"building_tec_gene_clinic_2"
		}

		potential = {
			exists = owner
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			NOT = {
				has_modifier = resort_colony
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1
		inline_script =  buildings/convert_to/tec_assembly_robotic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_cloner
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_cloner
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_gene_clinic_2 = {
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		can_build = no
		category = pop_assembly

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_gene_2
		}

		show_tech_unlock_if = {
			has_policy_flag = tec_purity_assembly
		}

		upgrades = {
			"building_tec_gene_clinic_3"
		}

		potential = {
			exists = owner
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2
		inline_script =  buildings/convert_to/tec_assembly_robotic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		inline_script = {
			script = jobs/tec_cloner
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_cloner
		}


		inline_script = {
			script = modifiers/tec_assembly_organic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_gene_clinic_3 = {
		base_buildtime = @b3_time
		position_priority = 20		# Assembly/growth
		can_build = no
		category = pop_assembly

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_gene_3
		}

		show_tech_unlock_if = {
			has_policy_flag = tec_purity_assembly
		}

		potential = {
			exists = owner
			owner = {
				has_policy_flag = tec_purity_assembly
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3
		inline_script =  buildings/convert_to/tec_assembly_robotic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_cloner
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
			default_job = tec_cloner
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Hiveminds
	building_spawning_pool = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			"building_spawning_pool_2"
		}

		potential = {
			exists = owner
			owner = {
				tec_has_regular_hive_set = yes
				tec_hive_can_have_spawningpools = yes
			}
			tec_invalidates_assembly_buildings = no
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1
		inline_script =  buildings/convert_to/tec_assembly_robotic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		triggered_desc = {
			text = spawning_pool_tooltip
		}

		inline_script = {
			script = jobs/tec_job
			job = spawning_drone
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_spawning_pool_2 = {
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		can_build = no
		category = pop_assembly

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_spawning_pools_2
		}

		show_tech_unlock_if = {
			tec_has_regular_hive_set = yes
			tec_hive_can_have_spawningpools = yes
		}

		upgrades = {
			"building_spawning_pool_3"
		}

		potential = {
			exists = owner
			owner = {
				tec_has_regular_hive_set = yes
				tec_hive_can_have_spawningpools = yes
			}

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = yes
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2
		inline_script =  buildings/convert_to/tec_assembly_robotic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		triggered_desc = {
			text = spawning_pool_tooltip
		}

		inline_script = {
			script = jobs/tec_job
			job = spawning_drone
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}


		inline_script = {
			script = modifiers/tec_assembly_organic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_spawning_pool_3 = {
		base_buildtime = @b3_time
		position_priority = 20		# Assembly/growth
		can_build = no
		category = pop_assembly

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_spawning_pools_3
		}

		show_tech_unlock_if = {
			tec_has_regular_hive_set = yes
			tec_hive_can_have_spawningpools = yes
		}

		potential = {
			exists = owner
			owner = {
				tec_has_regular_hive_set = yes
				tec_hive_can_have_spawningpools = yes
			}

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = yes
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			has_major_upgraded_capital = yes
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3
		inline_script =  buildings/convert_to/tec_assembly_robotic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}
		triggered_desc = {
			text = spawning_pool_tooltip
		}

		inline_script = {
			script = jobs/tec_job
			job = spawning_drone
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Biohives
	building_tec_biohive_spawning_pool_1 = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1
		icon = building_spawning_pool		#BIOHIVE ART PLACEHOLDER!!!!

		ai_estimate_without_unemployment = yes

		category = pop_assembly

		upgrades = {
			"building_tec_biohive_spawning_pool_2"
		}

		potential = {
			exists = owner
			owner = {
				tec_has_biohive_set = yes
				tec_hive_can_have_spawningpools = yes
			}

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = yes
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_only_one_assembly_building = no
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1
		inline_script =  buildings/convert_to/tec_assembly_robotic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = spawning_drone
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_biohive_spawning_pool_2 = {
		base_buildtime = @b2_time
		position_priority = 20		# Assembly/growth
		can_build = no
		category = pop_assembly
		icon = building_spawning_pool_2		#BIOHIVE ART PLACEHOLDER!!!!

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_spawning_pools_2
		}

		show_tech_unlock_if = {
			tec_has_biohive_set = yes
			tec_hive_can_have_spawningpools = yes
		}

		upgrades = {
			"building_tec_biohive_spawning_pool_3"
		}

		potential = {
			exists = owner
			owner = {
				tec_has_biohive_set = yes
				tec_hive_can_have_spawningpools = yes
			}

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = yes
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2
		inline_script =  buildings/convert_to/tec_assembly_robotic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}

			# passive assembly cost
			inline_script = {
				script = jobs/resources/tec_bio_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		triggered_desc = {
			text = spawning_pool_tooltip
		}

		inline_script = {
			script = jobs/tec_job
			job = spawning_drone
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}


		inline_script = {
			script = modifiers/tec_assembly_organic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_biohive_spawning_pool_3 = {
		base_buildtime = @b3_time
		position_priority = 20		# Assembly/growth
		can_build = no
		category = pop_assembly
		icon = building_spawning_pool_3		#BIOHIVE ART PLACEHOLDER!!!!

		ai_estimate_without_unemployment = yes

		prerequisites = {
			tech_tec_spawning_pools_3
		}

		show_tech_unlock_if = {
			tec_has_biohive_set = yes
			tec_hive_can_have_spawningpools = yes
		}

		potential = {
			exists = owner
			owner = {
				tec_has_biohive_set = yes
				tec_hive_can_have_spawningpools = yes
			}

			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = yes
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3
		inline_script =  buildings/convert_to/tec_assembly_robotic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}

		triggered_desc = {
			text = spawning_pool_tooltip
		}

		inline_script = {
			script = jobs/tec_job
			job = spawning_drone
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 
 # --------------- Lithohives
	#building_tec_lithohive_spawning_pool_1 = {

	#building_tec_lithohive_spawning_pool_1 = {

	#building_tec_lithohive_spawning_pool_1 = {
 # /
 
 # --------------- Biomech
	#building_tec_biomech_hive_spawning_pool_1 = {

	#building_tec_biomech_hive_spawning_pool_1 = {

	#building_tec_biomech_hive_spawning_pool_1 = {
 # /

# ------------------------------------------------- Mixed
 # --------------- Mechadendrite
	building_tec_mechadendrite_assembler_1 = {
		base_buildtime = @b1_time
		position_priority = 20		# Assembly/growth
		base_cap_amount = 1

		category = pop_assembly

		ai_estimate_without_unemployment = yes

		upgrades = {
			"building_tec_mechadendrite_assembler_2"
		}

		potential = {
			always = no
			exists = owner
			owner = {
				OR = {	# One of the two unlocks it
					has_technology = tech_robotic_workers
					has_technology = tech_cloning
				}
				has_country_flag = tec_unlock_mechadendrite_assemblers
			}

			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			always = no
			tec_only_one_assembly_building = no
			tec_invalidates_assembly_buildings = no
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_1
		inline_script =  buildings/convert_to/tec_assembly_organic_1
		inline_script =  buildings/convert_to/tec_assembly_bioservant_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}

			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 1
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		triggered_desc = {
			text = building_tec_mechadendrite_assembler_effect
		}

		planet_modifier = {
			planet_pop_assembly_add = 2
			planet_pop_assembly_organic_add = 2
		}

		inline_script = {	# Megacorp civic
			script = buildings/effects/tec_corporate_robocorp
			tier = 1
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_mechadendrite_assembler_2 = {
		base_buildtime = @b2_time
		icon = building_machine_assembly_complex
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		upgrades = {
			"building_tec_mechadendrite_assembler_3"
		}

		potential = {
			exists = owner
			owner = {
				OR = {	# One of the two unlocks it
					has_technology = tech_droid_workers
					has_technology = tech_tec_cloning_2
				}
				has_country_flag = tec_unlock_mechadendrite_assemblers
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_2
		inline_script =  buildings/convert_to/tec_assembly_organic_2
		inline_script =  buildings/convert_to/tec_assembly_bioservant_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}

			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 2
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		triggered_desc = {
			text = building_tec_mechadendrite_assembler_effect
		}

		planet_modifier = {
			planet_pop_assembly_add = 4
			planet_pop_assembly_organic_add = 4
		}

		inline_script = {	# Megacorp civic
			script = buildings/effects/tec_corporate_robocorp
			tier = 2
		}

		inline_script = { # REVIEW 3.7
			script = modifiers/tec_assembly_robotic
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_mechadendrite_assembler_3 = {
		base_buildtime = @b3_time
		icon = building_tec_robot_assembly_plant_3
		position_priority = 20		# Assembly/growth
		category = pop_assembly
		can_build = no

		ai_estimate_without_unemployment = yes

		potential = {
			exists = owner
			owner = {
				OR = {	# One of the two unlocks it
					has_technology = tech_synthetic_workers
					has_technology = tech_tec_cloning_3
				}
				has_country_flag = tec_unlock_mechadendrite_assemblers
			}
			tec_planet_special_blocks_assembly_buildings = no
			tec_invalidates_assembly_buildings = no
			tec_ai_allow_assembly_building = { ROBOTS = yes }
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script =  buildings/convert_to/tec_assembly_robotic_3
		inline_script =  buildings/convert_to/tec_assembly_organic_3
		inline_script =  buildings/convert_to/tec_assembly_bioservant_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}

			inline_script = {
				script = jobs/resources/tec_robotic_assembly_upkeep
				base = 3
				mult = value:tec_assembly_cost_scaling_building
				trigger = ""
			}
		}

		# REVIEW 3.7
		inline_script = {
			script = jobs/tec_roboticist
			count = 2
			mult = 1
			display = with_desc
			trigger = ""
		}

		triggered_desc = {
			text = building_tec_mechadendrite_assembler_effect
		}

		planet_modifier = {
			planet_pop_assembly_add = 6
			planet_pop_assembly_organic_add = 6
		}

		inline_script = {	# Megacorp civic
			script = buildings/effects/tec_corporate_robocorp
			tier = 2
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Replicant Printer
	#building_tec_replicant_printer_1
	#building_tec_replicant_printer_2
 # /
# /

# ----------------------------------------------------------------------------------
# TRANSFORMATIONS
# ----------------------------------------------------------------------------------
 # --------------- Necrophages
	building_necrophage_elevation_chamber = {
		icon = building_chamber_of_elevation_1
		base_buildtime = @b1_time
		base_cap_amount = 1
		position_priority = 30		# Unique
		skip_automation_upgrading = yes #colony automation will not try to upgrade this

		category = pop_assembly

		upgrades = {
			building_necrophage_house_of_apotheosis
		}

		prerequisites = {
		}

		potential = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
				has_trait = trait_necrophage
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
				}
			}
		}

		allow = {
			custom_tooltip = {
				fail_text = NO_CULTURE_SHOCK
				NOT = { has_modifier = planet_culture_shock }
			}
			if = {
				limit = {
					exists = owner
					owner = {
						is_hive_empire = no
					}
				}
				NOT = { is_planet_class = pc_hive }
			}
			NOT = {
				is_planet_class = pc_machine
			}
			hidden_trigger = {
				if = {
					limit = {
						exists = owner
						owner = { is_ai = yes }
					}
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
					num_pops > 5
				}
			}
		}

		destroy_trigger = {
			exists = owner
			OR = {
				owner = {
					OR = {
						NOT = { has_origin = origin_necrophage }
						NOT = { has_trait = trait_necrophage }
					}
				}
				AND = {
					owner = { is_ai = yes }
					NOT = {
						any_owned_species = {
							species_can_be_necrophaged = yes
						}
					}
				}
			}
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = necro_apprentice
			display = with_desc
			count = 1
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = jobs/tec_job
			job = necro_apprentice
			display = no_desc
			count = 1
			mult = 1
			trigger = "num_organic_pops_per_year >= 0.2"
		}

		inline_script = {
			script = jobs/tec_job
			job = necro_apprentice
			display = no_desc
			count = 1
			mult = 1
			trigger = "num_organic_pops_per_year >= 0.3"
		}

		desc = {
			trigger = {
				OR = {
					NOT = { exists = owner }
					owner = { is_hive_empire = no }
				}
			}
			text = building_necrophage_elevation_chamber_desc
		}
		desc = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			text = building_necrophage_elevation_chamber_desc_hive
		}


		triggered_desc = {
			text = necrophage_elevation_timer_tooltip
			trigger = {
				has_planet_flag = necrophage_elevation_timer
			}
		}

		triggered_desc = {
			text = building_necrophage_elevation_chamber_scaling_tooltip
		}

		is_essential = yes
		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_necrophage_house_of_apotheosis = {
		icon = building_chamber_of_elevation_2
		base_buildtime = @b3_time
		can_build = no
		position_priority = 30		# Unique

		category = pop_assembly

		prerequisites = {
			tech_glandular_acclimation
		}

		show_tech_unlock_if = {
			has_origin = origin_necrophage
			has_trait = trait_necrophage
		}

		potential = {
			exists = owner
			owner = {
				has_origin = origin_necrophage
				has_trait = trait_necrophage
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
				}
				is_ai = no #the AI will just kill all its necrophytes
			}
		}

		allow = {
			hidden_trigger = {
				if = {
					limit = {
						owner = { is_ai = yes }
					}
					any_owned_species = {
						species_can_be_necrophaged = yes
					}
				}
			}
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		destroy_trigger = {
			exists = owner
			OR = {
				owner = {
					OR = {
						NOT = { has_origin = origin_necrophage }
						NOT = { has_trait = trait_necrophage }
					}
				}
				AND = {
					owner = { is_ai = yes }
					NOT = {
						any_owned_species = {
							species_can_be_necrophaged = yes
						}
					}
				}
			}
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = necro_apprentice
			display = with_desc
			count = 6
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = jobs/tec_job
			job = necro_apprentice
			display = no_desc
			count = 4
			mult = 1
			trigger = "
				exists = owner
				owner = { is_hive_empire = yes }
				tec_is_hive_world = yes
			"
		}

		desc = {
			trigger = {
				OR = {
					NOT = { exists = owner }
					owner = { is_hive_empire = no }
				}
			}
			text = building_necrophage_house_of_apotheosis_desc
		}
		desc = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			text = building_necrophage_house_of_apotheosis_desc_hive
		}

		triggered_desc = {
			text = necrophage_elevation_timer_tooltip
			trigger = {
				has_planet_flag = necrophage_elevation_timer
			}
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Splicers
	building_tec_splicechamber = {
		icon = building_tec_splicechamber
		base_buildtime = @b1_time
		base_cap_amount = 1
		position_priority = 30		# Unique

		category = pop_assembly

		potential = {
			always = no
			exists = owner
			owner = {
				has_country_flag = tec_can_genesplice
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
		}

		allow = {
			custom_tooltip = {
				fail_text = NO_CULTURE_SHOCK
				NOT = { has_modifier = planet_culture_shock }
			}
			NOR = {
				is_planet_class = pc_hive
				is_planet_class = pc_machine
			}
			OR = {
				owner = { is_ai = no }
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
			owner = {
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
		}

		destroy_trigger = {
			exists = owner
			OR = {
				owner = {
					OR = {
						NOT = {
							has_country_flag = tec_can_genesplice
						}
					}
				}
				AND = {
					owner = { is_ai = yes }
					NOT = {
						any_owned_species = {
							species_can_be_necrophaged = yes
						}
					}
				}
				owner = {
					OR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_hive_devouring_swarm
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_tec_hive_splicers
						has_valid_civic = civic_tec_hive_splicers_cyborg
						is_machine_empire = yes
					}
				}
			}
		}

		planet_modifier = {
			planet_stability_add = 5
			job_tec_spliced_add = 3
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		upgrades = {
			building_tec_splicechamber_2
		}

		prerequisites = {
		}

		triggered_desc = {
			text = job_tec_spliced_effect_desc
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
		}
		triggered_desc = {
			text = job_tec_spliced_effect_lithoid_desc
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
		}
	}

	building_tec_splicechamber_2 = {
		icon = building_tec_splicechamber_2
		base_buildtime = @b3_time
		can_build = no
		position_priority = 30		# Unique

		category = pop_assembly

		potential = {
			always = no
			exists = owner
			owner = {
				has_country_flag = tec_can_genesplice
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
		}

		allow = {
			custom_tooltip = {
				fail_text = NO_CULTURE_SHOCK
				NOT = { has_modifier = planet_culture_shock }
			}
			NOR = {
				is_planet_class = pc_hive
				is_planet_class = pc_machine
			}
			OR = {
				owner = { is_ai = no }
				any_owned_species = {
					species_can_be_necrophaged = yes
				}
			}
			owner = {
				NOR = {
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_hive_devouring_swarm
					has_valid_civic = civic_fanatic_purifiers
					has_valid_civic = civic_tec_hive_splicers
					has_valid_civic = civic_tec_hive_splicers_cyborg
					is_machine_empire = yes
				}
			}
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		destroy_trigger = {
			exists = owner
			OR = {
				owner = {
					OR = {
						NOT = {
							has_country_flag = tec_can_genesplice
						}
					}
				}
				AND = {
					owner = { is_ai = yes }
					NOT = {
						any_owned_species = {
							species_can_be_necrophaged = yes
						}
					}
				}
				owner = {
					OR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_hive_devouring_swarm
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_tec_hive_splicers
						has_valid_civic = civic_tec_hive_splicers_cyborg
						is_machine_empire = yes
					}
				}
			}
		}

		planet_modifier = {
			planet_stability_add = 10
			job_tec_spliced_add = 6
			job_tec_spliced_per_pop = 0.02 # 1 per 50 REVISAR
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}
		}

		prerequisites = {
			tech_glandular_acclimation
		}

		show_tech_unlock_if = {
			always = no
		}

		triggered_desc = {
			text = job_tec_spliced_effect_desc
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = no }
			}
		}
		triggered_desc = {
			text = job_tec_spliced_effect_lithoid_desc
			trigger = {
				exists = owner
				owner = { is_lithoid_empire = yes }
			}
		}

	}
 # /
# /

# ----------------------------------------------------------------------------------
# ZOMBIES
# ----------------------------------------------------------------------------------
 # --------------- Zombies regular

 # /
 # --------------- Zombies megacorp
	building_posthumous_employment_center = {
		base_buildtime = @b1_time
		base_cap_amount = 1

		category = pop_assembly

		ai_estimate_without_unemployment = yes

		potential = {
			exists = owner
			OR = {
				owner = { is_ai = no }
				NOT = { exists = assembling_species }
				assembling_species = { is_organic_species = yes }
			}
			owner = {
				is_regular_empire = yes
				tec_is_zombie_empire = yes
			}
			tec_ai_destroy_assembly_buildings = no
		}

		allow = {
			has_upgraded_capital = yes
		}

		planet_modifier = {
			job_reassigner_add = 1
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		triggered_desc = {
			text = job_reassigner_effect_desc
		}
		triggered_desc = {
			trigger = {
				has_building = building_robot_assembly_plant
			}
			text = tooltip_organic_and_artificial_assembly_warning
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
 # --------------- Z hives

 # /
 # --------------- Z machines

 # /
 # --------------- Z biohives

 # /
# /
# ----------------------------------------------------------------------------------
# BOOSTERS
# Conversion
	# T1
		## Hospital
		#building_clinic
		## Cyborgs
		#building_tec_cybernetic_hospital_1
		## Cyborg gestalt
		#building_tec_cybernetic_hospital_gestalt_1
	# T2
		## Hospital
		#building_hospital
		## Cyborgs
		#building_tec_cybernetic_hospital_2
		## Cyborg gestalt
		#building_tec_cybernetic_hospital_gestalt_2
	# T3
		## Hospital
		#building_hospital_3
		## Cyborgs
		#building_tec_cybernetic_hospital_3
		## Cyborg gestalt
		#building_tec_cybernetic_hospital_gestalt_3

# /
 # --------------- Clinics
	building_clinic = {
		base_buildtime = @b1_time
		position_priority = 30		# Unique
		base_cap_amount = 1

		category = amenity

		ai_estimate_without_unemployment = yes

		prerequisites = {
			"tech_frontier_health"
		}

		upgrades = {
			"building_hospital"
		}

		show_tech_unlock_if = {
			is_regular_empire = yes
			tec_has_clinic_building_swap = no
		}

		potential = {
			exists = owner
			# check the empire is valid
			owner = {
				is_individual_machine = no
				# rule out gestalts and pre-FTL societies
				inline_script = { script = tec_read_cache scope = country trigger = tec_uses_regular_empire_jobs }
				tec_has_clinic_building_swap = no
			}
			tec_ai_destroy_clinic_building = no
		}

		inline_script = buildings/convert_to/tec_clinic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_healthcare
			display = with_desc
			count = @b1_jobs
			mult = 1
			trigger = ""
			default_job = healthcare
			default_trigger = "is_regular_empire = no"
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 1
		}

		on_destroy = {
			owner = {
				if = {
					limit = {
						has_event_chain = payback_out_of_warranty_chain
					}
					end_event_chain = payback_out_of_warranty_chain
				}
			}
		}

		on_repaired = {
			if = {
				limit = {
					planet.owner = {
						has_event_chain = payback_out_of_warranty_chain
					}
				}
				random_list = {
					50 = { # still broken
						planet.owner = {
							country_event = { id = origin.4302 }
						}
						modifier = {
							factor = 0
							planet.owner = { has_technology = tech_frontier_health }
						}
					}
					20 = { # repaired
						planet.owner = {
							country_event = { id = origin.4301 }
						}
						modifier = {
							factor = 2
							planet.owner = { num_research_agreements = 1 }
						}
						modifier = {
							factor = 3
							planet.owner = { num_research_agreements = 2 }
						}
						modifier = {
							factor = 4
							planet.owner = { num_research_agreements >= 3 }
						}
					}
					10 = { # broken beyond repair
						planet = {
							planet_event = { id = origin.4303 }
						}
					}
				}
			}
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = "
				OR = {
					tec_has_genetic_assembly_buildings = yes
					tec_has_cloning_assembly_buildings = yes
					tec_has_bioservant_assembly_buildings = yes
					AND = {
						OR = {
							tec_has_robotic_assembly_buildings = yes
							tec_has_mixed_assembly_buildings = yes
						}
						owner = { tec_allows_machine_assembly_for_cyborg = yes }
					}
				}
			"
		}
	}

	building_hospital = {
		base_buildtime = @b2_time
		position_priority = 30		# Unique
		can_build = no

		ai_estimate_without_unemployment = yes

		category = amenity

		prerequisites = {
			"tech_frontier_hospital"
		}

		upgrades = {
			building_hospital_3
		}

		show_tech_unlock_if = {
			is_regular_empire = yes
			tec_has_clinic_building_swap = no
		}

		potential = {
			owner = {
				inline_script = { script = tec_read_cache scope = country trigger = tec_uses_regular_empire_jobs }
				tec_has_clinic_building_swap = no
			}
			tec_ai_destroy_clinic_building = no
		}

		allow = {
			has_upgraded_capital = yes
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script = buildings/convert_to/tec_clinic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_healthcare
			display = with_desc
			count = @b2_jobs
			mult = 1
			trigger = ""
			default_job = healthcare
			default_trigger = "is_regular_empire = no"
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 2
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_hospital_3 = {
		base_buildtime = @b2_time
		can_build = no
		position_priority = 30		# Unique

		ai_estimate_without_unemployment = yes

		category = amenity

		prerequisites = {
			"tech_tec_frontier_hospital_2"
		}

		show_tech_unlock_if = {
			is_regular_empire = yes
			tec_has_clinic_building_swap = no
		}

		potential = {
			owner = {
				is_regular_empire = yes
				tec_has_clinic_building_swap = no
			}
			tec_ai_destroy_clinic_building = no
		}

		allow = {
			has_upgraded_capital = yes
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script = buildings/convert_to/tec_clinic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_healthcare
			display = with_desc
			count = @b3_jobs
			mult = 1
			trigger = ""
			default_job = healthcare
			default_trigger = "is_regular_empire = no"
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 3
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
# /

# --------------- Cyberclinics
	building_tec_cybernetic_hospital_1 = {
		base_buildtime = @b1_time
		position_priority = 30		# Unique
		base_cap_amount = 1

		ai_estimate_without_unemployment = yes

		category = amenity

		prerequisites = {
			"tech_frontier_health"
		}

		upgrades = {
			building_tec_cybernetic_hospital_2
		}

		show_tech_unlock_if = {
			is_regular_empire = yes
			tec_has_cyborg_clinic = yes
		}

		potential = {
			owner = {
				is_regular_empire = yes
				tec_has_cyborg_clinic = yes
			}
			tec_ai_destroy_clinic_building = no
		}

		inline_script = buildings/convert_to/tec_clinic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_cyborg_ripperdoc
			display = with_desc
			count = @b1_jobs
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 1
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_cybernetic_hospital_2 = {
		base_buildtime = @b2_time
		position_priority = 30		# Unique
		can_build = no

		category = amenity

		ai_estimate_without_unemployment = yes

		prerequisites = {
			"tech_frontier_hospital"
		}

		show_tech_unlock_if = {
			is_regular_empire = yes
			tec_has_cyborg_clinic = yes
		}

		upgrades = {
			building_tec_cybernetic_hospital_3
		}

		potential = {
			owner = {
				is_regular_empire = yes
				tec_has_cyborg_clinic = yes
			}
			tec_ai_destroy_clinic_building = no
		}

		allow = {
			has_upgraded_capital = yes
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}


		inline_script = buildings/convert_to/tec_clinic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_cyborg_ripperdoc
			display = with_desc
			count = @b2_jobs
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 2
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_cybernetic_hospital_3 = {
		base_buildtime = @b2_time
		can_build = no
		position_priority = 30		# Unique

		category = amenity

		ai_estimate_without_unemployment = yes

		prerequisites = {
			"tech_tec_frontier_hospital_2"
		}

		show_tech_unlock_if = {
			is_regular_empire = yes
			tec_has_cyborg_clinic = yes
		}

		potential = {
			owner = {
				is_regular_empire = yes
				tec_has_cyborg_clinic = yes
			}
			tec_ai_destroy_clinic_building = no
		}

		allow = {
			has_upgraded_capital = yes
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}


		inline_script = buildings/convert_to/tec_clinic_3

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}


		inline_script = {
			script = jobs/tec_job
			job = tec_cyborg_ripperdoc
			display = with_desc
			count = @b3_jobs
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 3
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
# /

# --------------- Cyberclinics (gestalt)
	building_tec_cybernetic_hospital_gestalt_1 = {
		icon = building_tec_cybernetic_hospital_1
		base_buildtime = @b1_time
		position_priority = 30		# Unique
		base_cap_amount = 1

		category = amenity

		ai_estimate_without_unemployment = yes

		prerequisites = {
			"tech_planetary_government"
		}

		upgrades = {
			"building_tec_cybernetic_hospital_gestalt_2"
		}

		show_tech_unlock_if = {
			is_regular_empire = no
			tec_has_cyborg_clinic = yes
		}

		potential = {
			owner = {
				is_regular_empire = no
				tec_has_cyborg_clinic = yes
			}
			tec_ai_destroy_clinic_building = no
		}

		inline_script = buildings/convert_to/tec_clinic_1

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_cyborg_ripperdoc_drone
			display = with_desc
			count = @b1_jobs
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 1
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_cybernetic_hospital_gestalt_2 = {
		icon = building_tec_cybernetic_hospital_2
		base_buildtime = @b2_time
		position_priority = 30		# Unique
		can_build = no

		category = amenity

		ai_estimate_without_unemployment = yes

		prerequisites = {
			"tech_colonial_centralization"
		}

		show_tech_unlock_if = {
			is_regular_empire = no
			tec_has_cyborg_clinic = yes
		}

		upgrades = {
			building_tec_cybernetic_hospital_gestalt_3
		}

		potential = {
			owner = {
				is_regular_empire = no
				tec_has_cyborg_clinic = yes
			}
			tec_ai_destroy_clinic_building = no
		}

		allow = {
			has_upgraded_capital = yes
			tec_ai_allow_rare_dependant_building = {
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script = buildings/convert_to/tec_clinic_2

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 2
				rare = exotic_gases
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = tec_cyborg_ripperdoc_drone
			display = with_desc
			count = @b2_jobs
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 2
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}

	building_tec_cybernetic_hospital_gestalt_3 = {
		icon = building_tec_cybernetic_hospital_3
		base_buildtime = @b2_time
		can_build = no
		position_priority = 30		# Unique

		category = amenity

		ai_estimate_without_unemployment = yes

		prerequisites = {
			"tech_galactic_administration"
		}

		show_tech_unlock_if = {
			is_regular_empire = no
			tec_has_cyborg_clinic = yes
		}

		potential = {
			owner = {
				is_regular_empire = no
				tec_has_cyborg_clinic = yes
			}
			tec_ai_destroy_clinic_building = no
		}

		allow = {
			has_upgraded_capital = yes
			tec_ai_allow_rare_dependant_building = {
				tier = 3
				rare = exotic_gases
			}
		}

		inline_script = buildings/convert_to/tec_clinic_3

		destroy_trigger = {
			exists = owner
			OR = {
				owner = {
					OR = {
						is_regular_empire = yes
						NOT = {
							has_country_flag = tec_unlock_cyborg_hospitals
						}
					}
				}
				has_modifier = slave_colony
				AND = {
					buildings_stop_pop = yes
					owner = {
						is_ai = yes
					}
				}
			}
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 3
			}

			inline_script = {
				script = buildings/resources/tec_rare_resource_cost
				trigger = ""
				tier = 3
				rare = exotic_gases
			}
		}


		inline_script = {
			script = jobs/tec_job
			job = tec_cyborg_ripperdoc_drone
			display = with_desc
			count = @b3_jobs
			mult = 1
			trigger = ""
		}

		inline_script = {
			script = buildings/effects/type/tec_healthcare
			tier = 3
		}

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /
# /

 # --------------- Toxoids (not mutual)
	building_toxic_bath = {
		base_buildtime = @b1_time
		position_priority = 30		# Unique
		base_cap_amount = 1

		category = amenity
		icon = building_toxic_bath

		potential = {
			tec_planet_special_blocks_assembly_buildings = no
			owner = {
				is_regular_empire = yes
				is_individual_machine = no
				tec_has_toxic_baths = yes
			}
		}

		convert_to = {
			building_toxic_bath
			building_toxic_bath_hive
			building_toxic_bath_machine
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = bath_attendant
			count = @b1_jobs
			mult = 1
			display = with_desc
			trigger = ""
		}
	}

	building_toxic_bath_hive = {
		base_buildtime = @b1_time
		position_priority = 30		# Unique
		base_cap_amount = 1

		category = amenity
		icon = building_toxic_bath_hive

		potential = {
			owner = {
				is_hive_empire = yes
				has_valid_civic = civic_hive_toxic_baths
				NAND = {
					is_ai = yes
					prev = { has_any_industry_district = no }
				}
			}
		}
		allow = {
			owner = {
				OR = {
					is_ai = no
					prev = { has_any_industry_district = yes }
				}
			}
		}

		convert_to = {
			building_toxic_bath
			building_toxic_bath_hive
			building_toxic_bath_machine
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = bath_attendant_hive
			count = @b1_jobs
			mult = 1
			display = with_desc
			trigger = ""
		}
	}

	building_toxic_bath_machine = {
		base_buildtime = @b1_time
		position_priority = 30		# Unique
		base_cap_amount = 1

		category = amenity
		icon = building_toxic_bath_machine

		potential = {
			OR = {
				AND = {
					owner = { is_machine_empire = yes }
					owner = { has_toxic_baths = yes }
				}
				AND = {
					owner = { is_individual_machine = yes }
					owner = { has_toxic_baths = yes }
				}
			}
		}

		convert_to = {
			building_toxic_bath
			building_toxic_bath_hive
			building_toxic_bath_machine
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = bath_attendant_individual_machine
			count = @b1_jobs
			mult = 1
			display = with_desc
			trigger = "
				exists = owner
				owner = {
					is_individual_machine = yes
				}
			"
		}

		inline_script = {
			script = jobs/tec_job
			job = bath_attendant_machine
			count = @b1_jobs
			mult = 1
			display = with_desc
			trigger = "
				exists = owner
				owner = {
					is_machine_empire = yes
				}
			"
			default_job = bath_attendant_machine
		}
	}
 # /
# /

# OTHERS
# -----------------------------------------
 # Progenitor - NO LONGER ASSEMBLY BASED
	building_offspring_nest = {
		base_buildtime = @b1_time
		base_cap_amount = 1
		position_priority = 10		# Important

		category = amenity

		ai_estimate_without_unemployment = yes

		potential = {
			exists = owner
			owner = { has_origin = origin_progenitor_hive }
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 1
			}
		}

		inline_script = {
			script = jobs/tec_job
			job = offspring_drone
			count = 1
			mult = 1
			display = with_desc
			trigger = ""
		}

		# triggered_desc = {
		# 	text = offspring_nest_tooltip
		# }

		inline_script = {
			script = buildings/tec_aibait_essential
			trigger = ""
		}
	}
 # /

 # Clone Army
	building_clone_army_clone_vat = {
		icon = building_ancient_relics
		base_buildtime = 90
		position_priority = 40		# Playstyle

		empire_limit = {
			base = 5
		}

		category = pop_assembly

		is_essential = yes
		ai_estimate_without_unemployment = yes

		potential = {
			exists = owner
			owner = {
				has_origin = origin_clone_army
				NOT = {
					has_country_flag = clone_army_fertility_unlocked
				}
			}
			if = {
				limit = {
					owner = { is_ai = yes }
				}
				NOR = {
					has_building = building_clone_army_clone_vat
					AND = {
						exists = assembling_species
						assembling_species = { is_robotic_species = yes }
					}
				}
			}
		}

		destroy_trigger = {
			exists = owner
			OR = {
				owner = {
					OR = {
						NOT = { has_origin = origin_clone_army }
						is_synthetic_empire = yes
						has_country_flag = clone_army_fertility_unlocked
					}
				}
			}
		}

		resources = {
			category = planet_buildings
			inline_script = {
				script = buildings/resources/tec_resource_cost
				tier = 2
			}
		}

		triggered_planet_modifier = {
			potential = {
				is_scope_valid = no
			}
			planet_pop_assembly_organic_add = 5
		}

		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_ai = yes }
			}
			planet_pop_assembly_organic_add = 2
		}

		# Add growth from 0 to 25 depending on 'clone_pops_missing_per_vat'.
		triggered_planet_modifier = {
			potential = { check_variable = { which = clone_pops_missing_per_vat value > 0 } }
			modifier = { planet_pop_assembly_organic_add = 2 }
		}
		triggered_planet_modifier = {
			potential = { check_variable = { which = clone_pops_missing_per_vat value > 1 } }
			modifier = { planet_pop_assembly_organic_add = 3 }
		}
		triggered_planet_modifier = {
			potential = { check_variable = { which = clone_pops_missing_per_vat value > 4 } }
			modifier = { planet_pop_assembly_organic_add = 2 }
		}
		triggered_planet_modifier = {
			potential = { check_variable = { which = clone_pops_missing_per_vat value > 8 } }
			modifier = { planet_pop_assembly_organic_add = 3 }
		}
		triggered_planet_modifier = {
			potential = {
				years_passed > 10
				check_variable = { which = clone_pops_missing_per_vat value > 12 }
			}
			modifier = { planet_pop_assembly_organic_add = 5 }
		}

		upgrades = {
		}

		prerequisites = {
		}

		triggered_desc = {
			text = building_clone_army_clone_vat_effect_desc
		}
	}
	#building_tec_repeatable_clone_army_vat
 # /