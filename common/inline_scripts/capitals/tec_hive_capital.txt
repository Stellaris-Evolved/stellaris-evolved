# capitals/tec_hive_capital

inline_script = {
	script = tec_type_hint
	capital_tier = $tier$
	job = $synapse$
}

inline_script = capitals/effects/tec_origin_progenitor_hive_world


# Base
	inline_script = {
		script = jobs/tec_job
		trigger = "
			NOT = { inline_script = { script = tec_read_cache scope = planet trigger = tec_has_special_ruler_feature } }
			exists = owner
			owner = {
				is_hive_empire = yes
				NOT = { inline_script = { script = tec_read_cache scope = country trigger = tec_has_ruler_civic_hive } }
			}
		"
		job = $synapse$
		count = @tec_capital_hive_synapse_t$tier$
		mult = 1
		display = with_desc
		default_job = $synapse$
	}

	inline_script = {
		script = jobs/tec_maintenance_drone
		trigger = "
			owner = {
				NOT = { inline_script = { script = tec_read_cache scope = country trigger = tec_has_maintenance_drone_swap_civic_hive } }
			}
		"
		count = @tec_capital_hive_maintenance_drone_t$tier$
		mult = 1
		display = with_desc
		default_job = maintenance_drone
	}

	inline_script = {
		script = jobs/tec_patrol_drone
		trigger = ""
		count = @tec_capital_hive_patrol_t$tier$
		mult = 1
		display = with_desc
		default_job = patrol_drone
	}
# /

# Brood civics - TODO create own inline
	# Growth Group
	inline_script = {	# Eusocial
		script = jobs/tec_job
		trigger = "
			exists = owner
			owner = {
				has_valid_civic = civic_tec_hive_brood_eusocial 
			}
		"
		job = tec_brood_queen_drone
		count = 1
		mult = 1
		display = with_desc
	}
		# Note: broodlords are synapse swaps
	inline_script = { # Splicer queens
		script = jobs/tec_brood_splicer_queens
		count = 1
		mult = 1
		trigger = ""
		display = with_desc
		default_job = tec_brood_splicer_queen_drone
		default_trigger = "always = no"
	}
	# Control Group
	inline_script = { # Overminds - Note just 1 overmind per capital. Subjobs use scaling
		script = jobs/tec_brood_overminds
		count = @tec_capital_hive_brood_drone_t$tier$
		mult = 1
		trigger = ""
		display = with_desc
		default_job = tec_brood_overmind_drone
		default_trigger = "always = no"
	}
	inline_script = { # Cerebrates - Note just 1 cerebrate. Up to 3 cerebrates
		script = jobs/tec_brood_cerebrates
		count = @tec_capital_hive_brood_drone_t$tier$
		mult = 1
		trigger = ""
		display = with_desc
		default_job = tec_brood_cerebrate_drone
		default_trigger = "always = no"
	}
	# Evolution Group
	inline_script = { # Proteans - Note up to 3 proteans regularly
		script = jobs/tec_brood_protean
		count = @tec_capital_hive_brood_drone_per_tier_t$tier$
		mult = 1
		trigger = ""
		display = with_desc
		default_job = tec_brood_protean_drone
		default_trigger = "always = no"
	}
	inline_script = { # Broodtwister 1 per capital
		script = jobs/tec_brood_twisters
		count = @tec_capital_hive_brood_drone_per_tier_t$tier$
		mult = 1
		trigger = ""
		display = with_desc
		default_job = tec_brood_twister_drone
		default_trigger = "always = no"
	}
# /


# Synapses swaps
	inline_script = {
		script = jobs/tec_synapse_civic_swaps
		trigger= ""
		count = @tec_capital_hive_synapse_t$tier$
		mult = 1
		display = with_desc
	}
# /

# Maintainance Swaps
	inline_script = {
		script = jobs/tec_maintenance_civic_hive_swaps
		trigger= ""
		count = @tec_capital_hive_maintenance_drone_t$tier$
		mult = 1
		display = with_desc
	}
# /

# Job per tier
	inline_script = {
		script = jobs/capital/tec_add_job_civic_hive
		trigger= ""
		count = @tec_capital_add_normal_jobs_t$tier$
		mult = 1
		display = with_desc
	}

	inline_script = {
		script = jobs/capital/tec_add_job_per_ascension_civic_hive
		trigger = ""
		display = no_desc
	}
# /

# Civics
	inline_script = {
		script = capitals/effects/tec_civic_tec_hive_frenzy
		tier = $tier$
	}
# /

# Traditions and etc
	inline_script = {
		script = capitals/effects/tec_tr_cybernetics_augmentation_overload_hive
		tier = $tier$
	}

	inline_script = {
		script = capitals/effects/tec_tr_tec_centrality_2_hive
		tier = $tier$
		synapse = $synapse$
	}
# /

inline_script = {
	script = mod_support/tec_inlines_include
	include_script = capitals/tec_hive_capital
	parameters = "
		tier = $tier$
		display = $synapse$
	"
}
