# leaders\tec_leader_base_upkeep.txt

# Default upkeep if owner doesn't exist (E.g. event hire window)
	upkeep = {
		trigger = {
			NOR = {
				has_trait = leader_trait_spacebender
				has_leader_flag = should_not_have_upkeep

				has_leader_flag = marauder_merc_leader
				has_leader_flag = hired_admiral_merc_leader
			}
			NOT = {
				exists = owner
			}
			tec_is_aiauth_node = no
		}
		unity = 2
		mult = value:tec_leader_upkeep
	}
# /
# Default Unity upkeep
	upkeep = {
		trigger = {
			exists = owner
			owner = {
				NOR = {
					has_valid_civic = civic_machine_upkeep_twister
					has_valid_civic = civic_hive_upkeep_twister
				}
			}
			tec_is_aiauth_node = no
			# ^ they use aiauth cap
			tec_should_pay_for_leader_upkeep = yes
		}
		unity = 2
		mult = value:tec_leader_upkeep
		#mult = value:tec_aiauth_node_upkeep_scale
	}
# /
# Ai Auth
	upkeep = { # base upkeep
		trigger = {
			tec_is_aiauth_node = yes
		}
		sr_tec_ai_power = 10
	}
	upkeep = {	# working upkeep
		trigger = {
			tec_is_aiauth_node = yes
			OR = {
				tec_leader_is_true_idle = no
				NOT = { exists = owner }
			}
		}
		sr_tec_ai_power = 2
		mult = value:tec_aiauth_node_upkeep_scale
	}
# /
# Reduced Unity upkeep for Galactic Paragons gestalt civics.
	#upkeep = {	# No unity upkeep for those civics
	#	trigger = {
	#		exists = owner
	#		owner = {
	#			OR = {
	#				has_valid_civic = civic_machine_upkeep_twister
	#				has_valid_civic = civic_hive_upkeep_twister
	#			}
	#		}
	#	}
	#	unity = 1
	#	mult = trigger:has_skill
	#}
# Food upkeep for Autonomous Drones
	upkeep = {
		trigger = {
			exists = owner
			owner = {
				has_valid_civic = civic_hive_upkeep_twister
			}
			species = {
				is_lithoid = no
			}
			tec_should_pay_for_leader_upkeep = yes
			is_gestalt_node = no
		}
		food = 2
		mult = value:tec_leader_upkeep
	}
# /
# Mineral upkeep for Autonomous Drones
	upkeep = {
		trigger = {
			exists = owner
			owner = {
				has_valid_civic = civic_hive_upkeep_twister
			}
			species = {
				is_lithoid = yes
			}
			tec_should_pay_for_leader_upkeep = yes
			is_gestalt_node = no
		}
		minerals = 2
		mult = value:tec_leader_upkeep
	}
# /
# Energy upkeep for Sovereign Circuits
	upkeep = {
		trigger = {
			exists = owner
			owner = {
				has_valid_civic = civic_machine_upkeep_twister
			}
			tec_should_pay_for_leader_upkeep = yes
			is_gestalt_node = no
		}
		energy = 2
		mult = value:tec_leader_upkeep
	}
# /
