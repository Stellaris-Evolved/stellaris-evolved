# common\colony_automation_exceptions\zz_evolved_ai_exceptions.txt

# TO NOTE FOR MODDERS AND THOSE THAT WANT TO REPLICATE THE BELOW FOR AI

# should_ai_use_job_micro = yes has some peculiarities, specifically job_changes
# if two job_changes are available at same time, only one is used...
# so you need to gate them in case they either reach full increase
# or reduce jobs to 0 so they don't block the automation

# use `tec_can_reduce_job_further = { job = <job> }` and
# `tec_can_increase_job_further = { job = <job> }` to gate the job_changes

automate_ai_manage_jobs = {
	should_ai_use_job_micro = yes

	available = {
		exists = owner
		owner = {
			is_ai = yes
			# virtual empire has no need for this mechanism
			is_virtual_empire = no
		}
	}

	emergency = yes
	category = "planet_automation_ai"

	job_changes = {
		# Colonists
			colonist_reduce = {
				available = {
					tec_can_reduce_job_further = { job = colonist }
					tec_ai_can_reduce_colonist_jobs = yes
				}

				job = colonist
				amount = -1
			}

			colonist_increase = {
				available = {
					tec_can_increase_job_further = { job = colonist }
					tec_ai_can_increase_colonist_jobs = yes
				}

				job = colonist
				amount = 1
			}
		# /
		# Amenities Regular
			clerk_reduce = {
				available = {
					tec_can_reduce_job_further = { job = clerk }
					tec_ai_can_reduce_clerk_job = yes
				}

				job = clerk
				amount = -1
			}

			clerk_increase = {
				available = {
					tec_can_increase_job_further = { job = clerk }
					tec_ai_can_increase_clerk_job = yes
				}

				job = clerk
				amount = 1
			}

			entertainer_reduce = {
				available = {
					tec_can_reduce_job_further = { job = entertainer }
					free_amenities > 40
				}

				job = entertainer
				amount = -1
			}

			entertainer_increase = {
				available = {
					tec_can_increase_job_further = { job = entertainer }
					free_amenities < 10
				}

				job = entertainer
				amount = 1
			}
		# /

		# Amenities Gestalt
			tec_spareparts_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = tec_spareparts_drone }
					free_amenities > 40
				}

				job = tec_spareparts_drone
				amount = -1
			}

			tec_spareparts_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = tec_spareparts_drone }
					free_amenities < 10
				}

				job = tec_spareparts_drone
				amount = 1
			}

			maintenance_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = maintenance_drone }
					tec_ai_can_reduce_maintenance_drone_job = yes
				}

				job = maintenance_drone
				amount = -1
			}

			maintenance_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = maintenance_drone }
					tec_ai_can_increase_maintenance_drone_job = yes
				}

				job = maintenance_drone
				amount = 1
			}

		# /

		# Crime Regular
			enforcer_reduce = {
				available = {
					tec_can_reduce_job_further = { job = enforcer }
					tec_ai_can_reduce_crime_job = yes

				}

				job = enforcer
				amount = -1
			}

			enforcer_increase = {
				available = {
					tec_can_increase_job_further = { job = enforcer }
					tec_ai_can_increase_crime_job = yes
				}

				job = enforcer
				amount = 1
			}
		# /

		# Crime Gestalt
			patrol_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = patrol_drone }
					tec_ai_can_reduce_crime_job = yes
				}

				job = patrol_drone
				amount = -1
			}

			patrol_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = patrol_drone }
					tec_ai_can_increase_crime_job = yes
				}

				job = patrol_drone
				amount = 1
			}
		# /

		# Artisans
			artisan_reduce = {
				available = {
					tec_can_reduce_job_further = { job = artisan }
					tec_ai_can_reduce_artisan_job = yes
				}

				job = artisan
				amount = -1
			}

			artisan_increase = {
				available = {
					tec_can_increase_job_further = { job = artisan }
					tec_ai_can_increase_artisan_job = yes
				}

				job = artisan
				amount = 1
			}

			artificer_reduce = {
				available = {
					tec_can_reduce_job_further = { job = artificer }
					tec_ai_can_reduce_artisan_job = yes
				}

				job = artificer
				amount = -1
			}

			artificer_increase = {
				available = {
					tec_can_increase_job_further = { job = artificer }
					tec_ai_can_increase_artisan_job = yes
				}

				job = artificer
				amount = 1
			}

			artisan_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = artisan_drone }
					tec_ai_can_reduce_artisan_job = yes
				}

				job = artisan_drone
				amount = -1
			}

			artisan_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = artisan_drone }
					tec_ai_can_increase_artisan_job = yes
				}

				job = artisan_drone
				amount = 1
			}

			#Colonies that only serve as pop worlds shouldn't have broodlords slot open in order to limit resettlement costs and back and forth (it costs 250 credits base!)
			brood_lord_drone_reduce = {
				available = {
					tec_can_reduce_job_further = { job = tec_brood_lord_drone }
					habitability = {
						who = owner_main_species
						value < 0.55
					}
				}

				job = tec_brood_lord_drone
				amount = -1
			}

			brood_lord_drone_increase = {
				available = {
					tec_can_increase_job_further = { job = tec_brood_lord_drone }
					habitability = {
						who = owner_main_species
						value >= 0.55
					}
				}

				job = tec_brood_lord_drone
				amount = 1
			}
		# /
	}
}
