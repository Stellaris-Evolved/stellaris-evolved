# common\script_values\zz_evolved_ascension_script_values.txt

# TODO move to scripted variables
	@tec_bioware_scaling_low = 0.25
	@tec_bioware_scaling_mid = 0.5
	@tec_bioware_scaling_mid_high = 0.75
	@tec_bioware_scaling_high = 1

	@tec_gene_recombinator_job_situation_score = 0.25
	@tec_gene_recombinator_agenda_start_score = 1.5
	@tec_gene_recombinator_agenda_finish_score = 2
	@tec_genetic_perfected_trait_scaling = 0.1

	@tec_augmentor_job_situation_score = 0.25
	@tec_augmentor_agenda_start_score = 1.5
# /

# Generic/misc
	tec_ascension_debug_value = {
		base = 0
		modifier = {
			add = 5
			has_situation_flag = situation_tec_debug_5
		}
		modifier = {
			add = 10
			OR = {
				has_situation_flag = situation_tec_debug_10
				has_situation_flag = situation_tec_debug
			}
		}
		modifier = {
			add = -5
			has_situation_flag = situation_tec_debug_negative_5
		}
		modifier = {
			add = -10
			has_situation_flag = situation_tec_debug_negative_10
		}
	}
# /

# Psionic
 # --------------- Shroud ascension mechanic
	tec_psionic_planet_ascension_pop_ascend = {
		base = 0
		add = trigger:num_pops
		divide = 10
		floor = yes
		max = 5
	}

	tec_psionic_planet_ascension_count = {
		base = 0
		complex_trigger_modifier = {
			trigger = count_situation
			parameters = {
				limit = {
					is_situation_type = situation_tec_psionic_planet_ascension
				}
			}
			mode = add
		}
	}
 # /
# /

# Psychics
 # --------------- Manifestation Scaling

 # /
# /

# Genetics
 # --------------- Recombination scaling
	#tec_gene_malleability_scaling = {
	#	BASE = 0
	#	complex_trigger_modifier = {
	#		trigger = num_trait_points
	#		trigger_scope = from
	#		mode = $MODE$
	#	}
	#	# Lets avoid partial percents
	#	round_to = 1
	#}
	#
 # / 

 # --------------- Recombination scaling
	# TODO ASCENSION
	##mult = owner.value:tec_gene_recombinator_job_scaling
	tec_gene_recombinator_job_scaling = {
		base = 0
		[[!GESTALT]
			add = owner.value:tec_jobs_value|SCOPE|$SCOPE|this$|JOB|tec_gene_recombinator|
		]
		[[GESTALT]
			add = owner.value:tec_jobs_value|SCOPE|$SCOPE|this$|JOB|tec_gene_recombinator_drone|
		]
		mult = @tec_gene_recombinator_job_situation_score
		# 0.25 situation speed per month per recombinator
		# 20 recombinators = 2 situation speed
		modifier = {
			mult = @tec_gene_recombinator_agenda_start_score
			exists = owner
			owner = {
				has_agenda_selected = agenda_tec_genetic_recombination
				NOT = {
					has_modifier = modifier_tec_agenda_tec_genetic_recombination_finish
				}
			}
		}
		modifier = {
			mult = @tec_gene_recombinator_agenda_finish_score
			exists = owner
			owner = {
				has_modifier = modifier_tec_agenda_tec_genetic_recombination_finish
			}
		}
	}
 # /
 # --------------- Perfect trait scaling
	tec_genetic_perfected_trait_scaling = {
		# Self-invasive trait
		base = 1
		# Main traits
		[[!trait_tec_gene_main_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_main_t3
			}
		}
		]
		[[!trait_tec_gene_main_cloning_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_main_cloning_t3
			}
		}
		]
		# Super traits (from super earth)
		[[trait_tec_gene_automodding_t3]]
		[[!trait_tec_gene_automodding_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_automodding_t3
			}
		}
		]
		[[trait_tec_gene_genius_t3]]
		[[!trait_tec_gene_genius_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_genius_t3
			}
		}
		]
		[[trait_tec_gene_will_t3]]
		[[!trait_tec_gene_will_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_will_t3
			}
		}
		]
		[[trait_tec_gene_fertile_t3]]
		[[!trait_tec_gene_fertile_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_fertile_t3
			}
		}
		]
		[[trait_tec_gene_robust_t3]]
		[[!trait_tec_gene_robust_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_robust_t3
			}
		}
		]
		[[trait_tec_gene_audacious_t3]]
		[[!trait_tec_gene_audacious_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_audacious_t3
			}
		}
		]
		[[trait_tec_gene_lifespan_t3]]
		[[!trait_tec_gene_lifespan_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_lifespan_t3
			}
		}
		]
		[[trait_tec_gene_metabolic_t3]]
		[[!trait_tec_gene_metabolic_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_metabolic_t3
			}
		}
		]
		# Generic traits
		[[trait_tec_gene_energy_t3]]
		[[!trait_tec_gene_energy_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_energy_t3
			}
		}
		]
		[[trait_tec_gene_mining_t3]]
		[[!trait_tec_gene_mining_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_mining_t3
			}
		}
		]
		[[trait_tec_gene_farming_t3]]
		[[!trait_tec_gene_farming_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_farming_t3
			}
		}
		]
		[[trait_tec_gene_research_t3]]
		[[!trait_tec_gene_research_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_research_t3
			}
		}
		]
		[[trait_tec_gene_unity_t3]]
		[[!trait_tec_gene_unity_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_unity_t3
			}
		}
		]
		[[trait_tec_gene_industry_t3]]
		[[!trait_tec_gene_industry_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_industry_t3
			}
		}
		]
		[[trait_tec_gene_amenities_t3]]
		[[!trait_tec_gene_amenities_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_amenities_t3
			}
		}
		]
		[[trait_tec_gene_trade_t3]]
		[[!trait_tec_gene_trade_t3]
		modifier = {
			add = @tec_genetic_perfected_trait_scaling
			$SCOPE|this$ = {
				has_trait = trait_tec_gene_trade_t3
			}
		}
		]
		# Recombined traits
		# TODO ASCENSION
	}
	# triggered_planet_growth_habitability_modifier - from = species, fromfrom = country
	# mult = value:tec_genetic_perfected_trait_scaling|SCOPE|from|
	# triggered_species_modifier  - this = species, from = country
	# mult = value:tec_genetic_perfected_trait_scaling|SCOPE|this|
	# triggered_pop_modifier - this = pop
	# mult = value:tec_genetic_perfected_trait_scaling|SCOPE|this|
 # /
# /

# Biogenics

# /

# Cybernetics
	tec_cyborg_related_happiness = {
		inline_script = {
			script = tec_type_hint
			[[CATEGORY] pop_category = $CATEGORY$ ]
		}

		base = 0
		add = modifier:pop_cyborg_happiness
		[[CATEGORY] add = modifier:pop_cyborg_$CATEGORY$_happiness ]

		modifier = {
			tec_is_cyborg_species = no
			set = modifier:pop_non_cyborg_happiness
		}
	}
 # Cybernetic traits
	tec_cyborg_trait_scaling = {
		base = 1
		mult = value:scripted_modifier_mult|MODIFIER|$MODIFIER$|
		mult = value:tec_cyborg_trait_scaling_country|VARIABLE|$VARIABLE$|
	}
	tec_cyborg_trait_scaling_country = {
		base = 1
		modifier = {
			exists = from
			from = { is_variable_set = $VARIABLE$ }
			add = from.$VARIABLE$
		}
		min = 0
	}
	# value:tec_cyborg_trait_scaling|MODIFIER|tec_test_trait_selfbuff|VARIABLE|tec_test_trait_selfbuff_var|
	# NOTE: triggered_species_modifier don't recognise modifiers so its a fake variable added when necessary (overclock mechanic)

	#tec_cyborg_energy_upkeep_value = {
	#	base = 0
	#	add = modifier:tec_cyborg_energy_upkeep
	#	mult = modifier:tec_cyborg_energy_upkeep_penalty
	#}
	#tec_cyborg_amenities_usage_value = {
	#	base = 0
	#	add = modifier:tec_cyborg_amenities_usage
	#	mult = modifier:tec_cyborg_amenities_usage_penalty
	#}

	#tec_cyborg_cortex_bonus_value

	#tec_cyborg_cortex_upkeep_value

	#tec_cyborg_internal_bonus_value

	#tec_cyborg_internal_upkeep_value

	#tec_cyborg_external_bonus_value

	#tec_cyborg_external_upkeep_value

	#tec_cyborg_deck_bonus_value

	#tec_cyborg_deck_upkeep_value
 # /
# /

# Bioware

 # Bioware trait interaction
	tec_bioware_scaling_research = {
		base = 1
		# Base traits
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_natural_physicists
				}
			}
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_natural_sociologists
				}
			}
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_natural_engineers
				}
			}
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_intelligent
				}
			}
		# /
		# Robotics
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_robot_logic_engines
				}
			}
			modifier = {
				add = @tec_bioware_scaling_high
				from = {
					has_trait = trait_tec_robot_quantic_engines
				}
			}
		# /
		# Special
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_enigmatic_intelligence
				}
			}
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_enigmatic_intelligence_poor
				}
			}
		# /
		# Origins
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_artificial_intelligence
				}
			}
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_elevated_synapses
				}
			}
		# /
		# Ascension traits
			# Psionics
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_psionic
				}
			}
			# Genetics
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_erudite
				}
			}
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_tec_gene_genius_t1
				}
			}
			modifier = {
				add = @tec_bioware_scaling_mid_high
				from = {
					has_trait = trait_tec_gene_genius_t2
				}
			}
			modifier = {
				add = @tec_bioware_scaling_high
				from = {
					has_trait = trait_tec_gene_genius_t3
				}
			}
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_tec_gene_research_t1
				}
			}
			modifier = {
				add = @tec_bioware_scaling_mid_high
				from = {
					has_trait = trait_tec_gene_research_t2
				}
			}
			modifier = {
				add = @tec_bioware_scaling_high
				from = {
					has_trait = trait_tec_gene_research_t3
				}
			}
			# Cybernetics
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_tec_cyborg_brain
				}
			}
			# Replicant
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_tec_replicant_brain
				}
			}
			# Biopsi
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_tec_biopsionic_brain
				}
			}
			modifier = {
				add = @tec_bioware_scaling_low
				from = {
					has_trait = trait_tec_biopsionic_converged_mind
				}
			}
			# Cyberpsi
			modifier = {
				add = @tec_bioware_scaling_mid
				from = {
					has_trait = trait_tec_cyberpsionic_amplifier
				}
			}
		# /
	}
	tec_bioware_scaling_unity = {
		base = 1
	}
	tec_bioware_scaling_worker = {
		base = 1
	}
	tec_bioware_scaling_specialist = {
		base = 1
	}
 # /
# /

# Synthetic

# /

# Digital

# /

# Cyberpsi
 # --------------- Cyberpsi entropy
	tec_cyberpsionic_entropy_scaling = {
		base = 1
		modifier = {
			set = 0
			is_scope_valid = yes
		}
		add = owner.value:scripted_modifier_mult|MODIFIER|tec_entropy|
		square_root = yes
	}

	tec_cyberpsionic_entropy_scaling_display = {
		base = 0
		add = owner.value:scripted_modifier_mult|MODIFIER|tec_entropy|
		square_root = yes
		round_to = 0.01
	}

	tec_cyberpsionic_entropy_total_display = {
		base = 0
		add = owner.modifier:tec_entropy
		mult = 100
		round = yes
	}
 # /
# /

# Biopsi
 # --------------- Biopsi converged mult
	tec_biopsionic_convergence_trait_scaling = {
		base = 0
		modifier = {
			has_modifier = tec_converged_pop
			add = owner.tec_biopsionic_convergence_count
		}
		mult = 0.05
		add = 1
	}
 # /
 # --------------- Biopsi trait misc
	tec_pure_linked_assembly_score = {
		base = 0
		complex_trigger_modifier = {
			trigger = count_owned_pop
			parameters = {
				limit = { 
					has_trait = trait_tec_biopsionic_embroidered
				}
			}
			mode = add
			mult = 0.015
		}
	}
 # /
# /