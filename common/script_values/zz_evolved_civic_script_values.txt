# common\script_values\zz_evolved_civic_script_values.txt

# Shared
 # ADD per Ascension
 	tec_script_planet_ascension = {
		inline_script = {
			script = tec_type_hint
			float = $BASE$
			number_or_value = $MULT$
		}

		base = $BASE$
		add = planet.trigger:has_planetary_ascension_tier
		mult = $MULT$
	}
	tec_script_add_per_ascension = {
		inline_script = {
			script = tec_type_hint
			float = $BASE$
			[[ASCENSION_BASE] float = $ASCENSION_BASE$ ]
			[[MULT] number_or_value = $MULT$ ]
			number_or_value = $ASCENSION_MULT$
			[[MIN] number_or_value = $MIN$ ]
			[[ROUND] bool = $ROUND$]
		}

		base = $BASE|0$
		add = value:tec_script_planet_ascension|BASE|$ASCENSION_BASE|0$|MULT|$ASCENSION_MULT|0$|
		mult = $MULT|1$
		round = $ROUND|yes$
		[[MIN] min = $MIN$]
	}
	# mult = planet.value:tec_script_add_per_ascension|BASE|1|ASCENSION_BASE|0|ASCENSION_MULT|1|MULT|1|ROUND|yes|
	# TIP
		# Base should be 1
		# Ascension base is for testing purposes, should always be 0
		# Ascension_mult = inverse number of ascensions per add
			# Example: ascension_mult = 0.25 = 4 ascensions = 1 extra add, 0.5 => 2 ascensions = 1 extra add
		# Mult... doesn't need explaination
		# Example: planet.value:tec_script_add_per_ascension|BASE|1|ASCENSION_BASE|0|ASCENSION_MULT|0.35|MULT|1|ROUND|yes|
		# This means 1+0.35 adds per ascension, 3 ascensions = 2.05 adds, 10 ascensions = 1+3.5 leaders, etc
	# /
 # /
 # Count spynetworks
	tec_num_spynetworks = {
		base = 0
		complex_trigger_modifier = {
			trigger = count_owned_leader
			parameters = {
				limit = {
					OR = {
						has_envoy_task = {
							task = spy_network
						}
						is_strengthing_imperial_authority = yes
						is_undermining_imperial_authority = yes
					}
				}
			}
			mode = add
		}
		complex_trigger_modifier = {	# Redundancy because they are not counted above for whatever reason
			trigger = count_envoy
			parameters = {
				limit = {
					OR = {
						has_envoy_task = {
							task = spy_network
						}
						is_strengthing_imperial_authority = yes
						is_undermining_imperial_authority = yes
					}
				}
			}
			mode = add
		}
	}
 # /
 # Trade & amenities upkeep
 	#mult = value:tec_alternative_modifier_upkeep|MODIFIER1|planet_jobs_upkeep_mult|MODIFIER2|planet_jobs_productive_upkeep_mult|
	#|MODIFIER|planet_jobs_upkeep_mult|MODIFIER2|planet_jobs_productive_upkeep_mult
	tec_alternative_modifier_upkeep = {
		inline_script = {
			script = tec_type_hint
			modifier = $MODIFIER1$
			[[MODIFIER2] modifier = $MODIFIER2$ ]
		}

		base = 1

		#add = planet.modifier:$MODIFIER$
		#add = planet.modifier:$MODIFIER2$
		add = modifier:$MODIFIER1$
		[[MODIFIER2] add = modifier:$MODIFIER2$ ]

		min = 0.1
	}
 # /
# /

# Mechanics
 # Eco civics
	tec_eco_terrasculptor_scaling = {
		base = 1
		add = planet.value:scripted_modifier_mult|MODIFIER|tec_eco_terrasculptor_deposit|
		#square_root = yes
	}
 # /
 # Hoarders
	tec_vault_max_capacity = {
		base = 0
		add = modifier:country_resource_max_add
	}

	tec_vault_scale = {
		inline_script = {
			script = tec_type_hint
			resource = $RESOURCE$
		}

		base = 0
		modifier = {
			is_variable_set = tec_$RESOURCE$_stockpile
			add = value:_tec_valut_scale_inner|VAR|tec_$RESOURCE$_stockpile|
		}
	}

	_tec_valut_scale_inner = {
		inline_script = {
			script = tec_type_hint
			variable = $VAR$
		}
		modifier = {
			add = owner.value:councilor_level_combo|COUNCILOR_1|councilor_civic_tec_corporate_hoarder|COUNCILOR_2|councilor_civic_tec_regular_hoarder|
			exists = owner
		}
		mult = @councilor_civic_tec_regular_hoarder_bonus
		add = 1
		# (1 + 0.1 * level)
		modifier = {
			mult = 2
			exists = owner
			owner = { tec_is_hoarder_empire = yes }
		}
		# * 2 if hoarder
		mult = $VAR$
		# * stockpile
	}

	# Stockpile management script values

	tec_hoarder_get_vault_stockpile = {
		inline_script = {
			script = iterators/tec_iterate_hoarder_resource
			code = "
				modifier = {
					has_planet_flag = tec_vault_manage_\$resource\$
					is_variable_set = tec_\$resource\$_stockpile
					add = tec_\$resource\$_stockpile
				}
			"
		}
	}

	tec_hoarder_get_vault_stockpile_V2 = {
		inline_script = {
			script = tec_type_hint
			resource = $RESOURCE$
			[[MULT] float = $MULT$ ]
		}
		base = 0
		modifier = {
			is_variable_set = tec_$RESOURCE$_stockpile
			add = tec_$RESOURCE$_stockpile
		}
		[[MULT]
			mult = $MULT$
		]
	}


	tec_hoarders_get_resource_intermediary = {
		inline_script = {
			script = tec_type_hint
			resource = $RESOURCE$
		}

		base = 0
		complex_trigger_modifier = {
			trigger = resource_stockpile_compare
			trigger_scope = owner
			parameters = {
				resource = $RESOURCE$
			}
			mode = add
		}
	}


	tec_hoarders_get_resource_stockpile = {
		inline_script = {
			script = iterators/tec_iterate_hoarder_resource
			code = "
				modifier = {
					has_planet_flag = tec_vault_manage_\$resource\$
					add = value:tec_hoarders_get_resource_intermediary|RESOURCE|\$resource\$|
				}
			"
		}
	}

	tec_hoarders_get_resource_stockpile_V2 = {
		inline_script = {
			script = tec_type_hint
			resource = $RESOURCE$
		}
		add = value:tec_hoarders_get_resource_intermediary|RESOURCE|$RESOURCE$|
	}



	tec_hoarders_after_withdraw_balance = {
		inline_script = {
			script = tec_type_hint
			float = $WITHDRAW$
		}

		base = 0
		add = value:tec_hoarder_get_vault_stockpile
		subtract = $WITHDRAW$
		add = tec_stockpile_change
	}

	tec_hoarders_after_withdraw_balance_V2 = {
		inline_script = {
			script = tec_type_hint
			float = $WITHDRAW$
			resource = $RESOURCE$
		}

		base = 0
		add = value:tec_hoarder_get_vault_stockpile_V2|RESOURCE|$RESOURCE$|
		subtract = $WITHDRAW$
	}


	tec_hoarders_after_deposit_balance = {
		inline_script = {
			script = tec_type_hint
			float = $DEPOSIT$
		}

		base = 0
		add = value:tec_hoarders_get_resource_stockpile
		subtract = $DEPOSIT$
		modifier = {
			is_variable_set = tec_stockpile_change
			subtract = tec_stockpile_change
		}
	}

	tec_hoarders_after_deposit_balance_V2 = {
		inline_script = {
			script = tec_type_hint
			float = $WITHDRAW$
			resource = $RESOURCE$
		}

		base = 0
		add = value:tec_hoarders_get_resource_stockpile_V2|RESOURCE|$RESOURCE$|
		subtract = $DEPOSIT$
	}


	tec_hoarders_after_deposit_remaining_capacity = {
		inline_script = {
			script = tec_type_hint
			float = $DEPOSIT$
		}

		base = 0
		add = owner.modifier:country_resource_max_add
		subtract = value:tec_hoarder_get_vault_stockpile
		modifier = {
			is_variable_set = tec_stockpile_change
			subtract = tec_stockpile_change
		}
		subtract = $DEPOSIT$
	}

	tec_hoarders_after_deposit_remaining_capacity_V2 = {
		inline_script = {
			script = tec_type_hint
			float = $WITHDRAW$
			resource = $RESOURCE$
		}
		base = 0
		add = owner.modifier:country_resource_max_add
		subtract = value:tec_hoarder_get_vault_stockpile_V2|RESOURCE|$RESOURCE$|
		subtract = $DEPOSIT$
	}


	tec_hoarders_max_that_can_be_deposited = {
		add = 0
		min = value:tec_hoarders_after_deposit_balance|DEPOSIT|0|
		max = value:tec_hoarders_after_deposit_remaining_capacity|DEPOSIT|0|
		min = 0
	}

	tec_hoarders_max_that_can_be_deposited_V2 = {
		inline_script = {
			script = tec_type_hint
			resource = $RESOURCE$
		}
		add = 0
		min = value:tec_hoarders_after_deposit_balance_V2|RESOURCE|$RESOURCE$|DEPOSIT|0|
		max = value:tec_hoarders_after_deposit_remaining_capacity_V2|RESOURCE|$RESOURCE$|DEPOSIT|0|
		min = 0
	}
 # /

 # Netrunners
	tec_netrunner_efficiency = {
		inline_script = {
			script = tec_type_hint
			float = $BASE$
			number_or_value = $MULT$
		}

		base = 0
		add = owner.value:tec_num_spynetworks
		# Note: More things will amplify this so leaving it open for now
		# Example an espionage action for hacking and getting +1 on bonus
		mult = $MULT$
		add = $BASE$
		# Total mult with councilors
		mult = value:tec_councilor_level_multiplier|MULT|0.05|COUNCILOR|councilor_civic_tec_regular_netrunners|COUNCILOR_2|councilor_civic_tec_corporate_netrunners|
	}
	#mult = value:tec_netrunner_efficiency|BASE|0|MULT|0.1|
 # /
# /

# Agendas
 # Genetic ascendancy

	tec_epigenetic_restoration_exp_cost_per_trait = {
		base = @tec_epigenetic_restoration_exp_cost_base
		mult = value:tec_modifier|MODIFIER|tec_epigenetic_restoration_mult|ADD|-1|MULT|-1|
	}
 # /
# /