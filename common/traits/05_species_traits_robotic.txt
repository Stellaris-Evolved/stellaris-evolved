# O V E R W R I T E 
# TRAIT SORT NOTES:
	#sorting_priority = 20		# Defining trait
	#sorting_priority = 19		# Defining trait
	#sorting_priority = 15		# Key trait
	#sorting_priority = 14		# Key trait
	#sorting_priority = 10		# Relevant trait
	#sorting_priority = 5		# Relevant trait
	#sorting_priority = 4		# Expensive trait 2
	#sorting_priority = 3		# Expensive trait
	#sorting_priority = 2		# Regular expensive trait
	#sorting_priority = 1		# Regular trait
	#sorting_priority = 0		# Meaningless trait
# /

# Trait sorting
		# sorting_priority
		# icon
		# host_has_dlc
		# cost
		# initial
		# randomized
		# potential_crossbreeding_chance
	# Archetypes
		# allowed_archetypes
		# species_class
		# opposites
	# Modifiers
		# custom_tooltip/custom_tooltip_with_modifiers
		# modifier
		# triggered modifiers
	# Modification
		# species_potential_add
		# species_possible_add
		# species_possible_remove
		# species_possible_merge_add
	# External
		# slave_cost
		# assembly_score
# /

trait_robot_power_drills = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = {
		"trait_tec_robot_hyperminerals"
	}
	# Modifiers
	modifier = {
		planet_jobs_minerals_produces_mult = 0.10
	}
	# Modification

	# External
	slave_cost = {
		energy = 750
	}
	assembly_score = {
		modifier = {
			add = 1.5
			from = { has_mining_designation = yes }
		}
		modifier = {
			add = 0.5
			from = { has_rural_designation = yes }
		}
	}
}

trait_robot_harvesters = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = {
		"trait_tec_robot_hyperfood"
	}
	# Modifiers
	modifier = {
		planet_jobs_food_produces_mult = 0.10
	}
	# Modification
	
	# External
	slave_cost = {
		energy = 750
	}
	ai_weight = {
		factor = 1
		modifier = {
			factor = 0
			exists = from
			from = {
				is_machine_empire = yes
				NOT = { has_valid_civic = civic_machine_servitor }
			}
			NOR = {
				has_trait = trait_tec_machine_biobrain
				has_trait = trait_tec_machine_biomass
			}
		}
	}
	assembly_score = {
		modifier = {
			add = 1.5
			from = { has_farming_designation = yes }
		}
		modifier = {
			add = 0.5
			from = { has_rural_designation = yes }
		}
	}
}

trait_robot_superconductive = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = {
		"trait_tec_robot_hyperenergy"
	}
	# Modifiers
	modifier = {
		planet_jobs_energy_produces_mult = 0.10
	}
	# Modification
	
	# External
	slave_cost = {
		energy = 750
	}
	assembly_score = {
		modifier = {
			add = 1.5
			from = { has_generator_designation = yes }
		}
		modifier = {
			add = 0.5
			from = { has_rural_designation = yes }
		}
	}
}

trait_robot_efficient_processors = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 3
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = {
		"trait_tec_robot_kinetic_processors"
		"trait_tec_robot_overclocked_processors"

		"trait_tec_robot_erratic" 
	}
	# Modification
	# Modifiers
	modifier = {
		planet_jobs_produces_mult = 0.05
	}
	# External
	slave_cost = {
		energy = 500
	}
	assembly_score = {
		modifier = {
			add = 0.5 #always good
		}
	}
}

trait_robot_logic_engines = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 2
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_tec_robot_dumb" "trait_tec_robot_quantic_engines" }
	# Modifiers
	modifier = {
		planet_jobs_society_research_produces_mult = 0.10
		planet_jobs_physics_research_produces_mult = 0.10
		planet_jobs_engineering_research_produces_mult = 0.10
	}
	# Modification
	species_potential_add = { # Synth and Machine only
		exists = from
		from = {
			OR = {
				is_machine_empire = yes
				has_technology = tech_synthetic_workers
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
	# External
	slave_cost = {
		energy = 750
	}
	assembly_score = {
		modifier = {
			add = 1.5
			from = { has_research_designation = yes }
		}
	}
}

trait_robot_loyalty_circuits = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 2
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	# Modifiers
	modifier = {
		pop_happiness = 0.1
	}
	# Modification
	species_potential_add = { # Synth only
		exists = from
		from = {
			has_technology = tech_synthetic_workers
			NOT = { has_policy_flag = ai_outlawed }
			is_gestalt = no
		}
	}

	# External
	slave_cost = {
		energy = 500
	}
}

trait_robot_domestic_protocols = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 2
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	initial = no
	randomized = no
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	# Modifiers
	custom_tooltip_with_modifiers = TRAIT_DOMESTIC_PROTOCOLS_EFFECT
	modifier = {
		pop_job_amenities_mult = 0.20
	}
	# Modification
	species_potential_add = { # Synth and Droid only
		exists = from
		from = {
			has_technology = tech_droid_workers
			NOT = { has_policy_flag = ai_outlawed }
			is_gestalt = no
		}
	}
	# External
	slave_cost = {
		energy = 750
	}
}

trait_robot_double_jointed = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_bulky" }
	# Modifiers
	modifier = {
		pop_housing_usage_mult = -0.1
	}
	# Modification

	# External
	slave_cost = {
		energy = 750
	}
	
}

trait_robot_bulky = {
	cost = -1
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_double_jointed" }
	# Modifiers
	modifier = {
		pop_housing_usage_mult = 0.1
	}
	# External
	ai_weight = {
		factor = 0
	}
	slave_cost = {
		energy = -150
	}
}

trait_robot_enhanced_memory = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	# Modifiers
	modifier = {
		leader_skill_levels = 2
	}
	# Modification	
	species_potential_add = { # Synth and Machine only
		exists = from
		from = {
			OR = {
				is_machine_empire = yes
				has_technology = tech_synthetic_leaders
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
	# External
	slave_cost = {
		energy = 750
	}
	ai_weight = {
		factor = 0
	}
}

trait_robot_emotion_emulators = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 2
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_uncanny" }
	# Modifiers
	modifier = {
		pop_job_amenities_mult = 0.20
	}

	# Modification
	species_potential_add = {
		exists = from
		from = {
			is_gestalt = yes
		}
	}

	# External
	slave_cost = {
		energy = 750
	}
}

trait_robot_uncanny = {
	cost = -2
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_emotion_emulators" }
	# Modifiers
	custom_tooltip = TRAIT_UNCANNY_EFFECT
	modifier = {
		pop_job_amenities_mult = -0.20
	}
	# Modification
	species_potential_add = {
		exists = from
		from = {
			is_gestalt = yes
		}
	}

	# External
	ai_weight = {
		factor = 0
	}
	slave_cost = {
		energy = 100
	}
}

trait_robot_durable = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_high_maintenance" }
	# Modifiers
	modifier = {
		planet_pops_robotics_upkeep_mult = -0.10
	}
	# Modification

	# External
	slave_cost = {
		energy = 750
	}
}

trait_robot_high_maintenance = {
	cost = -1
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_durable" }
	# Modifiers
	modifier = {
		planet_pops_robotics_upkeep_mult = 0.10
	}
	# Modification
	# External
	ai_weight = {
		factor = 0
	}
	slave_cost = {
		energy = -150
	}
}

trait_robot_learning_algorithms = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_repurposed_hardware" }
	# Modifiers
	modifier = {
		species_leader_exp_gain = 0.25
	}
	# Modification
	species_potential_add = { # Synth and Machine only
		exists = from
		from = {
			OR = {
				is_machine_empire = yes
				has_technology = tech_synthetic_leaders
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
	# External
	slave_cost = {
		energy = 500
	}
}

trait_robot_repurposed_hardware = {
	cost = -1
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_learning_algorithms" }
	# Modifiers
	modifier = {
		species_leader_exp_gain = -0.25
	}
	# Modification
	species_potential_add = { # Synth and Machine only
		exists = from
		from = {
			OR = {
				is_machine_empire = yes
				has_technology = tech_synthetic_leaders
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
	# External
	slave_cost = {
		energy = -500
	}
	ai_weight = {
		weight = 1
		modifier = {
			factor = 0
			years_passed > 5
		}
	}
}

trait_robot_mass_produced = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 2
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_custom_made" "trait_tec_robot_fractal" "trait_tec_robot_nanitebody" }
	# Modifiers
	modifier = {
		planet_pop_assembly_mult = 0.10
	}
	# Modification
	# External
	slave_cost = {
		energy = 1500
	}
}

trait_robot_custom_made = {
	cost = -2
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_mass_produced" "trait_tec_robot_fractal" "trait_tec_robot_nanitebody" }
	# Modifiers
	modifier = {
		planet_pop_assembly_mult = -0.10
	}
	# Modification

	# External
	slave_cost = {
		energy = -200
	}
	ai_weight = {
		factor = 0
	}
	
}

trait_robot_recycled = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 2
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_luxurious" "trait_tec_robot_weak" }
	# Modifiers
		#assembling_modifier, declining_modifier, growing_modifier are applied to planet when pop is the one assembling/declining/growing
	assembling_modifier = {
		planet_pop_assemblers_upkeep_mult = -0.30
	}
	# Modification

	# External
	slave_cost = {
		energy = 1500
	}
}

trait_robot_luxurious = {
	cost = -2
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_recycled" "trait_tec_robot_weak" }
	# Modifiers
		#assembling_modifier, declining_modifier, growing_modifier are applied to planet when pop is the one assembling/declining/growing
	assembling_modifier = {
		planet_pop_assemblers_upkeep_mult = 0.30
	}
	# Modification
	# External
	slave_cost = {
		energy = -200
	}
	ai_weight = {
		weight = 1
		modifier = {
			factor = 0
			years_passed > 5
		}
	}
}

trait_robot_propaganda_machines = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	allowed_archetypes = { ROBOT }
	opposites = {
		"trait_tec_robot_weak_unity"
		"trait_tec_robot_good_unity"
		"trait_tec_robot_hyperunity"
	}
	# Modifiers
	modifier = {
		planet_jobs_unity_produces_mult = 0.10
		planet_jobs_unity_upkeep_mult = -0.1
	}
	# Modification
	species_potential_add = { # Synth and Droid only
		exists = from
		from = {
			has_technology = tech_droid_workers
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
	# External
	slave_cost = {
		energy = 750
	}
	assembly_score = {
		modifier = {
			add = 1.5
			from = { has_unity_designation = yes }
		}
	}
}

trait_robot_streamlined_protocols = {
	sorting_priority = 1		# Regular trait
	cost = {
		base = 1
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_high_bandwidth" }
	# Modifiers
	modifier = {
		species_empire_size_mult = -0.20
	}
	# Modification

	# External
	slave_cost = {
		energy = 750
	}
}

trait_robot_high_bandwidth = {
	cost = -1
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	opposites = { "trait_robot_streamlined_protocols" }
	# Modifiers
	modifier = {
		species_empire_size_mult = 0.20
	}
	# Modification

	# External
	slave_cost = {
		energy = -150
	}
}


trait_robot_trading_algorithms = {
	sorting_priority = 2		# Regular expensive trait
	cost = {
		base = 2
		modifier = {
			add = -1
			has_country_flag = tec_synth_malleability
		}
	}
	# Archetypes
	inline_script = traits/inline_evolved_mechanical_archetypes
	# Modifiers
	modifier = {
		pop_job_trade_mult = 0.25
	}
	# Modification
	species_potential_add = {
		exists = from
		from = {
			OR = {
				AND = {
					is_machine_empire = yes
					has_valid_civic = civic_tec_machine_traders
				}
				has_technology = tech_droid_workers
				has_origin = origin_tec_slavetothesystem
				has_origin = origin_tec_robosapiens
			}
			NOT = { has_policy_flag = ai_outlawed }
		}
	}
	# External
	slave_cost = {
		energy = 500
	}
}

