# common\ai_budget\zze_ow_unity_budget.txt

unity_expenditure_leaders = {
	resource = unity
	type = expenditure
	category = leaders

	potential = {
		always = yes
		# NOTE: Removed for now - need to make a dynamic evaluator per used leader cap per position
		#check_variable_arithmetic = {
		#	which = value:tec_max_leader_capacity
		#	value > value:tec_used_leader_capacity
		#}
	}

	weight = {
		weight = 0.4
	}

	desired_min = {
		base = 0
	}

	desired_max = {
		base = 5000 # good margin of error
	}
}

unity_upkeep_leaders = {
	resource = unity
	type = upkeep
	category = leaders

	potential = {
		always = yes
	}

	weight = {
		weight = 0.3
	}

	desired_max = {
		base = 300
	}
}

unity_expenditure_edicts = {
	resource = unity
	type = expenditure
	category = edicts

	potential = {
		has_resource = {
			type = unity
			amount > 300
		}
	}

	weight = {
		weight = 0.1
	}

	desired_min = {
		base = 0
	}

	desired_max = {
		base = @Edict3Cost
		modifier = {
			has_technology = tech_ascension_theory
			set = @ambitionCost
		}
		multiply = value:edict_size_effect
		multiply = 1.5
	}
}

unity_upkeep_edicts = {
	resource = unity
	type = upkeep
	category = edicts

	potential = {
		always = yes
	}

	weight = {
		weight = 0.07
	}
}

unity_upkeep_country = {
	resource = unity
	type = upkeep
	category = country

	potential = {
		always = yes
	}

	weight = {
		weight = 0.4
	}
}