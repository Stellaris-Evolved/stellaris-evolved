# events\!!_origin_events_1.txt

###################################
# Origin Events
# Written by Henrik Thyrwall et al
###################################

namespace = origin

# Scion Setup
# origin.5

# Bring Into Fold War Goal Successful (HIDDEN)
# Necessary to bounce effects in this event from the war goal, or there is no truce period
# origin.6

# Intro Diplomatic Message
# origin.10

# Reward (HIDDEN)
# origin.20

# Reward - Engineering Tech
# origin.21

# Reward - Physics Tech
# origin.22

# Reward - Society Tech
# origin.23

# Reward - Resources
# origin.24

# Scion Tasks
# origin.25

# Task: Surrender Leader
# origin.26

# Reward: Receive Leader
# origin.27

# Reward: Receive Ships
# origin.28

# FE War Intervention
# origin.50

# Reward: Receive Temporary FE Fleet
# origin.51

# FE Fleet Lost
# origin.52

# FE Fleet Lost - FE Communication
# origin.53

# FE Fleet Reclaimed (War against Overlord)
# origin.29

# FE Fleet Reclaimed (War Over)
# origin.30

# FE Fleet Reclaimed
# origin.54

# Common Ground/Hegemon Setup
country_event = {
	id = origin.55
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers
		add_tradition = tr_diplomacy_adopt
		add_tradition = tr_diplomacy_the_federation

		# Replace prescripted ideal planets with barren worlds and spawn federation partners.
		if = {
			limit = { num_guaranteed_colonies >= 2 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							change_pc = pc_barren
						}
						spawn_random_home_system = yes
						last_created_system = {
							federation_origin_planet_setup = {
								NUM = 1
							}
						}
					}
					closest_system = {
						limit = { has_star_flag = neighbor_t2_second_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							change_pc = pc_barren
						}
						spawn_random_home_system = yes
						last_created_system = {
							federation_origin_planet_setup = {
								NUM = 2
							}
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies >= 1 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							change_pc = pc_barren
						}
						spawn_random_home_system = yes
						last_created_system = {
							federation_origin_planet_setup = {
								NUM = 1
							}
						}
					}
					closest_system = {
						limit = {
							NOT = { has_star_flag = neighbor_t1_first_colony }
							has_owner = no
						}
						spawn_random_home_system = yes
						last_created_system = {
							federation_origin_planet_setup = {
								NUM = 2
							}
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies = 0 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_owner = no }
						spawn_random_home_system = yes
						last_created_system = {
							federation_origin_planet_setup = {
								NUM = 1
							}
						}
					}
					closest_system = {
						limit = {
							NOT = { has_star_flag = fed_origin_system_1 }
							has_owner = no
						}
						spawn_random_home_system = yes
						last_created_system = {
							federation_origin_planet_setup = {
								NUM = 2
							}
						}
					}
				}
			}
		}

		# Create first member
		event_target:fed_planet_1 = {
			solar_system = { generate_home_system_resources = yes }
			if = {
				limit = {
					root = {
						NOT = {
							tec_is_selective_kinship_empire = yes
						}
					}
				}
				create_fed_planet_1_species = { CLASS = random }
			}
			else = {
				root = {
					switch = {
						trigger = is_species_class
						HUM =		{ create_fed_planet_1_species = { CLASS = HUM } }
						MAM =		{ create_fed_planet_1_species = { CLASS = MAM } }
						FUN =		{ create_fed_planet_1_species = { CLASS = FUN } }
						AVI =		{ create_fed_planet_1_species = { CLASS = AVI } }
						PLANT =		{ create_fed_planet_1_species = { CLASS = PLANT } }
						ART =		{ create_fed_planet_1_species = { CLASS = ART } }
						REP =		{ create_fed_planet_1_species = { CLASS = REP } }
						MOL =		{ create_fed_planet_1_species = { CLASS = MOL } }
						LITHOID =	{ create_fed_planet_1_species = { CLASS = LITHOID } }
						NECROID =	{ create_fed_planet_1_species = { CLASS = NECROID } }
						AQUATIC =	{ create_fed_planet_1_species = { CLASS = AQUATIC } }
						TOX =		{ create_fed_planet_1_species = { CLASS = TOX } }
						default =	{ create_fed_planet_1_species = { CLASS = HUM } }
					}
				}
			}
			# Common Ground
			if = {
				limit = {
					root = { has_origin = origin_common_ground }
				}
				create_common_ground_member = {
					NUM = 1
				}
			}
			# Hegemon
			if = {
				limit = {
					root = {
						has_origin = origin_hegemon
						NOT = { has_ethic = ethic_xenophobe }
					}
				}
				create_hegemon_member = {
					NUM = 1
				}
			}
			create_colony = {
				owner = event_target:fed_member_1
			}
			generate_start_deposits_and_blockers = yes
			generate_start_buildings_and_districts = yes
			generate_start_pops = yes
			event_target:fed_member_1 = {
				country_event = { id = game_start.8 }
				give_starting_resources_effect = yes
			}
			solar_system = {
				if = {
					limit = {
						event_target:fed_member_1 = {
							is_gestalt = no
						}
					}
					create_starbase = {
						size = starbase_starport
						module = shipyard
						building = crew_quarters
						owner = event_target:fed_member_1
						effect = {
							set_starbase_module = {
								slot = 1
								module = trading_hub
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
					}
				}
				else = {
					create_starbase = {
						size = starbase_starport
						module = shipyard
						building = crew_quarters
						owner = event_target:fed_member_1
						effect = {
							if = {
								limit = {
									event_target:fed_member_1 = {
										has_valid_civic = civic_machine_astromining_drones
									}
								}
								set_starbase_module = {
									slot = 1
									module = astromining_bay
								}
							}
							else = {
								set_starbase_module = {
									slot = 1
									module = solar_panel_network
								}
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
					}
				}
			}
		}

		# Create second member
		event_target:fed_planet_2 = {
			solar_system = { generate_home_system_resources = yes }
			if = {
				limit = {
					root = {
						NOT = {
							tec_is_selective_kinship_empire = yes
						}
					}
				}
				create_fed_planet_2_species = { CLASS = random }
			}
			else = {
				root = {
					switch = {
						trigger = is_species_class
						HUM =		{ create_fed_planet_2_species = { CLASS = HUM } }
						MAM =		{ create_fed_planet_2_species = { CLASS = MAM } }
						FUN =		{ create_fed_planet_2_species = { CLASS = FUN } }
						AVI =		{ create_fed_planet_2_species = { CLASS = AVI } }
						PLANT =		{ create_fed_planet_2_species = { CLASS = PLANT } }
						ART =		{ create_fed_planet_2_species = { CLASS = ART } }
						REP =		{ create_fed_planet_2_species = { CLASS = REP } }
						MOL =		{ create_fed_planet_2_species = { CLASS = MOL } }
						LITHOID =	{ create_fed_planet_2_species = { CLASS = LITHOID } }
						NECROID =	{ create_fed_planet_2_species = { CLASS = NECROID } }
						AQUATIC =	{ create_fed_planet_2_species = { CLASS = AQUATIC } }
						TOX =		{ create_fed_planet_2_species = { CLASS = TOX } }
						default =	{ create_fed_planet_2_species = { CLASS = HUM } }
					}
				}
			}
			# Common Ground
			if = {
				limit = {
					root = { has_origin = origin_common_ground }
				}
				create_common_ground_member = { NUM = 2 }
			}
			# Hegemon
			if = {
				limit = {
					root = {
						has_origin = origin_hegemon
						NOT = { has_ethic = ethic_xenophobe }
					}
				}
				create_hegemon_member = {
					NUM = 2
				}
			}
			create_colony = {
				owner = event_target:fed_member_2
			}
			generate_start_deposits_and_blockers = yes
			generate_start_buildings_and_districts = yes
			generate_start_pops = yes
			event_target:fed_member_2 = {
				country_event = { id = game_start.8 }
				give_starting_resources_effect = yes
			}
			solar_system = {
				if = {
					limit = {
						event_target:fed_member_2 = {
							is_gestalt = no
						}
					}
					create_starbase = {
						size = starbase_starport
						module = shipyard
						building = crew_quarters
						owner = event_target:fed_member_2
						effect = {
							set_starbase_module = {
								slot = 1
								module = trading_hub
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
					}
				}
				else = {
					create_starbase = {
						size = starbase_starport
						module = shipyard
						building = crew_quarters
						owner = event_target:fed_member_2
						effect = {
							if = {
								limit = {
									event_target:fed_member_2 = {
										has_valid_civic = civic_machine_astromining_drones
									}
								}
								set_starbase_module = {
									slot = 1
									module = astromining_bay
								}
							}
							else = {
								set_starbase_module = {
									slot = 1
									module = solar_panel_network
								}
							}
							set_starbase_module = {
								slot = 2
								module = shipyard
							}
						}
					}
				}
			}
		}

		# Finish setting up member empires
		event_target:fed_member_1 = {
			create_starting_leaders = yes
			country_event = { id = game_start.9 } # create starter set of ships
			country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
			country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
			join_alliance = {
				who = root
				override_requirements = yes
			}
			set_name = random # Fixes some naming issues
		}
		event_target:fed_member_2 = {
			create_starting_leaders = yes
			country_event = { id = game_start.9 }
			country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
			country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
			join_alliance = {
				who = root
				override_requirements = yes
			}
			set_name = random # Fixes some naming issues
		}
		# Set Intel levels, Opinion, and Federation laws
		if = {
			limit = { has_origin = origin_common_ground }
			event_target:fed_member_1 = {
				add_opinion_modifier = {
					who = root
					modifier = opinion_common_ground
				}
				add_trust = {
					amount = 50
					who = root
				}
				add_trust = {
					amount = 50
					who = event_target:fed_member_2
				}
				add_intel = {
					amount = 60
					who = root
				}
				add_intel = {
					amount = 60
					who = event_target:fed_member_2
				}
			}
			event_target:fed_member_2 = {
				add_opinion_modifier = {
					who = root
					modifier = opinion_common_ground
				}
				add_trust = {
					amount = 50
					who = root
				}
				add_trust = {
					amount = 50
					who = event_target:fed_member_1
				}
				add_intel = {
					amount = 60
					who = root
				}
				add_intel = {
					amount = 60
					who = event_target:fed_member_1
				}
			}
			add_opinion_modifier = {
				who = event_target:fed_member_1
				modifier = opinion_common_ground
			}
			add_opinion_modifier = {
				who = event_target:fed_member_2
				modifier = opinion_common_ground
			}
			add_trust = {
				amount = 50
				who = event_target:fed_member_1
			}
			add_trust = {
				amount = 50
				who = event_target:fed_member_2
			}
			add_intel = {
				amount = 60
				who = event_target:fed_member_1
			}
			add_intel = {
				amount = 60
				who = event_target:fed_member_2
			}
			set_federation_leader = root
			country_event = { id = origin.57 days = 2 }
			# EVOLVED
				if = {	# Megas always spawn with trade leagues
					limit = {
						root = {
							tec_can_make_trade_federation = yes
						}
					}
					federation = {
						set_federation_type = trade_federation
						set_name = random
						set_federation_law = succession_term_years_20
					}
				}
				else_if = {	# Materialist research federation
					limit = {
						root = {
							tec_can_make_research_federation = yes
						}
					}
					federation = {
						set_federation_type = research_federation
						set_name = random
						set_federation_law = succession_term_years_20
					}
				}
				else_if = {	# Spi faction
					limit = {
						root = {
							is_spiritualist = yes
						}
					}
					federation = {
						set_federation_type = spiritualist_federation
						set_name = random
						set_federation_law = succession_term_years_20
					}
				}
				else_if = {	# Spi faction
					limit = {
						root = {
							tec_can_make_military_federation = yes
						}
					}
					federation = {
						set_federation_type = military_federation
						set_name = random
						set_federation_law = succession_term_years_20
					}
				}
				else = {
					federation = {
						set_federation_type = default_federation
					}
				}
			# /
		}
		if = {
			limit = { has_origin = origin_hegemon }
			federation = {
				set_federation_type = hegemony_federation
				set_federation_leader = root
				set_name = random
				set_federation_law = succession_term_years_20
				add_federation_experience = 600
				add_cohesion = 100
			}
			event_target:fed_member_1 = {
				add_intel = {
					amount = 40
					who = root
				}
				add_intel = {
					amount = 40
					who = event_target:fed_member_2
				}
				set_closed_borders = {
					who = root
					status = no
				}
				set_closed_borders = {
					who = event_target:fed_member_2
					status = no
				}
			}
			event_target:fed_member_2 = {
				add_intel = {
					amount = 40
					who = root
				}
				add_intel = {
					amount = 40
					who = event_target:fed_member_1
				}
				set_closed_borders = {
					who = root
					status = no
				}
				set_closed_borders = {
					who = event_target:fed_member_1
					status = no
				}
			}
			add_intel = {
				amount = 40
				who = event_target:fed_member_1
			}
			set_closed_borders = {
				who = event_target:fed_member_1
				status = no
			}
			add_intel = {
				amount = 40
				who = event_target:fed_member_2
			}
			set_closed_borders = {
				who = event_target:fed_member_2
				status = no
			}
		}
	}
	after = {
		# Evolved fix thingies
		event_target:fed_member_1 = {
			if = {
				limit = {
					OR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_tec_corporate_competition_purifiers
					}
				}
				if = {
					limit = {
						has_valid_civic = civic_fanatic_purifiers
					}
					force_remove_civic = civic_fanatic_purifiers
					change_government = {
						cooldown = no
						civics = random
					}
				}
				if = {
					limit = {
						has_valid_civic = civic_tec_corporate_competition_purifiers
					}
					force_remove_civic = civic_tec_corporate_competition_purifiers
					change_government = {
						cooldown = no
						civics = random
					}
				}
			}
		}
		event_target:fed_member_2 = {
			if = {
				limit = {
					OR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_tec_corporate_competition_purifiers
					}
				}
				if = {
					limit = {
						has_valid_civic = civic_fanatic_purifiers
					}
					force_remove_civic = civic_fanatic_purifiers
					change_government = {
						cooldown = no
						civics = random
					}
				}
				if = {
					limit = {
						has_valid_civic = civic_tec_corporate_competition_purifiers
					}
					force_remove_civic = civic_tec_corporate_competition_purifiers
					change_government = {
						cooldown = no
						civics = random
					}
				}
			}
		}
	}
}

### Doomsday

# Set Up
# origin.60

# Doomsday 2
# origin.61

# Doomsday 3
# origin.65

# Doomsday 4
# origin.70

# Doomsday 5
# origin.75

# Doomsday 5.5
# origin.76

# Doomsday 6 - THE END		# MEMESIS
planet_event = {
	id = origin.80
	title = "origin.80.name"
	desc = {
		trigger = {
			has_planet_flag = doomsday_lost_some_pops
			has_planet_flag = doomsday_still_original_owner
			event_target:doomsday_owner = {
				NOT = { has_ethic = ethic_gestalt_consciousness }
			}
		}
		text = "origin.80.1.desc"
	}
	desc = {
		trigger = {
			has_planet_flag = doomsday_lost_some_pops
			has_planet_flag = doomsday_still_original_owner
			event_target:doomsday_owner = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
		text = "origin.80.1.gestalt.desc"
	}
	desc = {
		trigger = {
			has_planet_flag = doomsday_lost_many_pops
			has_planet_flag = doomsday_still_original_owner
			event_target:doomsday_owner = {
				NOT = { has_ethic = ethic_gestalt_consciousness }
			}
		}
		text = "origin.80.2.desc"
	}
	desc = {
		trigger = {
			has_planet_flag = doomsday_lost_many_pops
			has_planet_flag = doomsday_still_original_owner
			event_target:doomsday_owner = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
		text = "origin.80.2.gestalt.desc"
	}
	desc = {
		trigger = {
			has_planet_flag = doomsday_lost_everything
			has_planet_flag = doomsday_still_original_owner
			event_target:doomsday_owner = {
				NOT = { has_ethic = ethic_gestalt_consciousness }
			}
		}
		text = "origin.80.4.desc"
	}
	desc = {
		trigger = {
			has_planet_flag = doomsday_lost_everything
			has_planet_flag = doomsday_still_original_owner
			event_target:doomsday_owner = {
				has_ethic = ethic_gestalt_consciousness
			}
		}
		text = "origin.80.4.gestalt.desc"
	}
	desc = {
		trigger = {
			NOT = { has_planet_flag = doomsday_still_original_owner }
		}
		text = "origin.80.5.desc"
	}
	picture = GFX_evt_exploding_planet
	show_sound = event_super_explosion
	location = root

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_owner = yes
				owner = { is_same_value = event_target:doomsday_owner }
			}
			set_planet_flag = doomsday_still_original_owner
			if = {
				limit = {
					owner = {
						is_megacorp = yes
					}
				}
				set_planet_flag = tec_doomsday_megacorp
			}
			if = {
				limit = {
					owner = { num_owned_planets = 1 }
				}
				set_planet_flag = doomsday_lost_everything
				owner = { set_country_flag = silence_destroy_event }
			}
			else_if = {
				limit = {
					owner = { num_owned_planets > 1 }
					num_pops >= 20
				}
				set_planet_flag = doomsday_lost_many_pops
			}
			else_if = {
				limit = {
					owner = { num_owned_planets > 1 }
					num_pops <= 19
					num_pops > 0
				}
				set_planet_flag = doomsday_lost_some_pops
			}
			event_target:doomsday_owner = {
				every_relation = {
					limit = {
						is_ai = no
						has_communications = prev
						OR = {
							has_intel_level = {
								who = prev
								category = government
								level >= 1
							}
							has_intel_level = {
								who = prev
								category = economy
								level >= 1
							}
						}
					}
					country_event = { id = origin.90 }
				}
			}
		}
		else_if = {
			limit = {
				exists = event_target:doomsday_owner
			}
			event_target:doomsday_owner = {
				country_event = { id = origin.81 }
				every_relation = {
					limit = {
						is_ai = no
						has_communications = prev
						OR = {
							has_intel_level = {
								who = prev
								category = government
								level >= 1
							}
							has_intel_level = {
								who = prev
								category = economy
								level >= 1
							}
						}
					}
					country_event = { id = origin.91 }
				}
			}
		}
		every_owned_pop = { kill_pop = yes }
		remove_modifier = doomsday_5
		destroy_colony = yes
		change_pc = pc_shattered
		clear_deposits = yes
		random_list = {
			1 = {
				add_deposit = d_minerals_10
				add_deposit = d_minerals_6
			}
			1 = {
				add_deposit = d_minerals_10
				add_deposit = d_minerals_2
			}
			1 = {
				add_deposit = d_minerals_8
			}
			1 = {
				add_deposit = d_minerals_4
			}
		}
	}

	option = {
		name = origin_80.a
		trigger = {
			has_planet_flag = doomsday_lost_everything
		}
	}
	option = {
		name = origin_80.b
		trigger = {
			has_planet_flag = doomsday_lost_many_pops
		}
	}
	option = {
		name = origin_80.c
		trigger = {
			has_planet_flag = doomsday_lost_some_pops
		}
	}
	option = {
		name = UNFORTUNATE
		trigger = {
			NOR = {
				has_planet_flag = doomsday_lost_everything
				has_planet_flag = doomsday_lost_some_pops
				has_planet_flag = doomsday_lost_many_pops
				has_planet_flag = doomsday_lost_some_pops
			}
		}
	}
	option = {
		name = tec_doomsday_economy
		
		trigger = {
			has_planet_flag = tec_doomsday_megacorp
		}
	}
}

# Doomsday 6 - Planet Evacuated
# origin.81

# Doomsday Colonized Planet (HIDDEN)
# origin.84

# Doomsday Colonized Planet
# origin.85

# Doomsday - Neighbors Informed
# origin.90

# Doomsday - Neighbors Informed, Planet Completely Evacuated
# origin.91

# Lost Colony Setup
# origin.100

# Broken Shackles Setup
#country_event = {
#	id = origin.110

# Broken Shackles - crashed ship depleted
#country_event = {
#	id = origin.111
	
# Spawn Broken Shackles for Payback
#country_event = {
#	id = origin.112

# Spawn Payback for Broken Shackles
#country_event = {
#	id = origin.113


#Generate Planetary Blockers

# country_event = { # Cleared empty, moved to `generate_start_buildings_and_districts`
# 	id = origin.5081
# 	hide_window = yes
# 	is_triggered_only = yes

# 	trigger = {
# 		has_origin = origin_broken_shackles
# 	}

# 	immediate = {
# 		capital_scope = {
# 			clear_blockers = yes
# 			add_deposit = d_crashed_slaver_ship
# 			add_deposit = random_blocker
# 			add_deposit = random_blocker
# 			add_deposit = random_blocker
# 			while = {
# 				count = 5
# 				add_deposit = d_ship_debris_broken_shackles_blocker
# 			}
# 		}
# 	}
# }