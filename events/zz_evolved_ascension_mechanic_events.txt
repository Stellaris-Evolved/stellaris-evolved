# events\zz_evolved_ascension_mechanic_events.txt

# --------------------------------- MAIN ASCENSIONS ---------------------------------
# Biological A Genetic
# ------------------------------------------------------------ tec_gene_path.5xx +
namespace = tec_gene_path
 # --------------- GENE T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - Requires to build a building - adds an alert
	#	id = tec_gene_path.250

	#country_event = { # Tease - Building built - continues triggering the tec_gene_path.500 event
	#	id = tec_gene_path.25001
 # /
 # --------------- GENE T2 POSTMECHANIC - GENETIC RECOMBINATION
	country_event = { # Situation Started - Genetic Recombination
		id = tec_gene_path.500
		title = "tec_gene_path.500.name"
		# Descs
			# Regular
			desc = {
				text = "tec_gene_path.500.desc.regular"
				trigger = {
					is_gestalt = no
					NOT = {
						has_country_flag = tec_gene_recombination_tutorial
					}
				}
			}
			desc = {
				text = "tec_gene_path.500.desc.regular.repeatable"
				trigger = {
					is_gestalt = no
					has_country_flag = tec_gene_recombination_tutorial
				}
			}
			# Gestalt
			desc = {
				text = "tec_gene_path.500.desc.hive"
				trigger = {
					is_gestalt = yes
				}
			}
			desc = {
				text = "tec_gene_path.500.desc.hive.repeatable"
				trigger = {
					is_gestalt = yes
					NOT = {
						has_country_flag = tec_gene_recombination_tutorial
					}
				}
			}
			# Fallback
			desc = "tec_gene_path.500.desc.regular"
		# /
		picture = GFX_evt_overtuned
		show_sound = event_evolution_mastery
		trackable = yes

		is_triggered_only = yes

		immediate = {
			owner_main_species = {
				save_event_target_as = tec_target_species
			}
			save_event_target_as = tec_temp_country
			event_target:tec_temp_country = {
				start_situation = {
					type = situation_tec_ascension_genetic_recombination
					target = event_target:tec_temp_country.capital_scope
					effect = {
						save_event_target_as = new_situation
						set_situation_locked = yes
					}
				}
			}
		}

		after = {
			hidden_effect = {
				set_country_flag = tec_gene_recombination_tutorial
			}
		}

		# Options
			option = {
				name = "tec_gene_path.500.slow"
				custom_tooltip = "tec_gene_path.500.slow.tooltip"
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_blue
					text = set_situation_approach_icon_text
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_genetic_recombination_approach_slow
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_gene_path.500.standard"
				custom_tooltip = "tec_gene_path.500.standard.tooltip"
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_green
					text = set_situation_approach_icon_text
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_genetic_recombination_approach_standard
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_gene_path.500.fast"
				custom_tooltip = "tec_gene_path.500.fast.tooltip"
				icon = {
					icon = GFX_situation_approach_tec_genecrank
					icon_background = GFX_situation_approach_bg_yellow
					text = set_situation_approach_icon_text
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_genetic_recombination_approach_fast
						set_situation_locked = no
					}
				}
			}
		# /
	}
	situation_event = { # Recombination - 10% - Select the focus
		id = tec_gene_path.50010
		title = "tec_gene_path.50010.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50010.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_gene_path.50010.recombine.upgrade
				custom_tooltip = tec_gene_path.50010.recombine.upgrade.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				allow = {
					custom_tooltip = {
						fail_text = tec_gene_path.50010.recombine.upgrade.nope
						hidden_trigger = {
							owner = {
								tec_has_all_genetic_perfection_upgraded_trait_flags = no
							}
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_upgrade
				}
			}
			option = {
				name = tec_gene_path.50010.recombine.point
				custom_tooltip = tec_gene_path.50010.recombine.point.tooltip
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_lotto
				}
				allow = {
					always = no
				}
			}
		# /
	}
	situation_event = { # Recombination - 25% - SORTER
		id = tec_gene_path.50025
		hide_window = yes
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				if = {	# Trait upgrade
					limit = {
						has_situation_flag = tec_gene_recombination_upgrade
					}
					situation_event = {
						id = tec_gene_path.50125
					}
				}
				else_if = {	# Trait point increase
					limit = {
						has_situation_flag = tec_gene_recombination_lotto
					}
					situation_event = {
						id = tec_gene_path.50925
					}
				}
				else = {	# Fallback to trait increase
					situation_event = {
						id = tec_gene_path.50925
					}
				}
			}
		}
	}
	situation_event = { # Recombination - 25A% - Select the trait type
		id = tec_gene_path.50125
		title = "tec_gene_path.50125.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50125.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {	# Main trait
				name = tec_gene_path.50125.recombine.main
				custom_tooltip = tec_gene_path.50125.recombine.main.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				allow = {
					custom_tooltip = {
						fail_text = tec_gene_path.50125.already.unlocked.all
						hidden_trigger = {
							exists = owner
							owner = {
								tec_has_all_genetic_perfection_advanced_trait_flags = no
							}
						}
					}
					custom_tooltip = {
						fail_text = tec_gene_path.50125.already.unlocked.all.main
						hidden_trigger = {
							exists = owner
							owner = {
								NAND = {
									has_country_flag = unlocked_trait_tec_gene_main_t2
									has_country_flag = unlocked_trait_tec_gene_main_t3
								}
							}
						}
					}
					#custom_tooltip = {
					#	fail_text = tec_gene_path.50125.require.previous.t2.knowledge
					#	# Requires at least 5 discovered t2 traits
					#	hidden_trigger = {
					#		exists = owner
					#		owner = {
					#			NOT = {
					#				has_country_flag = unlocked_trait_tec_gene_main_t2
					#			}
					#			calc_true_if = {
					#				amount > 5
					#				has_country_flag = unlocked_trait_tec_gene_automodding_t2
					#				has_country_flag = unlocked_trait_tec_gene_genius_t2
					#				has_country_flag = unlocked_trait_tec_gene_will_t2
					#				has_country_flag = unlocked_trait_tec_gene_fertile_t2
					#				has_country_flag = unlocked_trait_tec_gene_robust_t2
					#				has_country_flag = unlocked_trait_tec_gene_audacious_t2
					#				has_country_flag = unlocked_trait_tec_gene_lifespan_t2
					#				has_country_flag = unlocked_trait_tec_gene_metabolic_t2
					#				# Basic
					#				has_country_flag = unlocked_trait_tec_gene_energy_t2
					#				has_country_flag = unlocked_trait_tec_gene_mining_t2
					#				has_country_flag = unlocked_trait_tec_gene_farming_t2
					#				has_country_flag = unlocked_trait_tec_gene_research_t2
					#				has_country_flag = unlocked_trait_tec_gene_unity_t2
					#				has_country_flag = unlocked_trait_tec_gene_industry_t2
					#				has_country_flag = unlocked_trait_tec_gene_amenities_t2
					#				has_country_flag = unlocked_trait_tec_gene_trade_t2
					#			}
					#		}
					#	}
					#}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_main_trait
				}
			}
			option = {	# Advanced trait
				name = tec_gene_path.50125.recombine.advanced
				custom_tooltip = tec_gene_path.50125.recombine.advanced.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				allow = {
					custom_tooltip = {
						fail_text = tec_gene_path.50125.already.unlocked.all
						hidden_trigger = {
							exists = owner
							owner = {
								tec_has_all_genetic_perfection_advanced_trait_flags = no
							}
						}
					}
					custom_tooltip = {
						fail_text = tec_gene_path.50125.require.main.upgrade
						hidden_trigger = {
							exists = owner
							# TODO ASCENSION
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_advanced_trait
				}
			}
			option = {	# Normal trait
				name = tec_gene_path.50125.recombine.normal
				custom_tooltip = tec_gene_path.50125.recombine.normal.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				allow = {
					custom_tooltip = {
						fail_text = tec_gene_path.50125.already.unlocked.all
						hidden_trigger = {
							exists = owner
							owner = {
								tec_has_all_genetic_perfection_advanced_trait_flags = no
							}
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_normal_trait
				}
			}
			#option = {	# Rare trait - moved to trait point lotto
			#	name = tec_gene_path.50125.recombine.rare
			#	custom_tooltip = tec_gene_path.50125.recombine.rare.tooltip
			#	icon = {
			#		icon = GFX_situation_approach_genetics
			#		icon_background = GFX_situation_approach_bg_tec_orange
			#		text = tec_icon_text_outcome_neutral
			#	}
			#	allow = {
			#		custom_tooltip = {
			#			fail_text = tec_gene_path.50125.already.unlocked.all
			#			hidden_trigger = {
			#				tec_has_all_genetic_perfection_recombined_trait_flags = no
			#			}
			#		}
			#	}
			#	hidden_effect = {
			#		set_situation_flag = tec_gene_recombination_main_trait
			#	}
			#}
		# /
	}
	situation_event = { # Recombination - 25B% - WIP Trait increase puzzle
		id = tec_gene_path.50925
		title = "tec_gene_path.50925.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50925.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {	# Option A
				name = tec_gene_path.50925.lotto.red
				custom_tooltip = tec_gene_path.50925.lotto.red.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_red
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_red
				}
			}
			option = {	# Option B
				name = tec_gene_path.50925.lotto.green
				custom_tooltip = tec_gene_path.50925.lotto.green.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_green
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_green
				}
			}
			option = {	# Option C
				name = tec_gene_path.50925.lotto.blue
				custom_tooltip = tec_gene_path.50925.lotto.blue.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_blue
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_blue
				}
			}
			option = {	# Option D
				name = tec_gene_path.50925.lotto.yellow
				custom_tooltip = tec_gene_path.50925.lotto.yellow.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_yellow
				}
			}
		# /
	}
	situation_event = { # Recombination - 50% - SORTER
		id = tec_gene_path.50050
		hide_window = yes
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				if = {
					limit = {
						has_situation_flag = tec_gene_recombination_main_trait
					}
					situation_event = {
						id = tec_gene_path.50150
					}
				}
				else_if = {
					limit = {
						has_situation_flag = tec_gene_recombination_advanced_trait
					}
					situation_event = {
						id = tec_gene_path.50250
					}
				}
				else_if = {	# Trait point increase
					limit = {
						has_situation_flag = tec_gene_recombination_normal_trait
					}
					situation_event = {
						id = tec_gene_path.50350
					}
				}
				else = {	# Fallback to trait increase
					situation_event = {
						id = tec_gene_path.50950
					}
				}
			}
		}
	}
	situation_event = { # Recombination - 50A1% - Main trait select
		id = tec_gene_path.50150
		title = "tec_gene_path.50150.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50150.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_flag = tec_gene_recombination_selected_trait
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {	# Main trait
				name = tec_gene_path.50150.recombine.main.t2
				custom_tooltip = tec_gene_path.50150.recombine.main.t2.tooltip
				icon = {
					icon = GFX_trait_tec_gene_main_t2
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_main_t2
							has_country_flag = unlocked_trait_tec_gene_main_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_main_t1
					}
				}
			}
			option = {	# Main trait
				name = tec_gene_path.50150.recombine.main.t3
				custom_tooltip = tec_gene_path.50150.recombine.main.t3.tooltip
				icon = {
					icon = GFX_trait_tec_gene_main_t3
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_main_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_main_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_main_t2
					}
				}
			}
		# /
	}
	situation_event = { # Recombination - 50A2% - Advanced trait select
		id = tec_gene_path.50250
		title = "tec_gene_path.50250.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50250.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_flag = tec_gene_recombination_selected_trait
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			# Automodding
			option = {
				name = tec_gene_path.50250.recombine.automodding.t2
				custom_tooltip = tec_gene_path.50250.recombine.automodding.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_automodding_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_automodding_t2
							has_country_flag = unlocked_trait_tec_gene_automodding_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_automodding_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.automodding.t3
				custom_tooltip = tec_gene_path.50250.recombine.automodding.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_automodding_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_automodding_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_automodding_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_automodding_t2
					}
				}
			}
			# Genius
			option = {
				name = tec_gene_path.50250.recombine.genius.t2
				custom_tooltip = tec_gene_path.50250.recombine.genius.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_genius_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_genius_t2
							has_country_flag = unlocked_trait_tec_gene_genius_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_genius_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.genius.t3
				custom_tooltip = tec_gene_path.50250.recombine.genius.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_genius_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_genius_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_genius_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_genius_t2
					}
				}
			}
			# Will
			option = {
				name = tec_gene_path.50250.recombine.will.t2
				custom_tooltip = tec_gene_path.50250.recombine.will.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_will_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_will_t2
							has_country_flag = unlocked_trait_tec_gene_will_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_will_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.will.t3
				custom_tooltip = tec_gene_path.50250.recombine.will.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_will_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_will_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_will_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_will_t2
					}
				}
			}
			# Fertile
			option = {
				name = tec_gene_path.50250.recombine.fertile.t2
				custom_tooltip = tec_gene_path.50250.recombine.fertile.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_fertile_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_fertile_t2
							has_country_flag = unlocked_trait_tec_gene_fertile_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_fertile_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.fertile.t3
				custom_tooltip = tec_gene_path.50250.recombine.fertile.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_fertile_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_fertile_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_fertile_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_fertile_t2
					}
				}
			}
			# Robust
			option = {
				name = tec_gene_path.50250.recombine.robust.t2
				custom_tooltip = tec_gene_path.50250.recombine.robust.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_robust_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_robust_t2
							has_country_flag = unlocked_trait_tec_gene_robust_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_robust_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.robust.t3
				custom_tooltip = tec_gene_path.50250.recombine.robust.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_robust_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_robust_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_robust_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_robust_t2
					}
				}
			}
			# Audacious
			option = {
				name = tec_gene_path.50250.recombine.audacious.t2
				custom_tooltip = tec_gene_path.50250.recombine.audacious.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_audacious_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_audacious_t2
							has_country_flag = unlocked_trait_tec_gene_audacious_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_audacious_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.audacious.t3
				custom_tooltip = tec_gene_path.50250.recombine.audacious.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_audacious_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_audacious_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_audacious_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_audacious_t2
					}
				}
			}
			# Lifespan
			option = {
				name = tec_gene_path.50250.recombine.lifespan.t2
				custom_tooltip = tec_gene_path.50250.recombine.lifespan.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_lifespan_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_lifespan_t2
							has_country_flag = unlocked_trait_tec_gene_lifespan_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_lifespan_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.lifespan.t3
				custom_tooltip = tec_gene_path.50250.recombine.lifespan.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_lifespan_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_lifespan_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_lifespan_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_lifespan_t2
					}
				}
			}
			# Metabolic
			option = {
				name = tec_gene_path.50250.recombine.metabolic.t2
				custom_tooltip = tec_gene_path.50250.recombine.metabolic.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_audacious_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_metabolic_t2
							has_country_flag = unlocked_trait_tec_gene_metabolic_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_metabolic_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50250.recombine.metabolic.t3
				custom_tooltip = tec_gene_path.50250.recombine.metabolic.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_audacious_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_metabolic_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_metabolic_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_metabolic_t2
					}
				}
			}
		# /
	}
	situation_event = { # Recombination - 50A3% - Normal trait select
		id = tec_gene_path.50350
		title = "tec_gene_path.50350.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50350.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_flag = tec_gene_recombination_selected_trait
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_gene_path.50350.recombine.energy.t2
				custom_tooltip = tec_gene_path.50350.recombine.energy.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_energy_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_energy_t2
							has_country_flag = unlocked_trait_tec_gene_energy_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_energy_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.energy.t3
				custom_tooltip = tec_gene_path.50350.recombine.energy.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_energy_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_energy_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_energy_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_energy_t2
					}
				}
			}
			# Mining
			option = {
				name = tec_gene_path.50350.recombine.mining.t2
				custom_tooltip = tec_gene_path.50350.recombine.mining.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_mining_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_mining_t2
							has_country_flag = unlocked_trait_tec_gene_mining_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_mining_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.mining.t3
				custom_tooltip = tec_gene_path.50350.recombine.mining.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_mining_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_mining_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_mining_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_mining_t2
					}
				}
			}
			# Farming
			option = {
				name = tec_gene_path.50350.recombine.farming.t2
				custom_tooltip = tec_gene_path.50350.recombine.farming.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_farming_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_farming_t2
							has_country_flag = unlocked_trait_tec_gene_farming_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_farming_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.farming.t3
				custom_tooltip = tec_gene_path.50350.recombine.farming.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_farming_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_farming_t2
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_farming_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_farming_t2
					}
				}
			}
			# Research
			option = {
				name = tec_gene_path.50350.recombine.research.t2
				custom_tooltip = tec_gene_path.50350.recombine.research.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_research_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_research_t2
							has_country_flag = unlocked_trait_tec_gene_research_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_research_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.research.t3
				custom_tooltip = tec_gene_path.50350.recombine.research.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_research_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_research_t2
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_research_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_research_t2
					}
				}
			}
			# Unity
			option = {
				name = tec_gene_path.50350.recombine.unity.t2
				custom_tooltip = tec_gene_path.50350.recombine.unity.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_unity_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_unity_t2
							has_country_flag = unlocked_trait_tec_gene_unity_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_unity_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.unity.t3
				custom_tooltip = tec_gene_path.50350.recombine.unity.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_unity_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_unity_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_unity_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_unity_t2
					}
				}
			}
			# Industry
			option = {
				name = tec_gene_path.50350.recombine.industry.t2
				custom_tooltip = tec_gene_path.50350.recombine.industry.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_industry_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_industry_t2
							has_country_flag = unlocked_trait_tec_gene_industry_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_industry_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.industry.t3
				custom_tooltip = tec_gene_path.50350.recombine.industry.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_industry_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_industry_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_industry_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_industry_t2
					}
				}
			}
			# Amenities
			option = {
				name = tec_gene_path.50350.recombine.amenities.t2
				custom_tooltip = tec_gene_path.50350.recombine.amenities.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_amenities_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_amenities_t2
							has_country_flag = unlocked_trait_tec_gene_amenities_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_amenities_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.amenities.t3
				custom_tooltip = tec_gene_path.50350.recombine.amenities.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_amenities_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_amenities_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_amenities_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_amenities_t2
					}
				}
			}
			# Trade
			option = {
				name = tec_gene_path.50350.recombine.trade.t2
				custom_tooltip = tec_gene_path.50350.recombine.trade.t2.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_trade_t2"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						NOR = {
							has_country_flag = unlocked_trait_tec_gene_trade_t2
							has_country_flag = unlocked_trait_tec_gene_trade_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_trade_t1
					}
				}
			}
			option = {
				name = tec_gene_path.50350.recombine.trade.t3
				custom_tooltip = tec_gene_path.50350.recombine.trade.t3.tooltip
				icon = {
					icon = "GFX_trait_tec_gene_trade_t3"
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					exists = owner
					owner = {
						has_country_flag = unlocked_trait_tec_gene_trade_t2
						NOT = {
							has_country_flag = unlocked_trait_tec_gene_trade_t3
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_improve_trait_tec_gene_trade_t2
					}
				}
			}
		# /
	}
	situation_event = { # Recombination - 50B% - WIP Trait increase puzzle 2
		id = tec_gene_path.50950
		title = "tec_gene_path.50950.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50950.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {	# Option A
				name = tec_gene_path.50950.lotto.unchanging
				custom_tooltip = tec_gene_path.50950.lotto.unchanging.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_green
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_unchanging
				}
			}
			option = {	# Option B
				name = tec_gene_path.50950.lotto.stable
				custom_tooltip = tec_gene_path.50950.lotto.stable.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_stable
				}
			}
			option = {	# Option C
				name = tec_gene_path.50950.lotto.unstable
				custom_tooltip = tec_gene_path.50950.lotto.unstable.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_unstable
				}
			}
			option = {	# Option D
				name = tec_gene_path.50950.lotto.mutative
				custom_tooltip = tec_gene_path.50950.lotto.mutative.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_red
					text = tec_icon_text_outcome_neutral
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombination_mutative
				}
			}
		# /
	}
	situation_event = { # Recombination - 100% - SORTER
		id = tec_gene_path.505
		hide_window = yes
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_variable = {
					which = tec_gene_recombination_random_base
					value = 0
				}
				set_variable = {
					which = tec_gene_recombination_random_multiplicative
					value = 0
				}
				# Rolls the lotto
				if = {
					limit = {
						
					}
					# Assigns random value to the strings
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_red
							}
							random_list = {
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 1
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 3
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 5
									}
								}
							}
						}
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_green
							}
							random_list = {
								22 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 2
									}
								}
								44 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 4
									}
								}
								55 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 6
									}
								}
							}
						}
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_blue
							}
							random_list = {
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 2
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 4
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 6
									}
								}
							}
						}
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_yellow
							}
							random_list = {
								44 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 4
									}
								}
								22 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 6
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_base
										value = 8
									}
								}
							}
						}
					# /
					# Assign random % to the stability
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_unchanging
							}
							random_list = {
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 0.25
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 0.5
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 1
									}
								}
							}
						}
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_stable
							}
							random_list = {
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 1
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 2
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 1
									}
								}
							}
						}
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_unstable
							}
							random_list = {
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 2
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 4
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 6
									}
								}
							}
						}
						if = {
							limit = {
								has_situation_flag = tec_gene_recombination_mutative
							}
							random_list = {
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 0.25
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 0.5
									}
								}
								33 = {
									set_variable = {
										which = tec_gene_recombination_random_multiplicative
										value = 4
									}
								}
							}
						}
					# /
					# Now check vars and multiply
						if = {
							limit = {
								check_variable = {
									which = tec_gene_recombination_random_base
									value > 0
								}
								check_variable = {
									which = tec_gene_recombination_random_multiplicative
									value > 0
								}
							}
							multiply_variable = {
								which = tec_gene_recombination_random_base
								value = tec_gene_recombination_random_multiplicative
							}
						}
					# /
					# Outcomes
						if = {	# Nothing happens
							limit = {
								check_variable = {
									which = tec_gene_recombination_random_base
									value < 4
								}
							}
							owner = {
								set_country_flag = tec_gene_recombination_no_outcome
							}
						}
						if = {	# Roll the dice
							limit = {
								check_variable = {
									which = tec_gene_recombination_random_base
									value >= 4
									value <= 8
								}
							}
							random_list = {
								50 = {	# Just an upgrade
									owner = {
										set_country_flag = tec_gene_recombination_temp_upgrade
									}
								}
								50 = {	# Trait point
									owner = {
										set_country_flag = tec_gene_recombination_temp_debuff
									}
								}
							}
						}
						if = {	# Roll the dice extreme
							limit = {
								check_variable = {
									which = tec_gene_recombination_random_base
									value > 8
								}
							}
							random_list = {
								50 = {	# Just an upgrade
									owner = {
										set_country_flag = tec_gene_recombination_permanent_upgrade
									}
								}
								50 = {	# Trait point
									if = {
										limit = {
											exists = owner
											owner = {
												has_modifier = modifier_tec_genetic_recombination_traits
											}
										}
										owner = {
											set_country_flag = tec_gene_recombination_trait_increase_repeated
										}
									}
									else = {
										owner = {
											set_country_flag = tec_gene_recombination_trait_increase
										}
									}
								}
							}
						}
					# /
				}
				if = {	# Trait upgrade
					limit = {
						has_situation_flag = tec_gene_recombination_upgrade
					}
					owner = {
						country_event = {
							id = tec_gene_path.50501
						}
					}
				}
				else_if = {	# Trait point increase
					limit = {
						has_situation_flag = tec_gene_recombination_lotto
					}
					owner = {
						country_event = {
							id = tec_gene_path.50502
						}
					}
				}
				else = {	# Fallback to trait increase
					owner = {
						country_event = {
							id = tec_gene_path.50502
						}
					}
				}
			}
		}
	}
	country_event = { # Recombination - 100A% - Trait Upgrade
		id = tec_gene_path.50501
		title = "tec_gene_path.50501.name"
		# Descs
			desc = {	# Fallback
				text = "tec_gene_path.50501.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes

		after = {
			hidden_effect = {
				# Remove all the residual flags
				# Main
				remove_country_flag = tec_improve_trait_tec_gene_main_t1
				remove_country_flag = tec_improve_trait_tec_gene_main_t2
				# Advanced
				remove_country_flag = tec_improve_trait_tec_gene_automodding_t1
				remove_country_flag = tec_improve_trait_tec_gene_automodding_t2
				remove_country_flag = tec_improve_trait_tec_gene_genius_t1
				remove_country_flag = tec_improve_trait_tec_gene_genius_t2
				remove_country_flag = tec_improve_trait_tec_gene_will_t1
				remove_country_flag = tec_improve_trait_tec_gene_will_t2
				remove_country_flag = tec_improve_trait_tec_gene_fertile_t1
				remove_country_flag = tec_improve_trait_tec_gene_fertile_t2
				remove_country_flag = tec_improve_trait_tec_gene_robust_t1
				remove_country_flag = tec_improve_trait_tec_gene_robust_t2
				remove_country_flag = tec_improve_trait_tec_gene_audacious_t1
				remove_country_flag = tec_improve_trait_tec_gene_audacious_t2
				remove_country_flag = tec_improve_trait_tec_gene_lifespan_t1
				remove_country_flag = tec_improve_trait_tec_gene_lifespan_t2
				remove_country_flag = tec_improve_trait_tec_gene_metabolic_t1
				remove_country_flag = tec_improve_trait_tec_gene_metabolic_t2
				# Normal
				remove_country_flag = tec_improve_trait_tec_gene_energy_t1
				remove_country_flag = tec_improve_trait_tec_gene_energy_t2
				remove_country_flag = tec_improve_trait_tec_gene_mining_t1
				remove_country_flag = tec_improve_trait_tec_gene_mining_t2
				remove_country_flag = tec_improve_trait_tec_gene_farming_t1
				remove_country_flag = tec_improve_trait_tec_gene_farming_t2
				remove_country_flag = tec_improve_trait_tec_gene_research_t1
				remove_country_flag = tec_improve_trait_tec_gene_research_t2
				remove_country_flag = tec_improve_trait_tec_gene_unity_t1
				remove_country_flag = tec_improve_trait_tec_gene_unity_t2
				remove_country_flag = tec_improve_trait_tec_gene_industry_t1
				remove_country_flag = tec_improve_trait_tec_gene_industry_t2
				remove_country_flag = tec_improve_trait_tec_gene_amenities_t1
				remove_country_flag = tec_improve_trait_tec_gene_amenities_t2
				remove_country_flag = tec_improve_trait_tec_gene_trade_t1
				remove_country_flag = tec_improve_trait_tec_gene_trade_t2
				# Lets force the leader things
				every_owned_leader = {
					add_leader_traits_after_modification = yes
					remove_leader_traits_after_modification = yes
				}
				every_pool_leader = {
					add_leader_traits_after_modification = yes
					remove_leader_traits_after_modification = yes
				}
			}
		}

		# Options
			# Main
			option = {
				name = tec_gene_path.50501.recombine.main.t2
				custom_tooltip = tec_gene_path.50501.recombine.main.t2.tooltip
				icon = {
					icon = GFX_trait_tec_gene_main_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_main_t1
						has_country_flag = tec_improve_trait_tec_gene_main_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			# Advanced
			option = {
				name = tec_gene_path.50501.recombine.automodding
				custom_tooltip = tec_gene_path.50501.recombine.automodding.tooltip
				icon = {
					icon = GFX_trait_tec_gene_automodding_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_automodding_t1
						has_country_flag = tec_improve_trait_tec_gene_automodding_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.genius
				custom_tooltip = tec_gene_path.50501.recombine.genius.tooltip
				icon = {
					icon = GFX_trait_tec_gene_genius_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_genius_t1
						has_country_flag = tec_improve_trait_tec_gene_genius_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.will
				custom_tooltip = tec_gene_path.50501.recombine.will.tooltip
				icon = {
					icon = GFX_trait_tec_gene_will_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_will_t1
						has_country_flag = tec_improve_trait_tec_gene_will_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.fertile
				custom_tooltip = tec_gene_path.50501.recombine.fertile.tooltip
				icon = {
					icon = GFX_trait_tec_gene_fertile_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_fertile_t1
						has_country_flag = tec_improve_trait_tec_gene_fertile_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.robust
				custom_tooltip = tec_gene_path.50501.recombine.robust.tooltip
				icon = {
					icon = GFX_trait_tec_gene_robust_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_robust_t1
						has_country_flag = tec_improve_trait_tec_gene_robust_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.audacious
				custom_tooltip = tec_gene_path.50501.recombine.audacious.tooltip
				icon = {
					icon = GFX_trait_tec_gene_audacious_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_audacious_t1
						has_country_flag = tec_improve_trait_tec_gene_audacious_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.lifespan
				custom_tooltip = tec_gene_path.50501.recombine.lifespan.tooltip
				icon = {
					icon = GFX_trait_tec_gene_lifespan_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_lifespan_t1
						has_country_flag = tec_improve_trait_tec_gene_lifespan_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.metabolic
				custom_tooltip = tec_gene_path.50501.recombine.metabolic.tooltip
				icon = {
					icon = GFX_trait_tec_gene_metabolic_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_metabolic_t1
						has_country_flag = tec_improve_trait_tec_gene_metabolic_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			# Normal
			option = {
				name = tec_gene_path.50501.recombine.energy
				custom_tooltip = tec_gene_path.50501.recombine.energy.tooltip
				icon = {
					icon = GFX_trait_tec_gene_energy_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_energy_t1
						has_country_flag = tec_improve_trait_tec_gene_energy_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.mining
				custom_tooltip = tec_gene_path.50501.recombine.mining.tooltip
				icon = {
					icon = GFX_trait_tec_gene_mining_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_mining_t1
						has_country_flag = tec_improve_trait_tec_gene_mining_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.farming
				custom_tooltip = tec_gene_path.50501.recombine.farming.tooltip
				icon = {
					icon = GFX_trait_tec_gene_farming_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_farming_t1
						has_country_flag = tec_improve_trait_tec_gene_farming_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.research
				custom_tooltip = tec_gene_path.50501.recombine.research.tooltip
				icon = {
					icon = GFX_trait_tec_gene_research_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_research_t1
						has_country_flag = tec_improve_trait_tec_gene_research_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.unity
				custom_tooltip = tec_gene_path.50501.recombine.unity.tooltip
				icon = {
					icon = GFX_trait_tec_gene_unity_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_unity_t1
						has_country_flag = tec_improve_trait_tec_gene_unity_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.industry
				custom_tooltip = tec_gene_path.50501.recombine.industry.tooltip
				icon = {
					icon = GFX_trait_tec_gene_industry_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_industry_t1
						has_country_flag = tec_improve_trait_tec_gene_industry_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.amenities
				custom_tooltip = tec_gene_path.50501.recombine.amenities.tooltip
				icon = {
					icon = GFX_trait_tec_gene_amenities_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_amenities_t1
						has_country_flag = tec_improve_trait_tec_gene_amenities_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.trade
				custom_tooltip = tec_gene_path.50501.recombine.trade.tooltip
				icon = {
					icon = GFX_trait_tec_gene_trade_t3
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_neutral
				}
				trigger = {
					OR = {
						has_country_flag = tec_improve_trait_tec_gene_trade_t1
						has_country_flag = tec_improve_trait_tec_gene_trade_t2
					}
				}
				hidden_effect = {
					tec_improve_genetic_trait = yes
				}
			}
		# /
	}
	country_event = { # Recombination - 100A% - Lootbox
		id = tec_gene_path.50502
		title = "tec_gene_path.50502.name"
		# Descs
			# Trait increase
			desc = {
				text = "tec_gene_path.50501.desc.trait.increase"
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase
				}
			}
			desc = {
				text = "tec_gene_path.50501.desc.trait.increase.repeated.1"
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase_repeated
				}
			}
			desc = {
				text = "tec_gene_path.50501.desc.trait.increase.repeated.2"
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase_repeated
				}
			}
			desc = {
				text = "tec_gene_path.50501.desc.trait.increase.repeated.3"
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase_repeated
				}
			}
			desc = {
				text = "tec_gene_path.50501.desc.trait.increase.repeated.4"
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase_repeated
				}
			}
			desc = {
				text = "tec_gene_path.50501.desc.trait.increase.repeated.5"
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase_repeated
				}
			}
			# Trait pick increase
			desc = {
				text = "tec_gene_path.50501.desc.pick.increase.1"
				trigger = {
					has_country_flag = tec_gene_recombination_pick_increase_repeated
				}
			}
			desc = {
				text = "tec_gene_path.50501.desc.pick.increase.2"
				trigger = {
					has_country_flag = tec_gene_recombination_pick_increase_repeated
				}
			}
			desc = {
				text = "tec_gene_path.50501.desc.pick.increase.3"
				trigger = {
					has_country_flag = tec_gene_recombination_pick_increase_repeated
				}
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes

		after = {
			hidden_effect = {
				# Remove all the residual flags
				remove_country_flag = tec_gene_recombination_no_outcome
				remove_country_flag = tec_gene_recombination_temp_upgrade
				remove_country_flag = tec_gene_recombination_temp_debuff
				remove_country_flag = tec_gene_recombination_permanent_upgrade
				remove_country_flag = tec_gene_recombination_trait_increase
				remove_country_flag = tec_gene_recombination_trait_increase_repeated
			}
		}

		# Options
			# Trait Increase
			option = {
				name = tec_gene_path.50501.recombine.trait.increase
				custom_tooltip = tec_gene_path.50501.recombine.trait.increase.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_good
				}
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase
				}
				hidden_effect = {
					if = {
						limit = {
							is_variable_set = tec_genetic_recombination_traits
						}
						change_variable = {
							which = tec_genetic_recombination_traits
							value = 1
						}
					}
					else = {
						set_variable = {
							which = tec_genetic_recombination_traits
							value = 1
						}
					}
					if = {
						limit = {
							has_modifier = modifier_tec_genetic_recombination_traits
						}
						remove_modifier = modifier_tec_genetic_recombination_traits
					}
					add_modifier = {
						modifier = modifier_tec_genetic_recombination_traits
						mult = tec_genetic_recombination_traits
					}
				}
			}
			option = {
				name = tec_gene_path.50501.recombine.trait.increase.repeatable
				custom_tooltip = tec_gene_path.50501.recombine.trait.increase.repeatable.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_tec_blank
					text = tec_icon_text_outcome_good
				}
				trigger = {
					has_country_flag = tec_gene_recombination_trait_increase_repeated
				}
				hidden_effect = {
					change_variable = {
						which = tec_genetic_recombination_traits
						value = 1
					}
					if = {
						limit = {
							has_modifier = modifier_tec_genetic_recombination_traits
						}
						remove_modifier = modifier_tec_genetic_recombination_traits
					}
					add_modifier = {
						modifier = modifier_tec_genetic_recombination_traits
						mult = tec_genetic_recombination_traits
					}
				}
			}
			# Random growth buffs

			# Random output buff

			# Random growth debuff

			# Random output debuff

			# Permanent growth buff

			# Permanent output buff

		# /
	}
	# Situation ended

	#}
  # /
 # /
# /

# Biological B Biogenic
# ------------------------------------------------------------ tec_biogenic_path.2xx +
namespace = tec_biogenic_path

 # --------------- BIOGENIC T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_biogenic_path.250

	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_biogenic_path.25001
 # /
 # --------------- BIOGENIC T2 POSTMECHANIC - MUTATIVE BIOAMALGAMATION
	#country_event = { # Situation Started - Bioamalgamation
	#	id = tec_biogenic_path.500

	#situation_event = { # Bioamalgamation - XX% - TODO ASCENSION
	#	id = tec_biogenic_path.500XX

	#situation_event = { # Bioamalgamation - XX% - TODO ASCENSION
	#	id = tec_biogenic_path.500XX

	#situation_event = { # Bioamalgamation - XX% - TODO ASCENSION
	#	id = tec_biogenic_path.500XX

	#situation_event = { # Bioamalgamation - XX% - TODO ASCENSION
	#	id = tec_biogenic_path.505

	#country_event = { # Bioamalgamation - 100A% - TODO ASCENSION
	#	id = tec_biogenic_path.50501

	#country_event = { # Bioamalgamation - 100A% - TODO
	#	id = tec_biogenic_path.50502

 # /
 # /
# /

# Cybernetic path
# ------------------------------------------------------------ tec_cybernetic_path.2xx +
namespace = tec_cybernetic_path

 # --------------- CYB T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - Requires to build a building - adds an alert
	#	id = tec_cybernetic_path.250

	#country_event = { # Tease - Building built - continues triggering the tec_cybernetic_path.500 event
	#	id = tec_cybernetic_path.25001
 # /
 # --------------- CYB T2 POSTMECHANIC - AUGMENTATION OVERCLOCK
	country_event = { # Situation Started - Augmentation Overclock
		id = tec_cybernetic_path.500
		title = "tec_cybernetic_path.500.name"
		# Descs
			# Regular
			desc = {
				text = "tec_cybernetic_path.500.desc.regular"
				trigger = {
					is_gestalt = no
					NOT = {
						has_country_flag = tec_cybernetic_augmentation_tutorial
					}
				}
			}
			desc = {
				text = "tec_cybernetic_path.500.desc.regular.repeatable"
				trigger = {
					is_gestalt = no
					has_country_flag = tec_cybernetic_augmentation_tutorial
				}
			}
			# Gestalt
			desc = {
				text = "tec_cybernetic_path.500.desc.gestalt"
				trigger = {
					is_gestalt = yes
				}
			}
			desc = {
				text = "tec_cybernetic_path.500.desc.gestalt.repeatable"
				trigger = {
					is_gestalt = yes
					NOT = {
						has_country_flag = tec_cybernetic_augmentation_tutorial
					}
				}
			}
		# /
		picture = GFX_evt_synth_situation
		show_sound = event_the_flesh_is_weak
		trackable = yes

		is_triggered_only = yes

		immediate = {
			owner_main_species = {
				save_event_target_as = tec_target_species
			}
			save_event_target_as = tec_temp_country
			event_target:tec_temp_country = {
				start_situation = {
					type = situation_tec_ascension_cybernetic_overclock
					target = event_target:tec_temp_country.capital_scope
					effect = {
						save_event_target_as = new_situation
						set_situation_locked = yes
					}
				}
			}
		}

		after = {
			hidden_effect = {
				set_country_flag = tec_cybernetic_augmentation_tutorial
			}
		}

		# Options
			option = {
				name = "tec_cybernetic_path.500.slow"
				custom_tooltip = "tec_cybernetic_path.500.slow.tooltip"
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_tec_blue
					text = set_situation_approach_icon_text
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_cybernetic_overclock_approach_slow
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_cybernetic_path.500.standard"
				custom_tooltip = "tec_cybernetic_path.500.standard.tooltip"
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_yellow
					text = set_situation_approach_icon_text
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_cybernetic_overclock_approach_standard
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_cybernetic_path.500.fast"
				custom_tooltip = "tec_cybernetic_path.500.fast.tooltip"
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_red
					text = set_situation_approach_icon_text
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_cybernetic_overclock_approach_fast
						set_situation_locked = no
					}
				}
			}
		# /
	}
	situation_event = { # Overclock - 5% - Select the focus
		id = tec_cybernetic_path.50005
		title = "tec_cybernetic_path.50005.name"
		# Descs
			desc = {	# Fallback
				text = "tec_cybernetic_path.50005.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_hive_cyberization
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {	# Standard
				name = tec_cybernetic_path.50005.upgrade.cortex
				custom_tooltip = tec_cybernetic_path.50005.upgrade.cortex.tooltip
				icon = {
					icon = GFX_situation_approach_tec_ai
					icon_background = GFX_situation_approach_bg_tec_blue
					text = situation_monthly_change_tooltip_approaches_dependent
				}
				trigger = {
					owner = {
						NOT = {
							has_country_flag = tec_cybernetic_augmentation_cortex_repeatable
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_cybernetic_augmentation_cortex
				}
			}
			option = {	# Repeatable
				name = tec_cybernetic_path.50005.upgrade.cortex.repeatable
				custom_tooltip = tec_cybernetic_path.50005.upgrade.cortex.repeatable.tooltip
				icon = {
					icon = GFX_situation_approach_tec_ai
					icon_background = GFX_situation_approach_bg_tec_blue
					text = situation_monthly_change_tooltip_approaches_dependent
				}
				trigger = {
					owner = {
						has_country_flag = tec_cybernetic_augmentation_cortex_repeatable
					}
				}
				hidden_effect = {
					set_situation_flag = tec_cybernetic_augmentation_cortex
				}
			}
			option = {	# Standard
				name = tec_cybernetic_path.50005.upgrade.material
				custom_tooltip = tec_gene_path.50010.upgrade.material.tooltip
				icon = {
					icon = GFX_situation_approach_amenities
					icon_background = GFX_situation_approach_bg_tec_blue
					text = situation_monthly_change_tooltip_approaches_dependent
				}
				trigger = {
					owner = {
						NOT = {
							has_country_flag = tec_cybernetic_augmentation_material_repeatable
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_cybernetic_augmentation_material
				}
			}
			option = {	# Repeatable
				name = tec_cybernetic_path.50005.upgrade.material.repeatable
				custom_tooltip = tec_gene_path.50010.upgrade.material.repeatable.tooltip
				icon = {
					icon = GFX_situation_approach_amenities
					icon_background = GFX_situation_approach_bg_tec_blue
					text = situation_monthly_change_tooltip_approaches_dependent
				}
				trigger = {
					owner = {
						has_country_flag = tec_cybernetic_augmentation_material_repeatable
					}
				}
				hidden_effect = {
					set_situation_flag = tec_cybernetic_augmentation_material
				}
			}
			option = {	# Cyberpsychosis - mitigate
				name = tec_cybernetic_path.50005.cyberpsychosis.mitigate
				custom_tooltip = tec_gene_path.50010.cyberpsychosis.mitigate.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_yellow
					text = situation_monthly_change_tooltip_approaches_dependent
				}
				trigger = {
					owner = {
						has_country_flag = tec_cyberpsychosis_triggered
					}
				}
				hidden_effect = {
					set_situation_flag = tec_cybernetic_augmentation_mitigate_cyberpsychosis
				}
			}
			option = {	# Cyberpsychosis - benefit
				name = tec_cybernetic_path.50005.cyberpsychosis.benefit
				custom_tooltip = tec_gene_path.50010.cyberpsychosis.benefit.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_red
					text = situation_monthly_change_tooltip_approaches_dependent
				}
				trigger = {
					owner = {
						has_country_flag = tec_cyberpsychosis_triggered
					}
				}
				hidden_effect = {
					set_situation_flag = tec_cybernetic_augmentation_benefit_cyberpsychosis
				}
			}
		# /
	}
	situation_event = { # Overclock - 20% - SORTER
		id = tec_cybernetic_path.50020
		hide_window = yes
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				if = {	# Module Upgrade - Cor/OS
					limit = {
						has_situation_flag = tec_cybernetic_augmentation_cortex
					}
					situation_event = {
						id = tec_cybernetic_path.50120
					}
				}
				else_if = {	# Module Upgrade - Int/ex
					limit = {
						has_situation_flag = tec_cybernetic_augmentation_material
					}
					situation_event = {
						id = tec_cybernetic_path.50220
					}
				}
				#else_if = {	# Cyberpsycho mitigation	TODO ASCENSION
				#	limit = {
				#		has_situation_flag = tec_cybernetic_augmentation_mitigate_cyberpsychosis
				#	}
				#	situation_event = {
				#		id = tec_cybernetic_path.50320
				#	}
				#}
				#else_if = {	# Cyberpsycho Benefit	TODO ASCENSION
				#	limit = {
				#		has_situation_flag = tec_cybernetic_augmentation_benefit_cyberpsychosis
				#	}
				#	situation_event = {
				#		id = tec_cybernetic_path.50420
				#	}
				#}
				else = {	# Fallback to cor/os
					situation_event = {
						id = tec_cybernetic_path.50120
					}
				}
			}
		}
	}
	#situation_event = { # Overclock - 20A% - Buff cortex/OS
	#	id = tec_cybernetic_path.50120

	#situation_event = { # Overclock - 20B% - Buff int/ex
	#	id = tec_cybernetic_path.50220

	#situation_event = { # Overclock - 20C% - Cure cyberpsychosis
	#	id = tec_cybernetic_path.50220

	#situation_event = { # Overclock - 20C% - Benefit of cyberpsychosis
	#	id = tec_cybernetic_path.50320

	#situation_event = { # Overclock - 75% - Select the way of buffing it
	#	id = tec_cybernetic_path.50075

	#situation_event = { # Overclock - 100% - SORTER
	#	id = tec_cybernetic_path.505

	#country_event = { # Overclock - 100A% - Cortex/Cyberdeck Upgrade
	#	id = tec_cybernetic_path.50501

	#country_event = { # Overclock - 100B% - Inter/External Upgrade
	#	id = tec_cybernetic_path.50502

	#country_event = { # Overclock - 100C% - Cyberpsychosis mitigation
	#	id = tec_cybernetic_path.50503

	#country_event = { # Overclock - 100C% - Cyberpsychosis benefit
	#	id = tec_cybernetic_path.50504
 # /
# /

# Bioware Path
# ------------------------------------------------------------ tec_bioware_path.2xx +
namespace = tec_bioware_path

 # --------------- BIOWARE T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_bioware_path.250

	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_bioware_path.25001
 # /
 # --------------- BIOWARE T2 POSTMECHANIC - TECHNOORGANIC SYNCHRONIZATION
	#country_event = { # Situation Started - Technoorganic Synchronization
	#	id = tec_bioware_path.500

	#situation_event = { # Synchronization - XX% - TODO ASCENSION
	#	id = tec_bioware_path.500XX

	#situation_event = { # Synchronization - XX% - TODO ASCENSION
	#	id = tec_bioware_path.500XX

	#situation_event = { # Synchronization - XX% - TODO ASCENSION
	#	id = tec_bioware_path.500XX

	#situation_event = { # Synchronization - XX% - TODO ASCENSION
	#	id = tec_bioware_path.505

	#country_event = { # Synchronization - 100A% - TODO ASCENSION
	#	id = tec_bioware_path.50501

	#country_event = { # Synchronization - 100B% - TODO ASCENSION
	#	id = tec_bioware_path.50502

	#country_event = { # Synchronization - 100C% - TODO ASCENSION
	#	id = tec_bioware_path.50503
 # /
# /

# Synth path
# ------------------------------------------------------------ tec_synth_path.2xx +
namespace = tec_synth_path

# /

# Digital path
# ------------------------------------------------------------ tec_digital_path.2xx +
namespace = tec_digital_path

 # --------------- DIGITAL T2 POSTMECHANIC

 # /
# /

# Psionic path A
# ------------------------------------------------------------ tec_psionic_path.2xx +
namespace = tec_psionic_path

 # Mechanic is shroud premium
 # --------------- PSIONIC T2 POSTMECHANIC
  # ---------- Ascension mechanic
	# Ascension controller
	planet_event = {
		id = tec_psionic_path.20001
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			always = yes
		}
		
		immediate = {
			if = {
				limit = {
					NOT = { has_deposit = d_tec_psionic_ascension_zone_1 }
				}
				add_deposit = d_tec_psionic_ascension_zone_1
			}
			if = {
				limit = {
					exists = owner
					owner = {
						NOT = {
							has_country_flag = tec_done_first_ascension
						}
					}
				}
				planet_event = {
					id = tec_psionic_path.20003
				}
				owner = {
					set_country_flag = tec_done_first_ascension
					change_variable = {
						which = tec_psionic_ascension_number
						value = 1
					}
				}
			}
			else = {
				planet_event = {
					id = tec_psionic_path.20004
				}
				owner = {
					change_variable = {
						which = tec_psionic_ascension_number
						value = 1
					}
				}
			}
		}
	}

	# Ascension anticheese - If someone attempts to remove all the psionic pops to avoid losing pops...
	planet_event = {
		id = tec_psionic_path.20002
		title = "tec_psionic_path.20002.name"
		desc = "tec_psionic_path.20002.desc"
		picture = GFX_evt_zro_5
		show_sound = event_screams

		is_triggered_only = yes

		trigger = {
			any_owned_species = {
				tec_is_any_psionic_species = no
			}
		}

		immediate = {
			while = {
				count = value:tec_psionic_planet_ascension_pop_ascend
				random_owned_pop = {
					limit = {
						is_sapient = yes
					}
					kill_pop = yes
				}
				add_deposit = d_tec_psionic_wasteland
				add_planet_devastation = 10
			}
		}

		
		option = {
			name = "tec_psionic_path.20002.a"
		}
	}

	# The first ascension...well actually the second but you know
	planet_event = {
		id = tec_psionic_path.20003
		title = "tec_psionic_path.20003.name"
		desc = "tec_psionic_path.20003.desc"
		picture = GFX_evt_zro_4
		show_sound = event_mystic_reveal_light

		is_triggered_only = yes

		trigger = {
			any_owned_species = {
				tec_is_any_psionic_species = yes
			}
		}

		immediate = {
			tec_planet_psionically_ascend_pops_effect = yes
		}
		
		option = {
			name = "tec_psionic_path.20003.a"
		}
	}

	# Ascension continuations
	planet_event = {
		id = tec_psionic_path.20004
		title = "tec_psionic_path.20004.name"
		desc = "tec_psionic_path.20004.desc"
		picture = GFX_evt_zro_4
		show_sound = event_mystic_reveal_light

		is_triggered_only = yes

		trigger = {
			any_owned_species = {
				tec_is_any_psionic_species = yes
			}
		}

		immediate = {
			tec_planet_psionically_ascend_pops_effect = yes
		}
		
		option = {
			name = "tec_psionic_path.20004.a"
		}
	}
  # /

  # ---------- Psionic trait handler - also used by mixed paths
	country_event = { # Leader level trait handler
		id = tec_psionic_path.600
		hide_window = yes
		is_triggered_only = yes
		trigger = {
			check_variable = {
				which = tec_unlocked_psionic_leader_traits
				value > 0
			}
			exists = from
			from = {
				tec_is_psionic_leader = yes
				has_skill >= 5
				# Without this, leaders can level multiple times due to the effects xD
				NOT = {
					has_leader_flag = tec_psionic_leader_trait_cd
				}
			}
		}
		immediate = {
			from = {
				set_timed_leader_flag = {
					flag = tec_psionic_leader_trait_cd
					days = 1
				}
			}
			# Psionic level 2+ - leader at level 9
			if = {
				limit = {
					check_variable = {
						which = tec_unlocked_psionic_leader_traits
						value >= 3
					}
					from = {
						has_skill >= 9
						check_variable = {
							which = tec_psionic_leader_traits
							value < 3
						}
					}
				}
				tec_force_psionic_trait_selection = {
					SCOPE = from
				}
			}
			# Psionic level 2 - leader at level 7
			else_if = {
				limit = {
					check_variable = {
						which = tec_unlocked_psionic_leader_traits
						value >= 2
					}
					from = {
						has_skill >= 6
						check_variable = {
							which = tec_psionic_leader_traits
							value < 2
						}
					}
				}
				tec_force_psionic_trait_selection = {
					SCOPE = from
				}
			}
			# Psionic level 1 - leader at level 5
			else_if = {
				limit = {
					check_variable = {
						which = tec_unlocked_psionic_leader_traits
						value >= 1
					}
					from = {
						has_skill >= 5
						check_variable = {
							which = tec_psionic_leader_traits
							value < 1
						}
					}
				}
				tec_force_psionic_trait_selection = {
					SCOPE = from
				}
			}
		}
	}
  # /

  # OLD ---------- Psionic traits - also used by mixed paths
	# Shroud affinity controller on year pulse
	country_event = {
		id = tec_psionic_path.500
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			has_country_flag = tec_announced_psionic_traits
			NOT = {
				has_country_flag = tec_recently_received_psionic_trait
			}
			NAND = {
				has_country_flag = tec_unlocked_psionic_body
				has_country_flag = tec_unlocked_psionic_mind
				has_country_flag = tec_unlocked_psionic_energy
				has_country_flag = tec_unlocked_psionic_unity
				has_country_flag = tec_unlocked_psionic_telekinesis
				has_country_flag = tec_unlocked_psionic_teleport
			}
			if = {	# Biopsi and cyberpsi can only get 2
				limit = {
					NOT = {
						has_ascension_perk = ap_tec_psionic_ascendance
					}
				}
				OR = {
					NOT = {
						is_variable_set = tec_obtained_psionic_traits
					}
					check_variable = {
						which = tec_obtained_psionic_traits
						value < 3
					}
				}
			}
		}

		immediate = {
			# reset variables
			set_variable = {
				which = tec_psi_tr_chance_shroud
				value = 1
			}
			set_variable = {
				which = tec_psi_tr_chance_ascension
				value = 2
			}
			set_variable = {	# having a patron reduces the change of getting a psionic trait naturally
				which = tec_psi_tr_chance_patron
				value = 0.5
			}
			
			# checks times accessed the shroud
			if = {
				limit = {
					is_variable_set = tec_regular_shroud_incursions
				}
				multiply_variable = {	# Shroud explored 5 times = 5 points
					which = tec_psi_tr_chance_shroud
					value = tec_regular_shroud_incursions
				}
			}
			# checks times ascended
			if = {
				limit = {
					is_variable_set = tec_psionic_ascension_number
				}
				multiply_variable = { # Ascended 5 times = 10 points
					which = tec_psi_tr_chance_shroud
					value = tec_psionic_ascension_number
				}
			}

			# Checks number of traits
			if = {
				limit = {
					is_variable_set = tec_obtained_psionic_traits
				}
				set_variable = {
					which = tec_temp_psionic_trait_handler
					value = tec_obtained_psionic_traits
				}
				multiply_variable = {	# 1 trait = 50%, 2 traits = 33% chance, 3 traits = 22% chance etc
					which = tec_temp_psionic_trait_handler
					value = 1.5
				}

				divide_variable = {
					which = tec_psi_tr_chance_shroud
					value = tec_temp_psionic_trait_handler
				}
			}

			# The result is the chance to get a trait after each year
			if = {
				limit = { # 10%
					check_variable = {
						which = tec_psi_tr_chance_shroud
						value < 11
					}
				}
				random = {
					chance = 3
					set_country_flag = tec_get_psionic_trait
				}
			}
			else_if = {	# 20%
				limit = {
					check_variable = {
						which = tec_psi_tr_chance_shroud
						value > 10
					}
					check_variable = {
						which = tec_psi_tr_chance_shroud
						value < 21
					}
				}
				random = {
					chance = 6
					set_country_flag = tec_get_psionic_trait
				}
			}
			else_if = { # 30%
				limit = {
					check_variable = {
						which = tec_psi_tr_chance_shroud
						value > 20
					}
					check_variable = {
						which = tec_psi_tr_chance_shroud
						value < 31
					}
				}
				random = {
					chance = 9
					set_country_flag = tec_get_psionic_trait
				}
			}
			else_if = { # 30%
				limit = {
					check_variable = {
						which = tec_psi_tr_chance_shroud
						value > 30
					}
				}
				random = {
					chance = 12
					set_country_flag = tec_get_psionic_trait
				}
			}
			# If has the flag...
			if = {
				limit = {
					has_country_flag = tec_get_psionic_trait
					
				}
				if = {	# first trait
					limit = {
						NOR = {
							has_country_flag = tec_unlocked_psionic_body
							has_country_flag = tec_unlocked_psionic_mind
							has_country_flag = tec_unlocked_psionic_energy
							has_country_flag = tec_unlocked_psionic_unity
							has_country_flag = tec_unlocked_psionic_telekinesis
							has_country_flag = tec_unlocked_psionic_teleport
						}
					}
					random_list = {
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_body
							}
							country_event = {
								id = tec_psionic_path.50001
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_mind
							}
							country_event = {
								id = tec_psionic_path.50002
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_energy
							}
							country_event = {
								id = tec_psionic_path.50003
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_unity
							}
							country_event = {
								id = tec_psionic_path.50004
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_telekinesis
							}
							country_event = {
								id = tec_psionic_path.50005
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_teleport
							}
							country_event = {
								id = tec_psionic_path.50006
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
					}
				}
				else_if = {	# sorter
					limit = {
						OR = {
							has_country_flag = tec_unlocked_psionic_body
							has_country_flag = tec_unlocked_psionic_mind
							has_country_flag = tec_unlocked_psionic_energy
							has_country_flag = tec_unlocked_psionic_unity
							has_country_flag = tec_unlocked_psionic_telekinesis
							has_country_flag = tec_unlocked_psionic_teleport
						}
					}
					random_list = {
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_body
							}
							country_event = {
								id = tec_psionic_path.50001
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_mind
							}
							country_event = {
								id = tec_psionic_path.50002
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_energy
							}
							country_event = {
								id = tec_psionic_path.50003
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_unity
							}
							country_event = {
								id = tec_psionic_path.50004
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_telekinesis
							}
							country_event = {
								id = tec_psionic_path.50005
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
						20 = {
							modifier = {
								weight = 0
								has_country_flag = tec_unlocked_psionic_teleport
							}
							country_event = {
								id = tec_psionic_path.50005
								days = 1
								random = 30
							}
							change_variable = {
								which = tec_obtained_psionic_traits
								value = 1
							}
						}
					}
				}
				set_timed_country_flag = {
					flag = tec_recently_received_psionic_trait
					years = 10
				}
			}
			else = {
				break = yes
			}

		}

		after = {
			clear_variable = tec_psi_tr_chance_shroud
			clear_variable = tec_psi_tr_chance_ascension
			clear_variable = tec_psi_tr_chance_patron
		}
		
	}

	country_event = { # Psionic body
		id = tec_psionic_path.50001
		title = "tec_psionic_path.50001.name"
		desc = "tec_psionic_path.50001.desc"
		picture = GFX_evt_surreal_visions
		show_sound = event_psionic

		is_triggered_only = yes

		trigger = {
			NOT = {
				has_country_flag = tec_unlocked_psionic_body
			}
		}
		option = {
			name = "tec_psionic_path.50001.a"
			custom_tooltip = tec_psionic_path.50001.a.desc
			hidden_effect = {
				set_country_flag = tec_unlocked_psionic_body
			}
		}
	}

	country_event = { # Psionic mind
		id = tec_psionic_path.50002
		title = "tec_psionic_path.50002.name"
		desc = "tec_psionic_path.50002.desc"
		picture = GFX_evt_surreal_visions
		show_sound = event_psionic

		is_triggered_only = yes

		trigger = {
			NOT = {
				has_country_flag = tec_unlocked_psionic_mind
			}
		}
		option = {
			name = "tec_psionic_path.50002.a"
			custom_tooltip = tec_psionic_path.50002.a.desc
			hidden_effect = {
				set_country_flag = tec_unlocked_psionic_mind
			}
		}

	}

	country_event = { # Psionic Energy
		id = tec_psionic_path.50003
		title = "tec_psionic_path.50003.name"
		desc = "tec_psionic_path.50003.desc"
		picture = GFX_evt_surreal_visions
		show_sound = event_psionic

		is_triggered_only = yes

		trigger = {
			NOT = {
				has_country_flag = tec_unlocked_psionic_energy
			}
		}
		option = {
			name = "tec_psionic_path.50003.a"
			custom_tooltip = tec_psionic_path.50003.a.desc
			hidden_effect = {
				set_country_flag = tec_unlocked_psionic_energy
			}
		}
	}

	country_event = { # Psionic unity
		id = tec_psionic_path.50004
		title = "tec_psionic_path.50004.name"
		desc = "tec_psionic_path.50004.desc"
		picture = GFX_evt_surreal_visions
		show_sound = event_psionic

		is_triggered_only = yes

		trigger = {
			NOT = {
				has_country_flag = tec_unlocked_psionic_unity
			}
		}
		option = {
			name = "tec_psionic_path.50004.a"
			custom_tooltip = tec_psionic_path.50004.a.desc
			hidden_effect = {
				set_country_flag = tec_unlocked_psionic_unity
			}
		}
	}

	country_event = { # Psionic telekinesis
		id = tec_psionic_path.50005
		title = "tec_psionic_path.50005.name"
		desc = "tec_psionic_path.50005.desc"
		picture = GFX_evt_surreal_visions
		show_sound = event_psionic

		is_triggered_only = yes

		trigger = {
			NOT = {
				has_country_flag = tec_unlocked_psionic_telekinesis
			}
		}
		option = {
			name = "tec_psionic_path.50005.a"
			custom_tooltip = tec_psionic_path.50005.a.desc
			hidden_effect = {
				set_country_flag = tec_unlocked_psionic_telekinesis
			}
		}
	}

	country_event = { # Psionic teleport
		id = tec_psionic_path.50006
		title = "tec_psionic_path.50006.name"
		desc = "tec_psionic_path.50006.desc"
		picture = GFX_evt_surreal_visions
		show_sound = event_psionic

		is_triggered_only = yes

		trigger = {
			NOT = {
				has_country_flag = tec_unlocked_psionic_teleport
			}
		}
		option = {
			name = "tec_psionic_path.50006.a"
			custom_tooltip = tec_psionic_path.50006.a.desc
			hidden_effect = {
				set_country_flag = tec_unlocked_psionic_teleport
			}
		}
	}
  # /
 # /
# /

# Psychic
# ------------------------------------------------------------ tec_psychic_path.2xx +
namespace = tec_psychic_path

 # --------------- PSYCHIC T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_bioware_path.250

	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_bioware_path.25001
 # /
 # --------------- PSYCHIC T2 POSTMECHANIC - PSYCHOGENIC MANIFESTATION
	#country_event = { # Situation Started - Psychogenic Manifestation
	#	id = tec_bioware_path.500

	#situation_event = { # Manifestation - XX% - TODO ASCENSION
	#	id = tec_bioware_path.500XX

	#situation_event = { # Manifestation - XX% - TODO ASCENSION
	#	id = tec_bioware_path.500XX

	#situation_event = { # Manifestation - XX% - TODO ASCENSION
	#	id = tec_bioware_path.500XX

	#situation_event = { # Manifestation - XX% - TODO ASCENSION
	#	id = tec_bioware_path.505

	#country_event = { # Manifestation - 100A% - TODO ASCENSION
	#	id = tec_bioware_path.50501

	#country_event = { # Manifestation - 100B% - TODO ASCENSION
	#	id = tec_bioware_path.50502

	#country_event = { # Manifestation - 100C% - TODO ASCENSION
	#	id = tec_bioware_path.50503
 # /
# /

# --------------------------------- MIXED ASCENSIONS ---------------------------------
# Bio-Cyb: Replicant
# ------------------------------------------------------------ tec_replicant_path.xxx
namespace = tec_replicant_path

 # --------------- REPLICANT T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_replicant_path.250

	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_replicant_path.25001
 # /
 # --------------- REPLICANT T2 POSTMECHANIC - BIOMECHANICAL REMODELING
	#country_event = { # Situation Started - Biomechanical Remodeling
	#	id = tec_replicant_path.500

	#situation_event = { # Remodel - XX% - Select the focus
	#	id = tec_replicant_path.500XX

	#situation_event = { # Remodel - XX% - TODO ASCENSION
	#	id = tec_replicant_path.500XX

	#situation_event = { # Remodel - XX% - TODO ASCENSION
	#	id = tec_replicant_path.500XX

	#situation_event = { # Remodel - 100% - SORTER
	#	id = tec_replicant_path.505

	#country_event = { # Remodel - 100A% - TODO ASCENSION
	#	id = tec_replicant_path.50501

	#country_event = { # Remodel - 100B% - TODO ASCENSION
	#	id = tec_replicant_path.50502

	#country_event = { # Remodel - 100C% - TODO ASCENSION
	#	id = tec_replicant_path.50503
 # /
# /

# Cyb-Psi: Cyberpsionic
# ------------------------------------------------------------ tec_cyberpsionic_path.xxx
namespace = tec_cyberpsionic_path

 # --------------- CYBERPSIONIC T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_cyberpsionic_path.250

	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_cyberpsionic_path.25001
 # /
 # --------------- CYBERPSIONIC T2 POSTMECHANIC - ENTROPIC INFUSION
	#country_event = { # Situation Started - Entropic Infusion
	#	id = tec_cyberpsionic_path.500

	#situation_event = { # Infusion - XX% - Select the focus
	#	id = tec_cyberpsionic_path.500XX

	#situation_event = { # Infusion - XX% - TODO ASCENSION
	#	id = tec_cyberpsionic_path.500XX

	#situation_event = { # Infusion - XX% - TODO ASCENSION
	#	id = tec_cyberpsionic_path.500XX

	#situation_event = { # Infusion - 100% - SORTER
	#	id = tec_cyberpsionic_path.505

	#country_event = { # Infusion - 100A% - TODO ASCENSION
	#	id = tec_cyberpsionic_path.50501

	#country_event = { # Infusion - 100B% - TODO ASCENSION
	#	id = tec_cyberpsionic_path.50502

	#country_event = { # Infusion - 100C% - TODO ASCENSION
	#	id = tec_cyberpsionic_path.50503
 # /
 # Review
	# ==============================================
	# ==============================================
	# ==============================================
	# Old events - reformulate ---------------------
	# Picks one of the three main upgrades
	country_event = {
		id = tec_cyberpsionic_path.306
		title = "tec_cyberpsionic_path.306.name"
		desc = "tec_cyberpsionic_path.306.desc"
		picture = GFX_evt_cybernetics
		show_sound = event_the_great_awakening

		is_triggered_only = yes

		option = {
			name = "tec_cyberpsionic_path.306.a"
			custom_tooltip = tec_cyberpsionic_path.306.a.tooltip
			
		}
	}

	# Starts the first trait thing



	# EXTRACTORS - reformulate ---------------------
	# Danger notification when the empire extract too much
	country_event = {
		id = tec_cyberpsionic_path.31050
		title = "tec_cyberpsionic_path.31050.name"
		desc = "tec_cyberpsionic_path.31050.desc"

		picture = GFX_evt_surreal_visions
		show_sound = event_red_alert

		is_triggered_only = yes

		option = {
			name = "tec_cyberpsionic_path.31050.a"
		}
	}
	# First shroud incursion
	country_event = {
		id = tec_cyberpsionic_path.31051
		title = "tec_cyberpsionic_path.31051.name"
		desc = "tec_cyberpsionic_path.31051.desc"
		location = event_target:tec_incursion_target_planet

		picture = GFX_evt_vortex
		show_sound = event_red_alert

		is_triggered_only = yes

		immediate = {
			random_owned_planet = {
				limit = {
					has_planet_flag = tec_incursion_target_planet
				}
				save_event_target_as = tec_incursion_target_planet
				solar_system = {
					save_event_target_as = tec_shroud_incursion_system
				}
			}
		}
		option = {
			name = "tec_cyberpsionic_path.31051.a"
		}
	}
	# Post-first shroud incursions
	# tec_cyberpsionic_path.20055

	# SHroud incursion handler
	country_event = {
		id = tec_cyberpsionic_path.31055
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			always = no
			has_country_flag = tec_cyberpsionic_buildings
			any_owned_planet = {
				OR = {
					has_building = building_tec_cyberpsionic_extractor_2
					has_building = building_tec_cyberpsionic_extractor_3
				}
			}
			check_variable = {
				which = tec_dimensional_extraction_buildings_ref
				value > 5
			}
		}

		immediate = {
			random_list = {
				10 = {
					modifier = {
						factor = 2
						check_variable = {
							which = tec_dimensional_extraction_buildings_ref
							value >= 6
						}
					}
					modifier = {
						factor = 2
						check_variable = {
							which = tec_dimensional_extraction_buildings_ref
							value >= 9
						}
					}
					modifier = {
						factor = 2
						check_variable = {
							which = tec_dimensional_extraction_buildings_ref
							value >= 12
						}
					}
					modifier = {
						factor = 2
						check_variable = {
							which = tec_dimensional_extraction_buildings_ref
							value >= 15
						}
					}
					set_timed_country_flag = {
						flag = tec_dimensional_incursion_on
						days = 180
					}
					random_owned_planet = {
						limit = {
							OR = {
								has_building = building_tec_cyberpsionic_extractor_2
								has_building = building_tec_cyberpsionic_extractor_3
							}
						}
						set_timed_planet_flag = {
							flag = tec_incursion_target_planet
							days = 180
						}
					}
					country_event = {
						id = tec_cyberpsionic_path.31056
						days = 1
						random = 120
					}
				}
				90 = {
					#nothing :>
					break = yes
				}
			}
			
		}
	}

	# Spawns the entity
	country_event = {
		id = tec_cyberpsionic_path.31056
		hide_window = yes

		is_triggered_only = yes

		trigger = {
			any_owned_planet = {
				has_planet_flag = tec_incursion_target_planet
			}
		}

		immediate = {
			random_owned_planet = {
				limit = {
					has_planet_flag = tec_incursion_target_planet
				}
				save_event_target_as = tec_incursion_target_planet
				solar_system = {
					save_event_target_as = tec_shroud_incursion_system
				}
			}
			if = {
				limit = {
					NOT = {
						has_country_flag = tec_first_aggro_incursion_done
					}
				}
				set_country_flag = tec_first_aggro_incursion_done
				country_event = {
					id = tec_cyberpsionic_path.31051
				}
			}
			else = {
				create_message = {
					type = MESSAGE_TEC_CYBERPSIONIC_INCURSION
					localization = MESSAGE_TEC_CYBERPSIONIC_INCURSION
					days = 30
					target = event_target:tec_shroud_incursion_system
					variable = {
						type = name
						localization = PLANET
						scope = event_target:tec_shroud_incursion_system
					}
				}
			}
			event_target:tec_shroud_incursion_system = {
				if = {
					limit = { NOT = { exists = event_target:shroud_country } }
					create_country = {
						name = "NAME_Creatures_of_the_Shroud"
						type = shroud_spirits
						flag = {
							icon = {
								category = "special"
								file = "the_shroud.dds"
							}
							background= {
								category = "backgrounds"
								file = "00_solid.dds"
							}
							colors = {
								"dark_purple"
								"black"
								"null"
								"null"
							}
						}
					}
					last_created_country = {
						save_global_event_target_as = shroud_country
					}
				}
				create_fleet = {
					name = "NAME_Psionic_Entity"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_owner = event_target:shroud_country
						set_fleet_flag = tec_dimensional_incursor
						create_ship = {
							name = "Dimensional Invader"
							#"NAME_Psionic_Entity"
							design = "NAME_Corrupted_Avatar"
						}
						last_created_ship = {
							if = {
								limit = {
									root = {
										max_naval_capacity > 1000
										used_naval_capacity_percent > 0.5
									}
								}
								add_modifier = {
									modifier = tec_dimensional_rage_10
								}
							}
							else_if = {
								limit = {
									root = {
										max_naval_capacity > 500
										used_naval_capacity_percent > 0.5
									}
								}
								add_modifier = {
									modifier = tec_dimensional_rage_5
								}
							}
							else_if = {
								limit = {
									root = {
										max_naval_capacity > 400
										used_naval_capacity_percent > 0.5
									}
								}
								add_modifier = {
									modifier = tec_dimensional_rage_4
								}
							}
							else_if = {
								limit = {
									root = {
										max_naval_capacity > 300
										used_naval_capacity_percent > 0.5
									}
								}
								add_modifier = {
									modifier = tec_dimensional_rage_3
								}
							}
							else_if = {
								limit = {
									root = {
										max_naval_capacity > 200
										used_naval_capacity_percent > 0.5
									}
								}
								add_modifier = {
									modifier = tec_dimensional_rage_2
								}
							}
							else_if = {
								limit = {
									root = {
										max_naval_capacity > 100
										used_naval_capacity_percent > 0.5
									}
								}
								add_modifier = {
									modifier = tec_dimensional_rage_1
								}
							}
						}
						set_location = {
							target = prev.star
							distance = 100
							angle = random
						}
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = return_point
						set_aggro_range = 2000
					}
				}
				star = {
					create_ambient_object = {
						type = "psi_storm_1"
						location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = psi_storm_object
						set_location = {
							target = prev
							distance = 0
							angle = random
						}
					}
				}
			}
			root = {
				establish_communications_no_message = event_target:shroud_country
			}
		}
	}

	# Remove Shroud System Effect
	country_event = {
		id = tec_cyberpsionic_path.31057
		hide_window = yes

		is_triggered_only = yes

		trigger = {
			is_same_value = event_target:shroud_country
			fromfrom = { has_fleet_flag = tec_dimensional_incursor }
		}

		immediate = {
			fromfrom = {
				solar_system = {
					random_system_ambient_object = {
						limit = { has_ambient_object_flag = psi_storm_object }
						destroy_ambient_object = this
					}
				}
			}
		}
	}
	# EXTRACTORS - reformulate ---------------------
	# ==============================================
	# ==============================================
	# ==============================================
 # /
# /

# Bio-Psi: Purity of form
# ------------------------------------------------------------ tec_biopsionic_path.xxx
namespace = tec_biopsionic_path

 # --------------- BIOPSIONIC T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - Indicate zro/building requirements
	#	id = tec_biopsionic_path.250

	#country_event = { # Tease - Investigated Zro
	#	id = tec_biopsionic_path.25001

	#country_event = { # Tease - Built the first convergence building
	#	id = tec_biopsionic_path.25002
 # /
  # ---------------  BIOPSI T2 POSTMECHANIC - CONVERGENCE
	# TODO ASCENSION - RENAME ID
	country_event = { # Pops get merged
		id = tec_biopsionic_path.350
		title = "tec_biopsionic_path.350.name"
		desc = {
			trigger = {
				check_variable = {
					which = tec_total_converged_pops
					value = 0
				}
			}
			text = "tec_biopsionic_path.350.firsttime.desc"
		}
		desc = {
			trigger = {
				check_variable = {
					which = tec_total_converged_pops
					value > 0
				}
			}
			text = "tec_biopsionic_path.350.desc"
		}
		picture = GFX_evt_shroudwalker_enclave
		show_sound = event_the_great_awakening
		location = event_target:tec_recently_ascended_planet

		is_triggered_only = yes

		immediate = {
			hidden_effect = {
				every_owned_planet = {
					limit = {
						has_building = building_tec_biopsionic_convergence
						any_owned_species = {
							OR = {
								tec_is_any_psionic_species = yes
								has_trait = trait_tec_biopsionic_seed
							}
							count_species_pop = {
								limit = {
									NOR = {
										has_trait = trait_tec_biopsionic_seed
										has_modifier = tec_converged_pop
									}
								}
								count > 1
							}
						}
						# building comes here
					}
					# Sort by numbers
						if = {
							limit = {
								num_pops >=100
							}
							set_variable = {
								which = tec_biopsi
								value = 10
							}
						}
						else_if = {
							limit = {
								num_pops >=90
								num_pops < 100
							}
							set_variable = {
								which = tec_biopsi
								value = 9
							}
						}
						else_if = {
							limit = {
								num_pops >=80
								num_pops < 90
							}
							set_variable = {
								which = tec_biopsi
								value = 8
							}
						}
						else_if = {
							limit = {
								num_pops >=70
								num_pops < 80
							}
							set_variable = {
								which = tec_biopsi
								value = 7
							}
						}
						else_if = {
							limit = {
								num_pops >=60
								num_pops < 70
							}
							set_variable = {
								which = tec_biopsi
								value = 6
							}
						}
						else_if = {
							limit = {
								num_pops >=50
								num_pops < 60
							}
							set_variable = {
								which = tec_biopsi
								value = 5
							}
						}
						else_if = {
							limit = {
								num_pops >=40
								num_pops < 50
							}
							set_variable = {
								which = tec_biopsi
								value = 4
							}
						}
						else_if = {
							limit = {
								num_pops >=30
								num_pops < 40
							}
							set_variable = {
								which = tec_biopsi
								value = 3
							}
						}
						else_if = {
							limit = {
								num_pops >=20
								num_pops < 30
							}
							set_variable = {
								which = tec_biopsi
								value = 2
							}
						}
						else_if = {
							limit = {
								num_pops < 20
							}
							set_variable = {
								which = tec_biopsi
								value = 1
							}
						}
					# /
					while = {
						count = tec_biopsi
						if = { # Prio seeded pops
							limit = {
								any_owned_species = {
									has_trait = trait_tec_biopsionic_seed
								}
							}
							random_owned_pop = {
								limit = {
									has_trait = trait_tec_biopsionic_seed
									NOT = {
										has_modifier = tec_converged_pop
									}
								}
								kill_pop = yes
							}
						}
						else = {
							random_owned_pop = {
								limit = {
									tec_is_any_psionic_species = yes
									NOT = {
										has_modifier = tec_converged_pop
									}
								}
								kill_pop = yes
							}
						}
						random_owned_pop = {
							limit = {
								tec_is_any_psionic_species = yes
								NOT = {
									has_trait = trait_tec_biopsionic_seed
								}
								NOT = {
									has_modifier = tec_converged_pop
								}
							}
							add_modifier = {
								modifier = tec_converged_pop
								days = -1
							}
							root = {
								change_variable = {
									which = tec_total_converged_pops
									value = 1
								}
							}
							root = {
								change_variable = {
									which = tec_temp_converged_pops
									value = 1
								}
							}
						}
						change_variable = {
							which = tec_conv_planet
							value = 0.2
						}
					}
				}
				create_message = {
					type = MESSAGE_TEC_CONVERGENCE_MERGED_POPS
					localization = MESSAGE_TEC_CONVERGENCE_MERGED_POPS
					days = 30
					target = root
					variable = {
						type = variable
						varname = tec_temp_converged_pops
						localization = VALUE
						scope = root
					}
				}
				if = {
					limit = {
						check_variable = {
							which = tec_temp_converged_pops
							value > 0
						}
					}
					change_variable = {
						which = tec_biopsionic_convergence_count
						value = 1
					}
				}
			}
		}
		option = {
			name = "tec_biopsionic_path.350.a"
			custom_tooltip = "tec_biopsionic_path.350.a.tooltip"
		}

		after = {
			hidden_effect = {
				clear_variable = tec_temp_converged_pops
			}
		}
	}

	country_event = { # Leader level trait handler
		id = tec_biopsionic_path.20099
		hide_window = yes

		is_triggered_only = yes

		trigger = {
			from = {
				species = {
					has_trait = trait_tec_biopsionic_brain
				}
			}
			NOT = {
				has_country_flag = tec_leader_sharing_gate
			}
		}

		immediate = {
			set_timed_country_flag = {
				flag = tec_leader_sharing_gate
				days = 1
			}
			random = {
				chance = 25
				if = {
					limit = {
						from = {
							OR = {
								leader_class = official
							}
						}
					}
					random_owned_leader = {
						limit = {
							NOT = {
								is_same_value = from
							}
							OR = {
								leader_class = official
							}
						}
						tec_pure_brain_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						from = {
							leader_class = scientist
						}
					}
					random_owned_leader = {
						limit = {
							NOT = {
								is_same_value = from
							}
							leader_class = scientist
						}
						tec_pure_brain_leader_effect = yes
					}
				}
				else_if = {
					limit = {
						from = {
							leader_class = commander
						}
					}
					random_owned_leader = {
						limit = {
							NOT = {
								is_same_value = from
							}
							leader_class = commander
						}
						tec_pure_brain_leader_effect = yes
					}
				}
			}
		}
	}

	country_event = { # Pops get merged
		id = tec_biopsionic_path.360
		title = "tec_biopsionic_path.360.name"
		desc = {
			trigger = {
				always = yes
			}
			text = "tec_biopsionic_path.360.desc"
		}
		picture = GFX_evt_zro_4
		show_sound = event_the_great_awakening

		is_triggered_only = yes

		immediate = {
			hidden_effect = {
				set_country_flag = tec_biopsionic_converged_traits
			}
		}

		option = {
			name = "tec_biopsionic_path.360.a"
			custom_tooltip = "tec_biopsionic_path.360.a.tooltip"
			icon = {
				icon = GFX_situation_approach_this_is_fine
				icon_background = GFX_situation_approach_bg_tec_purple
				text = tec_icon_text_outcome_good
			}
		}
	}
  # /
# /

# Bio-Psy: Purity of essence
# ------------------------------------------------------------ tec_biopsychic_path.xxx
namespace = tec_biopsychic_path

 # --------------- BIOPSYCHIC T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_biopsychic_path.250

	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_biopsychic_path.25001
 # /
 # --------------- BIOPSYCHIC T2 POSTMECHANIC - ASCENDANT EMULSION
	#country_event = { # Situation Started - Ascendant Emulsion
	#	id = tec_biopsychic_path.500

	#situation_event = { # Emulsion - XX% - Select the focus
	#	id = tec_biopsychic_path.500XX

	#situation_event = { # Emulsion - XX% - TODO ASCENSION
	#	id = tec_biopsychic_path.500XX

	#situation_event = { # Emulsion - XX% - TODO ASCENSION
	#	id = tec_biopsychic_path.500XX

	#situation_event = { # Emulsion - 100% - SORTER
	#	id = tec_biopsychic_path.505

	#country_event = { # Emulsion - 100A% - TODO ASCENSION
	#	id = tec_biopsychic_path.50501

	#country_event = { # Emulsion - 100B% - TODO ASCENSION
	#	id = tec_biopsychic_path.50502

	#country_event = { # Emulsion - 100C% - TODO ASCENSION
	#	id = tec_biopsychic_path.50503
 # /
# /

# Cyber-Psy: Biotic Mastery
# ------------------------------------------------------------ tec_cyberpsychic_path.xxx
namespace = tec_cyberpsychic_path

 # --------------- BIOPSYCHIC T2 POSTMECHANIC ANNOUNCEMENT
	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_biopsychic_path.250

	#country_event = { # Tease - TODO ASCENSION
	#	id = tec_biopsychic_path.25001
 # /
 # --------------- BIOPSYCHIC T2 POSTMECHANIC - BIONIC ENTANGLEMENT
	#country_event = { # Situation Started - Ascendant Emulsion
	#	id = tec_biopsychic_path.500

	#situation_event = { # Entanglement - XX% - Select the focus
	#	id = tec_biopsychic_path.500XX

	#situation_event = { # Entanglement - XX% - TODO ASCENSION
	#	id = tec_biopsychic_path.500XX

	#situation_event = { # Entanglement - XX% - TODO ASCENSION
	#	id = tec_biopsychic_path.500XX

	#situation_event = { # Entanglement - 100% - SORTER
	#	id = tec_biopsychic_path.505

	#country_event = { # Entanglement - 100A% - TODO ASCENSION
	#	id = tec_biopsychic_path.50501

	#country_event = { # Entanglement - 100B% - TODO ASCENSION
	#	id = tec_biopsychic_path.50502

	#country_event = { # Entanglement - 100C% - TODO ASCENSION
	#	id = tec_biopsychic_path.50503
 # /
# /

# Bioware-Psy: TO DO
# ------------------------------------------------------------ tec_biowarepsychic_path.xxx
namespace = tec_biowarepsychic_path

	# TODO/TO DISCARD
# /