# events\!!_anomaly_events_1.txt

namespace = anomaly

country_event = { # Keeping this one for future gestalt reanimation 
	# It is just as vanilla	
	id = anomaly.79
	title = "anomaly.75.name"
	desc = "anomaly.79.desc"
	picture = GFX_evt_mining_station
	#show_sound = event_scanner
	location = event_target:rock_brain

	is_triggered_only = yes

	option = {
		name = anomaly.79.a
		add_modifier = {
			modifier = rock_brain_decoding
			days = -1
		}
	}

	option = {
		name = galactic_features.385.reanimated
		ai_chance = {
			factor = 100
		}
		trigger = {
			is_reanimator = yes
		}

		add_modifier = {
			modifier = rock_brain_decoding
			days = -1
		}

		event_target:rock_brain = {
			enable_special_project = {
				name = "REANIMATE_ROCK_BRAIN"
				location = this
				owner = root
			}
		}
	}
}

# EVOLVED awoken fix + more
# The synths make a colony, inside or outside of the player's borders
country_event = {
	id = anomaly.189
	title = "anomaly.189.name"
	desc = "anomaly.189.desc"
	picture = GFX_evt_synth_organic_relations
	show_sound = event_radio_chatter
	location = FROM

	is_triggered_only = yes

	immediate = {
		random_planet_within_border = {
			limit = {
				habitable_planet = yes
				is_colony = no
				has_anomaly = no
				is_capital = no
			}
			save_event_target_as = new_colony
		}
	}

	# build a colony within our borders option
	option = {
		name = anomaly.189.a
		custom_tooltip = anomaly.189.a.tooltip
		trigger = {
			NOT = { has_policy_flag = ai_outlawed }
			any_planet_within_border = {
				habitable_planet = yes
				is_colony = no
				has_anomaly = no
				is_capital = no
				NOR = {
					has_modifier = holy_planet
					has_planet_flag = hatchling_egg
					has_planet_flag = machine_world_1
					has_planet_flag = machine_world_2
					has_planet_flag = machine_world_3
					has_planet_flag = machine_world_4
				}
			}
		}
		allow = {
			NOT = { has_policy_flag = ai_outlawed }
			any_planet_within_border = {
				habitable_planet = yes
				is_colony = no
				has_anomaly = no
				is_capital = no
				NOR = {
					has_modifier = holy_planet
					has_planet_flag = hatchling_egg
					has_planet_flag = machine_world_1
					has_planet_flag = machine_world_2
					has_planet_flag = machine_world_3
					has_planet_flag = machine_world_4
				}
			}
		}
		hidden_effect = {
			event_target:new_colony = {
				set_owner = root
				set_controller = root
				prevent_anomaly = yes
				create_species = {
					name = "NAME_Awoken_Robot"
					plural = "NAME_Awoken_Robot"
					class = ROBOT
					namelist = FUN3
					portrait = "default_robot"
					traits = {
						trait = "trait_mechanical"
					}
				}
				while = {
					count = 3
					create_pop = {
						species = last_created_species
					}
				}
			}
		}
	}

	# They're on their own (the droids colonize a planet outside the borders if available or "just disappear")
	option = {
		name = anomaly.189.b
		custom_tooltip = anomaly.189.b.tooltip

		trigger = {
			NOT = { has_policy_flag = ai_outlawed }
			any_system = {
				NOR = {
					exists = space_owner
					has_star_flag = hostile_system
					has_star_flag = guardian
					has_star_flag = enclave
				}
				any_system_planet = {
					habitable_planet = yes
					has_anomaly = no
					is_colony = no
					is_capital = no
					NOR = {
						has_modifier = holy_planet
						has_planet_flag = hatchling_egg
						has_planet_flag = machine_world_1
						has_planet_flag = machine_world_2
						has_planet_flag = machine_world_3
						has_planet_flag = machine_world_4
					}
				}
			}
		}
		allow = {
			NOT = { has_policy_flag = ai_outlawed }
			any_system = {
				NOR = {
					exists = space_owner
					has_star_flag = hostile_system
					has_star_flag = guardian
					has_star_flag = enclave
				}
				any_system_planet = {
					habitable_planet = yes
					has_anomaly = no
					is_colony = no
					is_capital = no
					NOR = {
						has_modifier = holy_planet
						has_planet_flag = hatchling_egg
						has_planet_flag = machine_world_1
						has_planet_flag = machine_world_2
						has_planet_flag = machine_world_3
						has_planet_flag = machine_world_4
					}
				}
			}
		}
		hidden_effect = {
			country_event = { id = anomaly.1197 }
		}
	}

	#dismantle the robots for parts
	option = {
		name = anomaly.189.c
		custom_tooltip = anomaly.186.a.alt.tooltip
		trigger = { has_policy_flag = ai_servitude }
		add_resource = { minerals = 200 }
	}
}

# continuation of option anomaly.189.b
country_event = {
	id = anomaly.1197
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				any_system = {
					NOR = {
						exists = space_owner
						has_star_flag = hostile_system
						has_star_flag = guardian
						has_star_flag = enclave
						has_star_flag = primitive_system
					}
					any_system_planet = {
						habitable_planet = yes
						has_anomaly = no
						is_colony = no
						is_capital = no
						NOR = {
							exists = owner
							exists = controller
						}
						NOR = {
							has_modifier = holy_planet
							has_planet_flag = hatchling_egg
							has_planet_flag = machine_world_1
							has_planet_flag = machine_world_2
							has_planet_flag = machine_world_3
							has_planet_flag = machine_world_4
						}
					}
				}
			}
			random_system = {
				limit = {
					NOR = {
						exists = space_owner
						has_star_flag = hostile_system
						has_star_flag = guardian
						has_star_flag = enclave
						has_star_flag = primitive_system
					}
					any_system_planet = {
						habitable_planet = yes
						has_anomaly = no
						is_colony = no
						is_capital = no
						NOR = {
							exists = owner
							exists = controller
						}
						NOR = {
							has_modifier = holy_planet
							has_planet_flag = hatchling_egg
							has_planet_flag = machine_world_1
							has_planet_flag = machine_world_2
							has_planet_flag = machine_world_3
							has_planet_flag = machine_world_4
						}
					}
				}

				random_system_planet = {
					limit = {
						habitable_planet = yes
						has_owner = no
						is_capital = no
					}
					save_event_target_as = colonized_planet
					set_surveyed = {
						surveyed = yes
						surveyor = root
					}
					prevent_anomaly = yes
					create_species = {
						name = "NAME_Awoken_Robot"
						plural = "NAME_Awoken_Robot"
						class = ROBOT
						namelist = FUN3
						portrait = "default_robot"
						traits = {
							trait = "trait_mechanical"
						}
					}
					create_country = {
						name = "NAME_Awoken"
						name_list = FUN3
						species = last_created_species
						type = default
						origin = "origin_default"
						authority = auth_democratic
						ethos = {
							ethic = ethic_fanatic_materialist
							ethic = ethic_xenophile
							ethic = ethic_fanatic_industrialist
						}
						civics = {
							civic = civic_technocracy
							civic = civic_tec_regular_scientific_belief
							civic = civic_tec_regular_political_virtue
						}
						flag = {
							icon = {
								category = "blocky"
								file = "flag_blocky_21.dds"
							}
							background = {
								category = "backgrounds"
								file = "new_dawn.dds"
							}
							colors = {
								"black"
								"dark_blue"
								"null"
								"null"
							}
						}
						exclude_day_zero_contact = root
						effect = {
							establish_communications_no_message = root
							root = {
								every_federation_ally = {
									establish_communications = prevprev
								}
							}
							set_country_flag = limbo_country
							set_country_flag = synthetic_empire
							species = {
								if = { limit = { host_has_dlc = "Synthetic Dawn Story Pack" }
									change_species_characteristics = { portrait = "sd_fun_robot" }
								}
							}
							create_leader = {
								class = random_ruler
								species = owner_main_species
								name = random
								skill = 5
							}
							set_leader = last_created_leader
							every_owned_leader = {
								limit = {
									tec_should_leader_be_assimilated = yes
								}
								change_species = owner_main_species
							}
							every_pool_leader = {
								limit = {
									tec_should_leader_be_assimilated = yes
								}
								change_species = owner_main_species
							}
							copy_techs_from = {
								target = root
								except = {
									# Misc
									tech_frontier_health
									tech_frontier_hospital
									tech_telepathy
									tech_precognition_interface
									tech_psi_jump_drive_1
									tech_galactic_markets
									tech_subdermal_stimulation
									tech_global_research_initiative
									tech_neural_implants
									tech_psionic_theory
									# Genetics
									tech_vitality_boosters
									tech_epigenetic_triggers
									tech_gene_banks
									tech_gene_seed_purification
									tech_morphogenetic_field_mastery
									tech_gene_tailoring
									tech_glandular_acclimation
									tech_gene_expressions
									tech_selected_lineages
									tech_capacity_boosters
									# Horizon Signal
									tech_akx_worm_1
									tech_akx_worm_2
									tech_akx_worm_3
								}
							}
						}
					}
					set_owner = last_created_country
					set_capital = yes
					while = {
						count = 14
						create_pop = {
							species = last_created_species
						}
					}
					add_building = building_research_lab_1
					add_building = building_foundry_1
					add_building = building_factory_1
					add_district = district_generator
					add_district = district_generator
					add_district = district_mining
					add_district = district_mining
					add_district = district_city
					add_district = district_city
					validate_and_repair_planet_buildings_and_districts = yes
					while = {
						count = 5
						create_army = {
							name = "NAME_Awoken_Army"
							owner = event_target:awoken_country
							species = event_target:awoken_country
							type = "defense_army"
						}
					}
					root = { country_event = { id = anomaly.1196 days = 10 } }
				}
			}
		}
		else = {
			# There are no colonizable planets outside the player's borders
			country_event = { id = anomaly.1195 days = 40 }
		}
	}
}

# If the players have synth tech and colonizable planets outside but not inside their borders they tell the players they are eternally grateful but they'd like to strike out on their own and rebuild their empire again.
country_event = {
	id = anomaly.1199
	title = "anomaly.1199.name"
	desc = "anomaly.1199.desc"
	show_sound = event_mystic_reveal
	picture = GFX_evt_synth_organic_relations
	location = capital_scope

	is_triggered_only = yes

	#dismantle the robots for parts
	option = {
		name = anomaly.189.c
		custom_tooltip = anomaly.186.a.alt.tooltip
		trigger = { has_policy_flag = ai_servitude }
		add_resource = { minerals = 200 }
	}

	option = {
		name = anomaly.1199.a
		custom_tooltip = anomaly.189.b.tooltip
		trigger = {
			NOT = {
				has_policy_flag = ai_outlawed
			}
			any_system = {
				NOR = {
					exists = space_owner
					has_star_flag = hostile_system
					has_star_flag = guardian
					has_star_flag = enclave
					has_star_flag = primitive_system
				}
				any_system_planet = {
					habitable_planet = yes
					has_anomaly = no
					#is_colony = no
					#is_capital = no
					NOR = {
						exists = owner
						exists = controller
					}
				}
			}
		}
		allow = {
			NOT = {
				has_policy_flag = ai_outlawed
			}
			any_system = {
				NOR = {
					exists = space_owner
					has_star_flag = hostile_system
					has_star_flag = guardian
					has_star_flag = enclave
					has_star_flag = primitive_system
				}
				any_system_planet = {
					habitable_planet = yes
					has_anomaly = no
					#is_colony = no
					#is_capital = no
					NOR = {
						exists = owner
						exists = controller
					}
				}
			}
		}

		hidden_effect = {
			random_system = {
				limit = {
					NOR = {
						exists = space_owner
						has_star_flag = hostile_system
						has_star_flag = guardian
						has_star_flag = enclave
						has_star_flag = primitive_system
					}
					any_system_planet = {
						habitable_planet = yes
						has_anomaly = no
						is_colony = no
						is_capital = no
						NOR = {
							exists = owner
							exists = controller
						}
					}
				}
				random_system_planet = {
					limit = {
						habitable_planet = yes
						has_owner = no
						has_anomaly = no
						is_colony = no
						is_capital = no
					}
					save_event_target_as = colonized_planet
					set_surveyed = {
						surveyed = yes
						surveyor = root
					}
					prevent_anomaly = yes
					create_species = {
						name = "NAME_Awoken_Robot"
						plural = "NAME_Awoken_Robot"
						class = ROBOT
						namelist = FUN3
						portrait = "default_robot"
						traits = {
							trait = "trait_mechanical"
						}
					}
					create_country = {
						name = "NAME_Awoken"
						name_list = FUN3
						species = last_created_species
						type = default
						origin = "origin_default"
						authority = auth_democratic
						ethos = {
							ethic = ethic_fanatic_materialist
							ethic = ethic_xenophile
							ethic = ethic_fanatic_industrialist
						}
						civics = {
							civic = civic_technocracy
							civic = civic_tec_regular_scientific_belief
							civic = civic_tec_regular_political_virtue
						}
						auto_delete = no
						flag = {
							icon = {
								category = "blocky"
								file = "flag_blocky_21.dds"
							}
							background = {
								category = "backgrounds"
								file = "new_dawn.dds"
							}
							colors = {
								"black"
								"dark_blue"
								"null"
								"null"
							}
						}
						exclude_day_zero_contact = root
						effect = {
							establish_communications_no_message = root
							root = {
								every_federation_ally = {
									establish_communications = prevprev
								}
							}
							add_trust = {
								amount = 10
								who = root
							}
							save_event_target_as = awoken_country
							set_country_flag = limbo_country
							set_country_flag = synthetic_empire
							species = {
								if = { limit = { host_has_dlc = "Synthetic Dawn Story Pack" }
									change_species_characteristics = { portrait = "sd_fun_robot" }
								}
							}
							create_leader = {
								class = random_ruler
								species = owner_main_species
								name = random
								skill = 5
							}
							set_leader = last_created_leader
							every_owned_leader = {
								change_species = owner_main_species
							}
							every_pool_leader = {
								change_species = owner_main_species
							}
							
							copy_techs_from = {
								target = root
								except = {
									# Misc
									tech_frontier_health
									tech_frontier_hospital
									tech_telepathy
									tech_precognition_interface
									tech_psi_jump_drive_1
									tech_galactic_markets
									tech_subdermal_stimulation
									tech_global_research_initiative
									tech_neural_implants
									tech_psionic_theory
									# Genetics
									tech_vitality_boosters
									tech_epigenetic_triggers
									tech_gene_banks
									tech_gene_seed_purification
									tech_morphogenetic_field_mastery
									tech_gene_tailoring
									tech_glandular_acclimation
									tech_gene_expressions
									tech_selected_lineages
									tech_capacity_boosters
									# Horizon Signal
									tech_akx_worm_1
									tech_akx_worm_2
									tech_akx_worm_3
								}
							}
						}
					}
					set_owner = event_target:awoken_country
					set_capital = yes
					while = {
						count = 14
						create_pop = {
							species = last_created_species
						}
					}
					add_building = building_research_lab_1
					add_building = building_foundry_1
					add_building = building_factory_1
					add_district = district_generator
					add_district = district_generator
					add_district = district_mining
					add_district = district_mining
					add_district = district_city
					add_district = district_city
					validate_and_repair_planet_buildings_and_districts = yes
					while = {
						count = 5
						create_army = {
							name = "NAME_Awoken_Army"
							owner = event_target:awoken_country
							species = event_target:awoken_country
							type = "defense_army"
						}
					}
					root = { country_event = { id = anomaly.1196 days = 10 } }
				}
			}
		}
	}
}
# /