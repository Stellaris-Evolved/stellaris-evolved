# events\zz_evolved_misc.txt

namespace = tec_misc

planet_event = { # Ecoworld remove modifier
	id = tec_misc.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		tec_is_ecoworld = yes
		OR = {
			tec_is_arcology = yes
			tec_invalidates_ecoworld_project_comp = yes
		}
	}

	immediate = {
		remove_modifier = pm_tec_ecoworld_planet
	}
	
}

country_event = {
	id = tec_misc.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
	}

	immediate = {
		set_global_flag = tec_allow_cui
	}
}

planet_event = { # Hydrological recalc
	id = tec_misc.3
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_deposit = d_tec_desiccators_deposit
	}

	immediate = {
		FROMFROM = {
			tec_calculate_hydrological_current_deposits = yes
		}
		FROM = {
			tec_calculate_hydrological_current_deposits = yes
		}
	}

}

event = {
	id = tec_misc.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_country = {
			every_owned_planet = {
				validate_planet_buildings_and_districts = yes
			}
			calculate_modifier = yes
		}
	}

}

# This = released vassal
# From = overlord
country_event = {
	id = tec_misc.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_country_flag = tec_sector_released_by_@from
	}
}


namespace = tec_caching

# on_game_start
# on_yearly_pulse
event = { # General caching, run once 
	id = tec_caching.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_global_flag = tec_cached_month
		}
	}

	immediate = {
		tec_cache_everything = yes
		set_timed_global_flag = { flag = tec_cached_month days = 30 }
	}
}

# on_colonize
# on_planet_class_changes
# on_planet_transfer
planet_event = { # cache planet triggers
	id = tec_caching.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		tec_cache_planet_type_triggers = { force = yes }
		tec_cache_pop_count_values = { force = yes }
	}
}

# on_colonize
# on_building_complete
# on_building_upgraded
# on_planet_transfer
planet_event = { # cache building triggers
	id = tec_caching.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		tec_cache_capital_triggers = { force = yes }
		tec_cache_building_triggers = { force = yes }
		tec_cache_combined_values = { force = yes }
	}
}

# on_tech
# on_policy_change
country_event = { # shackled pop cache triggers
	id = tec_caching.4
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_owned_pop = {
			tec_cache_shackled_triggers = { force = yes }
		}
	}
}

# on_monthly_pulse
event = {
	id = tec_caching.5 # montly
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		NOT = {
			has_global_flag = tec_cached_month
		}
	}
	
	immediate = {
		every_country = {
			every_owned_planet = {
				tec_cache_colony_triggers = yes
				tec_cache_pop_count_values = { force = yes }
			}
			tec_cache_opinions = yes
			# in case some might use opinion mods
			country_event = {
				id = tec_caching.9 
			}
		}
		every_galaxy_pop = {
			limit = { exists = this }
			tec_cache_pop_triggers = yes
		}
		set_timed_global_flag = { flag = tec_cached_month days = 30 }
	}
}

# on_post_government_changed
country_event = {
	id = tec_caching.6
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		tec_cache_country_civic_triggers = { force = yes }
	}
}

country_event = {
	id = tec_caching.7
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_galaxy_planet = {
			limit = {
				OR = {
					is_colony = yes
					is_colonizable = yes
				}
			}
			tec_cache_planet_type_triggers = { force = yes }
			if = {
				limit = {
					is_colony = yes
				}
				tec_cache_colony_triggers = { force = yes }
				tec_cache_capital_triggers = { force = yes }
				tec_cache_building_triggers = { force = yes }
				tec_cache_combined_values = { force = yes }
				tec_cache_pop_count_values = { force = yes }
			}
		}
		every_galaxy_pop = {
			limit = { exists = this }
			tec_cache_shackled_triggers = { force = yes }
			tec_cache_pop_triggers = { force = yes }
		}
		every_galaxy_species = {
			tec_cache_species_traits_triggers = { force = yes }
		}
		every_country = {
			tec_cache_country_civic_triggers = { force = yes }
			tec_cache_opinions = { force = yes }
			# in case some might use opinion mods
			country_event = {
				id = tec_caching.9 
			}
		}
		set_global_flag = @tec_cache_global_flag
	}
}

# on_modification_complete
country_event = {
	id = tec_caching.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		from = { tec_cache_species_traits_triggers = { force = yes } }
	}
}

country_event = { # defer to have correct root scope
	id = tec_caching.9 
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		tec_cache_country_monthly_triggers = yes
	}
}

# on_district_complete
# on_district_demolished
planet_event = { # cache building triggers
	id = tec_caching.10
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		tec_cache_combined_values = { force = yes }
	}
}


pop_event = { # cache pop triggers
	id = tec_caching.11
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		tec_cache_pop_triggers = { force = yes }
		tec_cache_shackled_triggers = { force = yes }
	}
}


namespace = tec_debug

leader_event = {
	id = tec_debug.1
	title = "tec_debug.1.name"
	desc = "tec_debug.1.desc"
	show_sound = par_portrait_01
	is_triggered_only = yes

	picture = GFX_leader_recruitment_bg_renowned
	auto_opens = yes

	event_window_type = leader_recruit

	picture_event_data = {
		portrait = event_target:tec_debug_leader
		room = machine_room
	}

	option = {
		name = DISMISS
		tag = dismiss_leader
	}

	option = {
		name = DISMISS
		tag = hire_leader
	}

	option = {
		name = tec_debug.1.kill_leader
		event_target:tec_debug_leader = {
			kill_leader = {
				show_notification = no
			}
		}
	}

	option = {
		name = tec_debug.1.fire_leader
		event_target:tec_debug_leader = {
			kill_leader = {
				fire = yes
				show_notification = no
			}
		}
	}

	option = {
		name = tec_debug.1.increase_skill
		event_target:tec_debug_leader = {
			add_skill_without_trait_selection = 1
			leader_event = {
				id = tec_debug.1
			}
		}
	}

	option = {
		name = tec_debug.1.random_trait
		event_target:tec_debug_leader = {
			add_trait_no_notify = random_common
			leader_event = {
				id = tec_debug.1
			}
		}
	}

	option = {
		name = tec_debug.1.remove_negatives
		event_target:tec_debug_leader = {
			remove_all_negative_traits = yes
			leader_event = {
				id = tec_debug.1
			}
		}
	}

	option = {
		name = tec_debug.1.rerun_leader_actions
		event_target:tec_debug_leader = {
			set_leader_flag = tec_force_starting_actions
			tec_leader_handle_starting_modifiers = {
				from = owner
			}
			remove_leader_flag = tec_force_starting_actions
			leader_event = {
				id = tec_debug.1
			}
		}
	}

	option = {
		name = tec_debug.1.reset_leader
		event_target:tec_debug_leader = {
			if = {
				limit = {
					tec_is_aiauth_councilor_node = yes
					is_ruler = yes
				}
				set_leader_flag = tec_debug_leader_was_ainode_ruler
			}
			if = {
				limit = {
					tec_is_aiauth_councilor_node = yes
					is_ruler = no
				}
				set_leader_flag = tec_debug_leader_was_ainode_councilor
			}
			if = {
				limit = {
					tec_is_aiauth_planetary_governing_node = yes
				}
				set_leader_flag = tec_debug_leader_was_ainode_governor
			}
			remove_all_traits = yes
			set_skill = 1
			add_trait_no_notify = "random_common"
			set_leader_flag = tec_force_starting_actions
			clear_variable = tec_leader_starting_traits_modifier
			if = {
				limit = {
					has_leader_flag = tec_debug_leader_was_ainode_ruler
				}
				add_trait_no_notify = leader_trait_tec_aiauth_ruler
				tec_leader_add_councilor_trait = yes
			}
			if = {
				limit = {
					has_leader_flag = tec_debug_leader_was_ainode_councilor
				}
				add_trait_no_notify = leader_trait_tec_aiauth_node
				tec_leader_add_councilor_trait = yes
			}
			if = {
				limit = {
					has_leader_flag = tec_debug_leader_was_ainode_governor
				}
				add_trait_no_notify = leader_trait_tec_aiauth_planetary_governing_node
				tec_leader_add_governor_trait = yes
			}
			tec_leader_handle_starting_modifiers = {
				from = owner
			}
			remove_leader_flag = tec_force_starting_actions
			leader_event = {
				id = tec_debug.1
			}
		}
	}
}