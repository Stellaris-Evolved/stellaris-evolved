# events\zz_evolved_auth_ethic_events.txt

# Guide
# tec_ethic_x 0-100xx = control
# tec_ethic_x 0-200xx = mechanics of ethic/policie
	# 200xx = mechanic
	# 210xx = policy A
	# 230xx = policy B
	# etc
# tec_ethic_x 0-300xx = random events

# Regular Ethic Events
# ------------------------------------------------------------ tec_ethic.xxx
 # For ethic controls
 namespace = tec_ethic_regular

 # /
 # Egalitarian
	namespace = tec_ethic_egalitarian
 # /
 # Authoritarian
	namespace = tec_ethic_authoritarian
 # /
 # Xenophobe
	namespace = tec_ethic_xenophobe
 # /
 # Xenophile
	namespace = tec_ethic_xenophile

	# Gestalt pop arrives for first time
 # /
 # Militarist
	namespace = tec_ethic_militarist

	# on_ship_built
	# this = ship
	# owner = country
	ship_event = {	# Militarist special mechanic
		id = tec_ethic_militarist.200
		hide_window = yes
		is_triggered_only = yes
	
		trigger = {
			exists = owner
			owner = { is_militarist = yes }
			is_ship_class = shipclass_military
			NOT = {
				is_ship_size = transport
			}
		}
	
		immediate = {
			if = {
				limit = {
					exists = owner
					owner = {
						has_ethic = ethic_militarist
					}
				}
				if = {
					limit = {
						exists = owner
						OR = {
							is_ship_size = corvette
							is_ship_size = frigate
							is_ship_size = crisis_corvette
						}
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.05
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = destroyer
						is_ship_size =	crisis_destroyer
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.1
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = cruiser
						is_ship_size = crisis_cruiser
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.15
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = battleship
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.25
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = titan
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 1
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = juggernaut
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 6
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = colossus
						is_ship_size = star_eater
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 6
						}
					}
				}
				else = {
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.1
						}
					}
				}
			}
			if = {
				limit = {
					exists = owner
					owner = {
						has_ethic = ethic_fanatic_militarist
					}
				}
				if = {
					limit = {
						exists = owner
						OR = {
							is_ship_size = corvette
							is_ship_size = frigate
							is_ship_size = crisis_corvette
						}
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.1
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = destroyer
						is_ship_size =	crisis_destroyer
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.2
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = cruiser
						is_ship_size = crisis_cruiser
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.3
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = battleship
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.5
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = titan
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 2
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = juggernaut
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 12
						}
					}
				}
				else_if = {
					limit = {
						exists = owner
						is_ship_size = colossus
						is_ship_size = star_eater
					}
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 12
						}
					}
				}
				else = {
					owner = {
						add_monthly_resource_mult = {
							resource = unity
							value = 0.2
						}
					}
				}
			}
		}
	}
 # /
 # Pacifist
	namespace = tec_ethic_pacifist

	#planet_event = {	# Peace Parade launched
	#	id = tec_ethic_pacifist.200

		# situation 
	# /

 # /
 # Spiritualist
	namespace = tec_ethic_spiritualist
 # /
 # Materialist
	namespace = tec_ethic_materialist


	#planet_event = {	# Physics lab event gate
	#	id = tec_ethic_materialist.310

		#planet_event = {	# Created a micro wormhole
		#	id = tec_ethic_materialist.31001

		#planet_event = {	# Discovered an energy singularity
		#	id = tec_ethic_materialist.31002

		#planet_event = {	# Created new energy weapon by mistake
		#	id = tec_ethic_materialist.31003

		#planet_event = {	# Discovered an energy singularity
		#	id = tec_ethic_materialist.31004

		#planet_event = {	# Found breakthrough in ai design
		#	id = tec_ethic_materialist.31005


		#planet_event = {	# Black hole destroys the lab
		#	id = tec_ethic_materialist.31011

		#planet_event = {	# Explodes
		#	id = tec_ethic_materialist.31012

		#planet_event = {	# Someone goes mad
		#	id = tec_ethic_materialist.31013

		#planet_event = {	# AI goes rogue
		#	id = tec_ethic_materialist.31014

		#planet_event = {	# Blackout of the planet
		#	id = tec_ethic_materialist.31015


		#planet_event = {	# Generic bonus + energy
		#	id = tec_ethic_materialist.31015

		#planet_event = {	# Generic bonus + physics
		#	id = tec_ethic_materialist.31015

		#planet_event = {	# Generic bonus + motes
		#	id = tec_ethic_materialist.31015

	# /

	#planet_event = {	# Society lab event gate
	#	id = tec_ethic_materialist.320

		#planet_event = {	# New genetic therapy discovered
		#	id = tec_ethic_materialist.32001

		#planet_event = {	# Nutrient replication hinted
		#	id = tec_ethic_materialist.32002

		#planet_event = {	# Self-growing food
		#	id = tec_ethic_materialist.32003

		#planet_event = {	# Insights on societal development
		#	id = tec_ethic_materialist.32003

		#planet_event = {	# Biomechanical robot armies
		#	id = tec_ethic_materialist.32003


		#planet_event = {	# Plants outgrow and threraten the planet
		#	id = tec_ethic_materialist.32011

		#planet_event = {	# Lab explodes
		#	id = tec_ethic_materialist.32012

		#planet_event = {	# Virus escapes
		#	id = tec_ethic_materialist.32013

		#planet_event = {	# Test subjects kills scientists
		#	id = tec_ethic_materialist.32014

		#planet_event = {	# Sabotage by extremists
		#	id = tec_ethic_materialist.32015


		#planet_event = {	# Generic bonus + food
		#	id = tec_ethic_materialist.32015

		#planet_event = {	# Generic bonus + society
		#	id = tec_ethic_materialist.32015

		#planet_event = {	# Generic bonus + gases
		#	id = tec_ethic_materialist.32015

	# /
	
	#planet_event = {	# Engineering lab event gate
	#	id = tec_ethic_materialist.320

		#planet_event = {	# Experimental gauss canon discovered
		#	id = tec_ethic_materialist.32001

		#planet_event = {	# Self-growing minerals
		#	id = tec_ethic_materialist.32002

		#planet_event = {	# Self-growing food
		#	id = tec_ethic_materialist.32003

		#planet_event = {	# Insights on societal development
		#	id = tec_ethic_materialist.32003

		#planet_event = {	# Biomechanical robot armies
		#	id = tec_ethic_materialist.32003


		#planet_event = {	# Weapon test goes awfuly bad
		#	id = tec_ethic_materialist.32011

		#planet_event = {	# Lab explodes
		#	id = tec_ethic_materialist.32012

		#planet_event = {	# A container with crystals overheat and burns the place
		#	id = tec_ethic_materialist.32013

		#planet_event = {	# Automation goes rampant
		#	id = tec_ethic_materialist.32014

		#planet_event = {	# Experiment with self growing minerals goes awfuly bad
		#	id = tec_ethic_materialist.32015


		#planet_event = {	# Generic bonus + minerals
		#	id = tec_ethic_materialist.32015

		#planet_event = {	# Generic bonus + engineering
		#	id = tec_ethic_materialist.32015

		#planet_event = {	# Generic bonus + crystals
		#	id = tec_ethic_materialist.32015

	# /

 # /
 # Competitive
	namespace = tec_ethic_competitive
 # /
 # Cooperative
	namespace = tec_ethic_cooperative
 # /
 # Ecologist
	namespace = tec_ethic_ecologist

	# on_terraforming_complete
	# from = country
	# this = planet
	planet_event = {	# Reformation policy bonus
		id = tec_ethic_ecologist.230
		hide_window = yes

		is_triggered_only = yes

		trigger = {
			from = {
				OR = {
					has_policy_flag = policy_option_tec_ecologist_C
					has_policy_flag = policy_option_fanatic_tec_ecologist_C
				}
			}
			NOT = {
				has_planet_flag = tec_reformation_anticheese_@from
			}
		}

		immediate = {
			set_timed_planet_flag = {
				flag = tec_reformation_anticheese_@from
				years = 25
			}
			# Gives the reward
			from = {
				if = {	# Regular
					limit = {
						has_policy_flag = policy_option_tec_ecologist_C
					}
					if = {	# Good quality
						limit = {
							root = {
								OR = {
									tec_is_gaia_world = yes
									tec_is_hive_world = yes
									tec_is_machine_world = yes
									tec_is_pd_exotic_planets = yes
									tec_is_pd_perfect_planets = yes
								}
							}
						}
						add_monthly_resource_mult = {
							resource = unity
							value = 12
						}
					}
					else = {
						add_monthly_resource_mult = {
							resource = unity
							value = 6
						}
					}
				}
				if = {	# Fanatic
					limit = {
						has_policy_flag = policy_option_fanatic_tec_ecologist_C
					}
					if = {	# Good quality
						limit = {
							root = {
								OR = {
									tec_is_gaia_world = yes
									tec_is_hive_world = yes
									tec_is_machine_world = yes
									tec_is_pd_exotic_planets = yes
									tec_is_pd_perfect_planets = yes
								}
							}
						}
						add_monthly_resource_mult = {
							resource = unity
							value = 24
						}
					}
					else = {
						add_monthly_resource_mult = {
							resource = unity
							value = 12
						}
					}
				}
			}
		}
	}
 # /
 # Industrialist
	namespace = tec_ethic_industrialist
 # /
 # Elitist
	namespace = tec_ethic_elitist

	# from: leader
	# scope: country
	country_event = {
		id = tec_ethic_elitist.10
		hide_window = yes

		is_triggered_only = yes

		trigger = {
			is_elitist = yes
		}

		immediate = { # % of positive trait
			from = {
				random_list = {
					75 = {
						
					}
					25 = {
						modifier = {
							factor = 3
							owner = {
								has_ethic = ethic_fanatic_elitist
							}
						}
						add_trait_no_notify = "random_common"
					}
				}
			}
		}
	}

 # /
 # Pluralist
	namespace = tec_ethic_pluralist

 # /
# /


# Gestalt Ethic Events
# ------------------------------------------------------------ tec_ethic_gestalt.xxx
namespace = tec_ethic_gestalt

	# Assimilator fixer
	country_event = {	# UNUSED
		id = tec_ethic_gestalt.90100
		hide_window = yes
		is_triggered_only = yes
		
		trigger = {
			is_machine_empire = yes
			has_valid_civic = civic_machine_assimilator
		}
		
		immediate = {
			every_owned_species = {
				limit = {
					has_citizenship_type = {
						type = citizenship_assimilation
						country = root
					}
				}
				set_citizenship_type = {
					type = citizenship_full_machine
					country = root
				}
			}
		}
	}
# /

 # Empathy
	namespace = tec_gestalt_empathy

	# Gestalt migration event - Manager
	country_event = {	# PREV
		id = tec_gestalt_empathy.11111
		title = "tec_gestalt_empathy.11.name"
		desc = "tec_gestalt_empathy.11.desc"
		picture = GFX_evt_diplomatic_visit
		show_sound = event_ship_bridge
		
		is_triggered_only = yes

		trigger = {
			has_ethic = ethic_gestalt_empathy
			has_technology = tech_tec_gestalt_friendship
			any_playable_country = {
				NOT = {
					has_country_flag = tec_provided_pop_@root
				}
				NOT = {
					is_at_war_with = root
				}
				OR = {
					opinion_level = {
						who = root
						level >= good
					}
					is_in_federation_with = root
					is_loyal_to = root
				}
				OR = {
					is_gestalt = no					# No other gestalts for balance reasons
					AND = {
						is_gestalt = yes			# But yes for empathic gestalt hives
						is_hive_empire = yes
						has_ethic = ethic_gestalt_empathy
					}
				}
				is_fallen_empire = no			# No fe cheese
				is_synthetic_empire = no		# No droids
			}
		}

		option = {
			name = tec_gestalt_empathy.11.a
		}

		immediate = {
			hidden_effect = {
				set_variable = {
					which = tec_empath_welcome_pops_temp
					value = 0
				}
				while = {
					count = 5
					# Marks up to 5 candidate planets to receive a pop 
					# DEPRECATED - Distribution will be random and number of pops capped to 1 per 
					#				planet to prevent overcrowding
					random_owned_planet = {
						limit = {
							is_colony = yes
							tec_is_machine_world = no
							tec_is_hive_world = no
							NOT = { is_planet_class = pc_cosmogenesis_world }
							NOT = {
								has_planet_flag = tec_empathy_migration_candidate_off
							}
						}
						save_event_target_as = tec_empathy_migration_candidate
						set_timed_planet_flag = {
							flag = tec_empathy_migration_candidate_off
							years = 1
						}
					}

					# Checks up to 5 compatible countries and moves a pop to one of the candidate planets
					random_playable_country = {
						limit = {
							NOT = {
								has_country_flag = tec_provided_pop_@root
							}
							NOT = {
								is_at_war_with = root
							}
							OR = {
								opinion_level = {
									who = root
									level >= good
								}
								is_in_federation_with = root
								is_loyal_to = root
							}
							OR = {
								is_gestalt = no					# No other gestalts for balance reasons
								AND = {
									is_gestalt = yes			# But yes for empathic gestalt hives
									is_hive_empire = yes
									has_ethic = ethic_gestalt_empathy
								}
							}
							is_fallen_empire = no			# No fe cheese
							is_synthetic_empire = no		# No droids
						}
						set_timed_country_flag = {			#Prevents repeated pops in the same sequence, diversity!
							flag = tec_provided_pop_@root
							years = 10
						}
						# Duplicates a compatible pop
						capital_scope = {
							random_owned_pop = {
								limit = {
									is_organic_species = yes
									is_enslaved = no
								}
								save_event_target_as = tec_copy_pop_@prevprev
							}
							# Aliens are friendly, we want to migrate there
							while = {
								count = 1 #test
								create_pop = {
									species = event_target:tec_copy_pop_@prev
									ethos = {
										ethic = "ethic_xenophile"
									}
								}
							}
						}
						
						# Clears the pop category and moves it to a candidate
						last_created_pop = {
							clear_pop_category = yes
							resettle_pop = {
								pop = THIS
								planet = event_target:tec_empathy_migration_candidate
							}
						#	if = {			# too op and subspecies = bad
						#		limit = {
						#			NOT = {
						#				ideal_planet_class = event_target:tec_empathy_migration_candidate
						#			}
						#		}
						#		last_created_pop = {
						#			modify_species = {
						#				ideal_planet_class = event_target:tec_empathy_migration_candidate
						#			}
						#		}
						#	}
							
						}
						# Total welcome pops
						root = {
							change_variable = {
								which = tec_empath_welcome_pops
								value = 1
							}
						}
						# Local welcome pops for message
						root = {
							change_variable = {
								which = tec_empath_welcome_pops_temp
								value = 1
							}
						}
					}
				}
			}
		}
	}

	country_event = {	# Test
		id = tec_gestalt_empathy.11
		title = "tec_gestalt_empathy.11.name"
		desc = "tec_gestalt_empathy.11.desc"
		picture = GFX_evt_diplomatic_visit
		show_sound = event_ship_bridge
		
		is_triggered_only = yes

		trigger = {
			has_ethic = ethic_gestalt_empathy
			has_technology = tech_tec_gestalt_friendship
			any_playable_country = {
				NOT = {
					has_country_flag = tec_provided_pop_@root
				}
				NOT = {
					is_at_war_with = root
				}
				OR = {
					opinion_level = {
						who = root
						level >= good
					}
					is_in_federation_with = root
					is_loyal_to = root
				}
				OR = {
					is_gestalt = no					# No other gestalts for balance reasons
					AND = {
						is_gestalt = yes			# But yes for empathic gestalt hives
						is_hive_empire = yes
						has_ethic = ethic_gestalt_empathy
					}
				}
				is_fallen_empire = no			# No fe cheese
				is_synthetic_empire = no		# No droids
			}
		}

		option = {
			name = tec_gestalt_empathy.11.a
		}

		immediate = {
			hidden_effect = {
				set_variable = {
					which = tec_empath_welcome_pops_temp
					value = 0
				}
				while = {
					count = 5
					# Marks up to 5 candidate planets to receive a pop 
					# DEPRECATED - Distribution will be random and number of pops capped to 1 per 
					#				planet to prevent overcrowding
					random_owned_planet = {
						limit = {
							is_colony = yes
							tec_is_machine_world = no
							tec_is_hive_world = no
							NOT = { is_planet_class = pc_cosmogenesis_world }
							NOT = {
								has_planet_flag = tec_empathy_migration_candidate_off
							}
						}
						save_event_target_as = tec_empathy_migration_candidate
						set_timed_planet_flag = {
							flag = tec_empathy_migration_candidate_off
							years = 1
						}
					}

					# Checks up to 5 compatible countries and moves a pop to one of the candidate planets
					random_playable_country = {
						limit = {
							NOT = {
								has_country_flag = tec_provided_pop_@root
							}
							NOT = {
								is_at_war_with = root
							}
							OR = {
								opinion_level = {
									who = root
									level >= good
								}
								is_in_federation_with = root
								is_loyal_to = root
							}
							OR = {
								is_gestalt = no					# No other gestalts for balance reasons
								AND = {
									is_gestalt = yes			# But yes for empathic gestalt hives
									is_hive_empire = yes
									has_ethic = ethic_gestalt_empathy
								}
							}
							is_fallen_empire = no			# No fe cheese
							is_synthetic_empire = no		# No droids
						}
						save_event_target_as = tec_g_m_cand
						set_timed_country_flag = {			#Prevents repeated pops in the same sequence, diversity!
							flag = tec_provided_pop_@root
							years = 10
						}
						# Duplicates a compatible pop
						random_owned_species = {
							limit = {
								is_organic_species = yes
								NOR = {
									is_archetype = BIOSERVANT
									has_trait = trait_tec_bioservant
								}
							}
							save_event_target_as = tec_copy_pop
						}
					
						# Clears the pop category and moves it to a candidate
						event_target:tec_empathy_migration_candidate = {
							create_pop = {
								species = event_target:tec_copy_pop
								ethos = event_target:tec_g_m_cand
							}
						}
						# Total welcome pops
						root = {
							change_variable = {
								which = tec_empath_welcome_pops
								value = 1
							}
						}
						# Local welcome pops for message
						root = {
							change_variable = {
								which = tec_empath_welcome_pops_temp
								value = 1
							}
						}
					}
				}
			}
		}
	}
 # /
# /


# Auth Events
# ------------------------------------------------------------ tec_auth_.xxx
 # For ethic controls
 namespace = tec_auth_direct_democratic
 
	# Democracy extra experience
	country_event = {
		id = tec_auth_direct_democratic.10
		hide_window = yes

		is_triggered_only = yes

		immediate = {
			if = {
				limit = {
					tec_is_direct_democracy_swap = yes
					NOT = {
						has_country_flag = tec_direct_democracy_anticheese
					}
				}
				every_owned_leader = {
					limit = {
						is_councilor = yes
					}
					add_experience = 100
				}
				add_modifier = {
					modifier = country_modifier_tec_dirdem_bonus
					years = 2
				}
				set_timed_country_flag = {
					flag = tec_direct_democracy_anticheese
					years = 4
				}
			}
			if = {
				limit = {
					is_democratic_authority = yes
					tec_is_direct_democracy_swap = no
					NOT = {
						has_country_flag = tec_democracy_anticheese
					}
				}
				ruler = {
					if = {
						limit = {
							has_leader_flag = tec_dem_leader_bonus
						}
						root = {
							add_modifier = {
								modifier = country_modifier_tec_dem_bonus
								years = 10
							}
						}
					}
					else = {
						add_experience = 200
						set_leader_flag = tec_dem_leader_bonus
					}
				}
				set_timed_country_flag = {
					flag = tec_democracy_anticheese
					years = 9
				}
			}
		}
	}