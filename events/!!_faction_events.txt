# - - - - - - - - - - - - - - - - - - - - - # - - - - - - - - - - - - - - - - - - - - - #
# Pop Faction Events
# by Maximilian Olbers & Gemma Thomson
# - - - - - - - - - - - - - - - - - - - - - # - - - - - - - - - - - - - - - - - - - - - #

namespace = factions

# A faction is formed
pop_faction_event = {
	id = factions.1
	title = factions.1.title
	desc = {
		trigger = {
			text = factions.1.desc.start
			text = newline

			success_text = {
				text = factions.1.desc.conservatives
				is_pop_faction_type = conservatives
			}

			success_text = {
				text = factions.1.desc.bankers
				is_pop_faction_type = bankers
			}

			success_text = {
				text = factions.1.desc.socialists
				is_pop_faction_type = socialists
			}

			success_text = {
				text = factions.1.desc.labourites
				is_pop_faction_type = labourites
			}

			success_text = {
				text = factions.1.desc.environmentalists
				is_pop_faction_type = environmentalists
			}

			success_text = {
				text = factions.1.desc.manufacturers
				is_pop_faction_type = manufacturers
			}
			
			success_text = {
				text = factions.1.desc.imperialist
				is_pop_faction_type = imperialist
			}
			success_text = {
				text = factions.1.desc.isolationist
				is_pop_faction_type = isolationist
			}
			success_text = {
				text = factions.1.desc.progressive
				is_pop_faction_type = progressive
			}
			success_text = {
				text = factions.1.desc.prosperity
				is_pop_faction_type = prosperity
			}
			success_text = {
				text = factions.1.desc.supremacist
				is_pop_faction_type = supremacist
			}
			success_text = {
				text = factions.1.desc.technologist
				is_pop_faction_type = technologist
			}
			success_text = {
				text = factions.1.desc.totalitarian
				is_pop_faction_type = totalitarian
			}
			success_text = {
				text = factions.1.desc.traditionalist
				is_pop_faction_type = traditionalist
			}
			success_text = {
				text = factions.1.desc.xenoist
				is_pop_faction_type = xenoist
			}
			success_text = {
				text = factions.1.desc.manifesti
				is_pop_faction_type = manifesti
			}
			success_text = {
				hidden:owner = { NOT = { has_country_flag = first_faction } }
				text = factions.1.desc.firstfinisher
			}
		}
	}

	picture = GFX_evt_galactic_senate
	show_sound = event_factions

	is_triggered_only = yes
	
	trigger = {
		NOT = {
			owner = {
				has_origin = origin_broken_shackles
				#has_country_flag = first_faction
			}
		}
	}

	option = {
		name = OK
		hidden_effect = {
			owner = {
				every_owned_planet = {
					every_owned_pop = {
						force_faction_evaluation = yes
					}
				}
			}
			owner = { set_country_flag = first_faction }
		}
	}
}


# factions.10

# factions.11

# factions.12

# factions.13

# Imperialist frontier outpost demand

# Industrialist Recent Monster Extermination
country_event = {
	id = factions.330
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_is_default_country = yes
		from = {
			OR = {
				is_country_type = crystal
				is_country_type = drone
				is_country_type = amoeba
				is_country_type = cloud
				is_country_type = pirate
			}
		}
		fromfrom.solar_system = {
			has_star_flag = hostile_system
			# count_ skips dead ships
			count_ship_in_system = {
				count < 1
				limit = {
					exists = owner
					owner = {
						OR = {
							is_country_type = crystal
							is_country_type = drone
							is_country_type = amoeba
							is_country_type = cloud
							is_country_type = pirate
						}
					}
				}
			}
		}
	}

	immediate = {
		set_timed_country_flag = {
			flag = recent_monster_extermination_timed
			days = 3600 # 10 years
		}
	}
}

# factions.1005

# Notification event - other empire shifts ethics
country_event = {
	id = factions.2000
	title = factions.2000.title
	desc = {
		trigger = {
			text = factions.2000.desc.start
			text = newline
			
			success_text = {
				text = factions.2000.desc.imperialist
				event_target:TargetFaction = { is_pop_faction_type = imperialist }
			}
			success_text = {
				text = factions.2000.desc.isolationist
				event_target:TargetFaction = { is_pop_faction_type = isolationist }
			}
			success_text = {
				text = factions.2000.desc.progressive
				event_target:TargetFaction = { is_pop_faction_type = progressive }
			}
			success_text = {
				text = factions.2000.desc.prosperity
				event_target:TargetFaction = { is_pop_faction_type = prosperity }
			}
			success_text = {
				text = factions.2000.desc.supremacist
				event_target:TargetFaction = { is_pop_faction_type = supremacist }
			}
			success_text = {
				text = factions.2000.desc.technologist
				event_target:TargetFaction = { is_pop_faction_type = technologist }
			}
			success_text = {
				text = factions.2000.desc.totalitarian
				event_target:TargetFaction = { is_pop_faction_type = totalitarian }
			}
			success_text = {
				text = factions.2000.desc.traditionalist
				event_target:TargetFaction = { is_pop_faction_type = traditionalist }
			}
			success_text = {
				text = factions.2000.desc.xenoist
				event_target:TargetFaction = { is_pop_faction_type = xenoist }
			}
			success_text = {
				text = factions.2000.desc.manifesti
				event_target:TargetFaction = { is_pop_faction_type = manifesti }
			}

			
			
			success_text = {
				text = factions.2000.desc.conservatives
				event_target:TargetFaction = { is_pop_faction_type = conservatives }
			}

			success_text = {
				text = factions.2000.desc.bankers
				event_target:TargetFaction = { is_pop_faction_type = bankers }
			}

			success_text = {
				text = factions.2000.desc.socialists
				event_target:TargetFaction = { is_pop_faction_type = socialists }
			}

			success_text = {
				text = factions.2000.desc.labourites
				event_target:TargetFaction = { is_pop_faction_type = labourites }
			}

			success_text = {
				text = factions.2000.desc.environmentalists
				event_target:TargetFaction = { is_pop_faction_type = environmentalists }
			}

			success_text = {
				text = factions.2000.desc.manufacturers
				event_target:TargetFaction = { is_pop_faction_type = manufacturers }
			}

		}
	}

	picture = GFX_evt_alien_propaganda
	show_sound = event_factions

	is_triggered_only = yes

	option = {
		name = OK
	}
}


