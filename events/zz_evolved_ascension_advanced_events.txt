# events\zz_evolved_ascension_advanced_events.txt


# --------------------------------- MAIN ASCENSIONS ---------------------------------
# Biological A Genetic
# ------------------------------------------------------------ tec_gene_path.2xx +
namespace = tec_gene_path
 # --------------- GENE T2
  # --------------- GENE T2 Pick
	country_event = { # T2A picked - The Search for Perfection
		id = tec_gene_path.200
		title = "tec_gene_path.200.name"
		# Descs
			# Regular
			desc = {
				text = "tec_gene_path.200.desc.regular"
				trigger = {
					is_gestalt = no
				}
			}
			# Gestalt
			desc = {
				text = "tec_gene_path.200.desc.hive"
				trigger = {
					is_gestalt = yes
				}
			}
			# Fallback
			desc = "tec_gene_path.200.desc.regular"
		# /
		picture = GFX_evt_tec_orange_strings
		show_sound = event_evolution_mastery
		trackable = yes

		is_triggered_only = yes

		immediate = {
			owner_main_species = {
				save_event_target_as = tec_target_species
			}
			save_event_target_as = tec_temp_country
			event_target:tec_temp_country = {
				start_situation = {
					type = situation_tec_ascension_biological_genetics_t2
					target = event_target:tec_temp_country.capital_scope
					effect = {
						save_event_target_as = new_situation
						set_situation_locked = yes
					}
				}
			}
		}

		# Options
			# Regular
			option = {
				name = "tec_gene_path.200.approach.slow.regular"
				custom_tooltip = "tec_gene_path.200.approach.slow.regular.tooltip"
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = set_situation_approach_icon_text
				}
				trigger = {
					hidden_trigger = {
						is_gestalt = no
					}
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_biological_genetics_t2_approach_slow
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_gene_path.200.approach.standard.regular"
				custom_tooltip = "tec_gene_path.200.approach.standard.regular.tooltip"
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_green
					text = set_situation_approach_icon_text
				}
				trigger = {
					hidden_trigger = {
						is_gestalt = no
					}
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_biological_genetics_t2_approach_standard
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_gene_path.200.approach.fast.regular"
				custom_tooltip = "tec_gene_path.200.approach.fast.regular.tooltip"
				icon = {
					icon = GFX_situation_approach_tec_genecrank
					icon_background = GFX_situation_approach_bg_yellow
					text = set_situation_approach_icon_text
				}
				trigger = {
					hidden_trigger = {
						is_gestalt = no
					}
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_biological_genetics_t2_approach_fast
						set_situation_locked = no
					}
				}
			}
			# Hive
			option = {
				name = "tec_gene_path.200.approach.slow.hive"
				custom_tooltip = "tec_gene_path.200.approach.slow.hive.tooltip"
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = set_situation_approach_icon_text
				}
				trigger = {
					hidden_trigger = {
						is_hive_empire = yes
					}
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_biological_genetics_t2_approach_slow
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_gene_path.200.approach.standard.hive"
				custom_tooltip = "tec_gene_path.200.approach.standard.hive.tooltip"
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_green
					text = set_situation_approach_icon_text
				}
				trigger = {
					hidden_trigger = {
						is_hive_empire = yes
					}
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_biological_genetics_t2_approach_standard
						set_situation_locked = no
					}
				}
			}
			option = {
				name = "tec_gene_path.200.approach.fast.hive"
				custom_tooltip = "tec_gene_path.200.approach.fast.hive.tooltip"
				icon = {
					icon = GFX_situation_approach_tec_genecrank
					icon_background = GFX_situation_approach_bg_yellow
					text = set_situation_approach_icon_text
				}
				trigger = {
					hidden_trigger = {
						is_hive_empire = yes
					}
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_approach = situation_tec_ascension_biological_genetics_t2_approach_fast
						set_situation_locked = no
					}
				}
			}
		# /
	}
  # /
  # --------------- GENE T2 Situation
	situation_event = { # Gene 2A - 10% - Altered Steps - Startup
		id = tec_gene_path.20010
		title = "tec_gene_path.20010.name"
		# Descs
			desc = {	# Regular
				text = "tec_gene_path.20010.desc.regular"
				trigger = {
					exists = owner
					owner = {
						is_gestalt = no
					}
				}
			}
			desc = {	# Hive
				text = "tec_gene_path.20010.desc.hive"
				trigger = {
					exists = owner
					owner = {
						is_hive_empire = yes
					}
				}
			}
			desc = {	# Fallback
				text = "tec_gene_path.20010.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			# Regular
			option = {
				name = tec_gene_path.20010.continue.regular
				custom_tooltip = tec_gene_path.20010.continue.regular.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
			}
			# Hive
			option = {
				name = tec_gene_path.20010.continue.hive
				custom_tooltip = tec_gene_path.20010.continue.hive.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_hive_empire = yes
						}
					}
				}
			}
		# /
	}
	situation_event = { # Gene 2A - 20% - Our Genome, Deciphered - Startup
		id = tec_gene_path.20020
		title = "tec_gene_path.20020.name"
		# Descs
			desc = {	# Regular
				text = "tec_gene_path.20020.desc.regular"
				trigger = {
					exists = owner
					owner = {
						is_gestalt = no
					}
				}
			}
			desc = {	# Hive
				text = "tec_gene_path.20020.desc.hive"
				trigger = {
					exists = owner
					owner = {
						is_hive_empire = yes
					}
				}
			}
			desc = {	# Fallback
				text = "tec_gene_path.20020.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			# Regular
			option = {
				name = tec_gene_path.20020.continue.regular
				custom_tooltip = tec_gene_path.20020.continue.regular.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
			}
			# Hive
			option = {
				name = tec_gene_path.20020.continue.hive
				custom_tooltip = tec_gene_path.20020.continue.hive.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_hive_empire = yes
						}
					}
				}
			}
		# /
	}
	situation_event = { # Gene 2A - 30% - The Seed Of Perfection - Starts the deployment of the gene perfected trait t1
		id = tec_gene_path.20030
		title = "tec_gene_path.20030.name"
		# Descs
			desc = {	# Regular
				text = "tec_gene_path.20030.desc.regular"
				trigger = {
					exists = owner
					owner = {
						is_gestalt = no
					}
				}
			}
			desc = {	# Hive
				text = "tec_gene_path.20030.desc.hive"
				trigger = {
					exists = owner
					owner = {
						is_hive_empire = yes
					}
				}
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			# Regular
			option = {
				name = tec_gene_path.20030.continue.regular
				custom_tooltip = tec_gene_path.20030.continue.regular.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
			}
			# Hive
			option = {
				name = tec_gene_path.20030.continue.hive
				custom_tooltip = tec_gene_path.20030.continue.hive.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_hive_empire = yes
						}
					}
				}
			}
		# /
	}
	situation_event = { # Gene 2A - 50% - Divided Inheritance  - Pick subpaths
		id = tec_gene_path.20050
		title = "tec_gene_path.20050.name"
		# Descs
			desc = {	# Regular
				text = "tec_gene_path.20050.desc.regular"
				trigger = {
					exists = owner
					owner = {
						is_gestalt = no
					}
				}
			}
			desc = {	# Fallback
				text = "tec_gene_path.20050.desc.regular"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			# Regular
			option = {
				name = tec_gene_path.20050.demogenetics.regular
				custom_tooltip = tec_gene_path.20050.demogenetics.regular.tooltip
				icon = {
					icon = GFX_situation_approach_pop
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_gene_path_demogenetics
					}
					set_situation_flag = tec_gene_path_demogenetics
					situation_event = {
						id = tec_gene_path.20051
					}
				}
			}
			option = {
				name = tec_gene_path.20050.focusgenetics.regular
				custom_tooltip = tec_gene_path.20050.demogenetics.regular.tooltip
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_gene_path_focusgenetics
					}
					set_situation_flag = tec_gene_path_focusgenetics
					situation_event = {
						id = tec_gene_path.20051
					}
				}
			}
		# /
	}
	situation_event = { # Gene 2A - 50% - Divided Inheritance - Confirm subpaths
		id = tec_gene_path.20051
		title = "tec_gene_path.20051.name"
		# Descs
			# Regular
			desc = {
				text = "tec_gene_path.20051.desc.demogenetics.regular"
				trigger = {
					exists = owner
					owner = {
						is_gestalt = no
					}
					has_situation_flag = tec_gene_path_demogenetics
				}
			}
			desc = {	# Fallback
				text = "tec_gene_path.20051.desc.focusgenetics.regular"
				trigger = {
					always = yes
					has_situation_flag = tec_gene_path_focusgenetics
				}
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			# Regular
			option = {
				name = tec_gene_path.20051.confirm.demogenetics.regular
				custom_tooltip = tec_gene_path.20051.confirm.demogenetics.regular.tooltip
				icon = {
					icon = GFX_situation_approach_pop
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
						has_situation_flag = tec_gene_path_demogenetics
					}
				}
			}
			option = {
				name = tec_gene_path.20051.confirm.focusgenetics.regular
				custom_tooltip = tec_gene_path.20051.confirm.focusgenetics.regular.tooltip
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
						has_situation_flag = tec_gene_path_focusgenetics
					}
				}
			}
			option = {
				name = tec_gene_path.20051.reselect.regular
				custom_tooltip = tec_gene_path.20051.reselect.regular.tooltip
				icon = {
					icon = GFX_situation_approach_shrug
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
				hidden_effect = {
					owner = {
						remove_country_flag = tec_gene_path_demogenetics
						remove_country_flag = tec_gene_path_focusgenetics
					}
					remove_situation_flag = tec_gene_path_demogenetics
					remove_situation_flag = tec_gene_path_focusgenetics
					situation_event = {
						id = tec_gene_path.20050
					}
				}
			}
		# /
	}

	situation_event = { # Gene 2A - 50% - Collective Legacy - Pick subpaths hive
		id = tec_gene_path.20150
		title = "tec_gene_path.20150.name"
		# Descs
			desc = {
				text = "tec_gene_path.20150.desc.hive"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_gene_path.20150.focusgenetics.hive
				custom_tooltip = tec_gene_path.20150.focusgenetics.hive.tooltip
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_gene_path_focusgenetics
					}
					set_situation_flag = tec_gene_path_focusgenetics
					situation_event = {
						id = tec_gene_path.20151
					}
				}
			}
			option = {
				name = tec_gene_path.20150.hivegenetics.hive
				custom_tooltip = tec_gene_path.20150.hivegenetics.hive.tooltip
				icon = {
					icon = GFX_situation_approach_pop
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				allow = {
					custom_tooltip = tec_loc_feature_not_ready
					hidden_trigger = {
						always = no
					}
				}
				hidden_effect = {
					owner = {
						set_country_flag = tec_gene_path_hivegenetics
					}
					set_situation_flag = tec_gene_path_hivegenetics
					situation_event = {
						id = tec_gene_path.20151
					}
				}
			}
		# /
	}
	situation_event = { # Gene 2A - 50% - Collective Legacy - Confirm subpaths hive
		id = tec_gene_path.20151
		title = "tec_gene_path.20151.name"
		# Descs
			desc = {
				text = "tec_gene_path.20151.desc.focusgenetics.hive"
				trigger = {
					has_situation_flag = tec_gene_path_focusgenetics
				}
			}
			desc = {
				text = "tec_gene_path.20151.desc.hivegenetics.hive"
				trigger = {
					has_situation_flag = tec_gene_path_hivegenetics
				}
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_gene_path.20151.confirm.focusgenetics.hive
				custom_tooltip = tec_gene_path.20151.confirm.focusgenetics.hive.tooltip
				icon = {
					icon = GFX_situation_approach_research
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						has_situation_flag = tec_gene_path_focusgenetics
					}
				}
			}
			option = {
				name = tec_gene_path.20151.confirm.hivegenetics.hive
				custom_tooltip = tec_gene_path.20151.confirm.hivegenetics.hive.tooltip
				icon = {
					icon = GFX_situation_approach_pop
					icon_background = GFX_situation_approach_bg_tec_orange
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						has_situation_flag = tec_gene_path_hivegenetics
					}
				}
			}
			option = {
				name = tec_gene_path.20151.reselect.hive
				custom_tooltip = tec_gene_path.20151.reselect.hive.tooltip
				icon = {
					icon = GFX_situation_approach_shrug
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				hidden_effect = {
					owner = {
						remove_country_flag = tec_gene_path_focusgenetics
						remove_country_flag = tec_gene_path_hivegenetics
					}
					remove_situation_flag = tec_gene_path_focusgenetics
					remove_situation_flag = tec_gene_path_hivegenetics
					situation_event = {
						id = tec_gene_path.20150
					}
				}
			}
		# /
	}

	# Special interactions
	situation_event = { # Gene 2A - 75% - Special empire interactions sorter
		id = tec_gene_path.20075
		hide_window = yes

		is_triggered_only = yes

		trigger = {
			exists = owner
			owner = {
				OR = {
					has_origin = origin_necrophage
					has_civic = civic_tec_origin_elders
					#has_origin = origin_clone_army
				}
			}
		}

		immediate = {	# TODO ASCENSION
			#if = {
			#	limit = {
			#		exists = owner
			#		owner = {
			#			has_origin = origin_necrophage
			#		}
			#	}
			#	situation_event = {
			#		id = tec_gene_path.20175
			#	}
			#}
			#else_if = {
			#	limit = {
			#		exists = owner
			#		owner = {
			#			has_civic = civic_tec_origin_elders
			#		}
			#	}
			#	situation_event = {
			#		id = tec_gene_path.20275
			#	}
			#}
			#else_if = {
			#	limit = {
			#		exists = owner
			#		owner = {
			#			has_origin = origin_clone_army
			#		}
			#	}
			#	situation_event = {
			#		id = tec_gene_path.20375
			#	}
			#}
		}
	}

	# Recombination teaser
	situation_event = { # Gene 2A - 90% - Room for Improvement - Recombination teaser
		id = tec_gene_path.20090
		title = "tec_gene_path.20090.name"
		# Descs
			desc = {	# Regular
				text = "tec_gene_path.20090.desc.regular"
				trigger = {
					exists = owner
					owner = {
						is_gestalt = no
					}
				}
			}
			desc = {	# Hive
				text = "tec_gene_path.20090.desc.hive"
				trigger = {
					exists = owner
					owner = {
						is_gestalt = yes
					}
				}
			}
			# Fallback
			desc = "tec_gene_path.20090.desc.regular"
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_evolution_mastery
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
		 # Regular
			option = {
				name = tec_gene_path.20090.output.regular
				custom_tooltip = tec_gene_path.20090.output.regular.tooltip
				icon = {
					icon = GFX_situation_approach_balance_sheet
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombinator_output
					owner = {
						set_country_flag = tec_gene_recombinator_output
					}
				}
			}
			option = {
				name = tec_gene_path.20090.genemod.regular
				custom_tooltip = tec_gene_path.20090.genemod.regular.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombinator_genemod
					owner = {
						set_country_flag = tec_gene_recombinator_genemod
					}
				}
			}
			option = {
				name = tec_gene_path.20090.growth.regular
				custom_tooltip = tec_gene_path.20090.growth.regular.tooltip
				icon = {
					icon = GFX_situation_approach_pop
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_gestalt = no
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombinator_growth
					owner = {
						set_country_flag = tec_gene_recombinator_growth
					}
				}
			}
		 # /
		 # Hive
			option = {
				name = tec_gene_path.20090.output.hive
				custom_tooltip = tec_gene_path.20090.output.hive.tooltip
				icon = {
					icon = GFX_situation_approach_balance_sheet
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_hive_empire = yes
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombinator_output
					owner = {
						set_country_flag = tec_gene_recombinator_output
					}
				}
			}
			option = {
				name = tec_gene_path.20090.genemod.hive
				custom_tooltip = tec_gene_path.20090.growth.hive.tooltip
				icon = {
					icon = GFX_situation_approach_genetics
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_hive_empire = yes
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombinator_genemod
					owner = {
						set_country_flag = tec_gene_recombinator_genemod
					}
				}
			}
			option = {
				name = tec_gene_path.20090.growth.hive
				custom_tooltip = tec_gene_path.20090.growth.hive.tooltip
				icon = {
					icon = GFX_situation_approach_pop
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
				trigger = {
					hidden_trigger = {
						exists = owner
						owner = {
							is_hive_empire = yes
						}
					}
				}
				hidden_effect = {
					set_situation_flag = tec_gene_recombinator_growth
					owner = {
						set_country_flag = tec_gene_recombinator_growth
					}
				}
			}
		 # /
		# /
	}

	# Halfway empire situation events
	#situation_event = { # Gene 2A - 75% - A Cure For Undeath (Necrophage)
	#	id = tec_gene_path.20175

	#situation_event = { # Gene 2A - 75% - Past Versus Future (Elder Guidance)
	#	id = tec_gene_path.20275

	#situation_event = { # Gene 2A - 75% - Copy Of No Copy (clone army)
	#	id = tec_gene_path.20375

	# Genetic editing of the population - situation on_monthly and event
	situation_event = { # TODO ASCENSION - Mirror cyberization
		id = tec_gene_path.201
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			always = no
		}

		immediate = {
			owner = {
				# If the genetic species doesn't exist, creates it

				# Modifies a random amount of pops
				
			}
		}
	}
  # /
  # --------------- GENE T2 Finish
	country_event = { # T2A Situation finished
		id = tec_gene_path.205
		title = "tec_gene_path.205.name"
		# Descs
			desc = {
				text = "tec_gene_path.205.desc.regular"
				trigger = {
					is_gestalt = no
				}
			}
			desc = {
				text = "tec_gene_path.205.desc.hive"
				trigger = {
					is_hive_empire = yes
				}
			}
		# /
		picture = GFX_evt_tec_orange_strings
		show_sound = event_evolution_mastery
		trackable = yes

		is_triggered_only = yes

		after = {
			hidden_effect = {
				# Announcement
				if = {
					limit = {	# Prevents FE and alike from triggering the announce
						NOT = {
							has_country_flag = tec_advanced_ascension
						}
					}
					every_country = {
						limit = {
							is_ai = no
							NOR = {
								is_same_value = root
								# TO DO policy for muting other empire things 
								has_country_flag = tec_mute_empire_announces
							}
							has_communications = root
							root = {
								is_primitive = no
							}
						}
						country_event = {
							id = tec_gene_path.20501
							days = 15
						}
					}
				}
			}
		}

		# Options
			option = {
				name = "tec_gene_path.205.ok.regular"
				custom_tooltip = "tec_gene_path.205.ok.regular.tooltip"
				hidden_effect = {
					# Path finished
					set_country_flag = tec_gene_path_finished
					set_country_flag = tec_unlocked_genetic_recombination
					# Ascension effect things
					# On the situation
					# Alter species
						# Note: species_mod instead of species for changing your main species only
					tec_create_genetic_perfection_species_effect = yes
					# TO DO create specific leader ascension trait handler
					every_owned_leader = {
						add_leader_traits_after_modification = yes
						remove_leader_traits_after_modification = yes
					}
					every_pool_leader = {
						add_leader_traits_after_modification = yes
						remove_leader_traits_after_modification = yes
					}
					# Flags
					set_country_flag = tec_genetic_assimilation
					fire_on_action = { on_action = tec_ascension_situation_finished }
				}
			}
		# /
	}
	country_event = { # T2A Notification to other empires
		id = tec_gene_path.20501
		title = "tec_gene_path.20501.name"
		# Descs
			desc = {	# Regular
				text = "tec_gene_path.20501.desc"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_tec_orange_strings
		#show_sound = event_engineered_evolution

		is_triggered_only = yes
		
		# Options
			option = {
				name = "tec_gene_path.20501.interest"
				trigger = {
					is_homicidal = no
					tec_is_genetic_ascension_hater = no
				}
			}
			option = {
				name = "tec_gene_path.20501.disdain"
				trigger = {
					is_homicidal = no
					tec_is_genetic_ascension_rival = yes
				}
			}
			option = {
				name = "tec_gene_path.20501.hate"
				trigger = {
					is_homicidal = no
					tec_is_genetic_ascension_hater = yes
				}
			}
			option = {
				name = "tec_gene_path.20501.same_path"
				trigger = {
					is_homicidal = no
					has_ascension_perk = ap_tec_genetic_perfection
				}
			}

			option = {
				name = "tec_gene_path.20501.concern"
				trigger = {
					is_homicidal = no
					tec_is_genetic_ascension_hater = no
				}
			}
			option = {
				name = "tec_gene_path.20501.machine"
				trigger = {
					is_homicidal = no
					tec_is_genetic_ascension_hater = no
					OR = {
						is_machine_empire = yes
						is_synthetic_empire = yes
					}
					NOR = {
						has_ethic = ethic_gestalt_empathy
						has_civic = civic_machine_assimilator
						has_civic = civic_machine_servitor
					}
				}
			}
			option = {
				name = "tec_gene_path.20501.assimilator"
				trigger = {
					is_homicidal = no
					tec_is_genetic_ascension_hater = no
					OR = {
						has_authority = auth_tec_hive_cybernetic
						has_civic = civic_machine_assimilator
						has_civic = civic_machine_servitor
					}
				}
			}
			option = {
				name = "tec_gene_path.20501.homicidal.regular"
				trigger = {
					is_gestalt = no
					is_homicidal = yes
				}
			}
			option = {
				name = "tec_gene_path.20501.homicidal.hive"
				trigger = {
					is_hive_empire = yes
					is_homicidal = yes
				}
			}
			option = {
				name = "tec_gene_path.20501.homicidal.machine"
				trigger = {
					is_machine_empire = yes
					is_homicidal = yes
				}
			}
		# /
	}
  # /
 # /
 # Old events
	#situation_event = { # Gene 2A - 50% - Special empire interactions - split
	#	id = tec_gene_path.29050
		#hide_window = yes
		#is_triggered_only = yes
		#situation = this
		#
		#immediate = {
		#	if = {
		#		limit = {
		#			exists = owner
		#			owner = {
		#				has_origin = origin_necrophage
		#				has_trait = trait_necrophage
		#			}
		#		}
		#		situation_event = {
		#			id = tec_gene_path.29051
		#		}
		#	}
		#	else_if = {
		#		limit = {
		#			exists = owner
		#			owner = {
		#				has_origin = origin_syncretic_evolution
		#				has_valid_civic = civic_tec_origin_elders
		#			}
		#		}
		#		situation_event = {
		#			id = tec_gene_path.29052
		#		}
		#	}
		#	#if = { Removed for now
		#	#	limit = {
		#	#		exists = owner
		#	#		owner = {
		#	#			has_origin = origin_clone_army
		#	#		}
		#	#	}
		#	#	situation_event = {
		#	#		id = tec_gene_path.29053
		#	#	}
		#	#}
		#}
	#}
	#situation_event = { # Gene 2A - 50%A - Necrophages - Tell they will lose the mechanic
	#	id = tec_gene_path.29051
		#title = "tec_gene_path.29051.name"
		## Descs
		#	desc = {	# Regular
		#		text = "tec_gene_path.29051.desc"
		#		trigger = { always = yes }
		#	}
		## /
		#picture = GFX_evt_necrophage
		#is_triggered_only = yes
		#situation = this
		#location = target
		#
		#trigger = {
		#	owner = {
		#		has_origin = origin_necrophage
		#		has_trait = trait_necrophage
		#	}
		#}
		#
		#immediate = {
		#	hidden_effect = {
		#		set_situation_locked = yes
		#	}
		#}
		#after = {
		#	hidden_effect = {
		#		set_situation_locked = no
		#	}
		#}
		#
		## Options
		#	option = {
		#		name = tec_gene_path.29051.a
		#		custom_tooltip = tec_gene_path.29051.a.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_tec_genecrank
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_neutral
		#		}
		#		hidden_effect = {
		#			owner = {
		#				set_country_flag = tec_gene_necrophage_evolved
		#			}
		#		}
		#	}
		#	option = {
		#		name = tec_gene_path.29051.b
		#		custom_tooltip = tec_gene_path.29051.b.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_genetics
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_neutral
		#		}
		#		hidden_effect = {
		#			owner = {
		#				set_country_flag = tec_reduced_auto_assimilation
		#			}
		#		}
		#	}
		## /
	#}
	#situation_event = { # Gene 2A - 50%B - Elder guidance - Chose the species
	#	id = tec_gene_path.29052
		#title = "tec_gene_path.29052.name"
		## Descs
		#	desc = {	# Regular
		#		text = "tec_gene_path.29052.desc"
		#		trigger = { always = yes }
		#	}
		## /
		#picture = GFX_evt_alien_cavemen
		#is_triggered_only = yes
		#situation = this
		#location = target
		#
		#trigger = {
		#	owner = {
		#		has_origin = origin_syncretic_evolution
		#		has_valid_civic = civic_tec_origin_elders
		#	}
		#}
		#
		#immediate = {
		#	hidden_effect = {
		#		set_situation_locked = yes
		#		owner = {
		#			owner_main_species = {
		#				save_event_target_as = tec_elder_species
		#			}
		#			random_owned_species = {
		#				limit = {
		#					has_species_flag = syncretic_species@prev
		#					has_trait = trait_tec_se_subspecies
		#				}
		#				save_event_target_as = tec_illuminated_species
		#			}
		#		}
		#
		#	}
		#}
		#after = {
		#	hidden_effect = {
		#		set_situation_locked = no
		#	}
		#}
		#
		## Options
		#	option = {
		#		name = tec_gene_path.29052.a
		#		custom_tooltip = tec_gene_path.29052.a.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_tec_genecrank
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_neutral
		#		}
		#		hidden_effect = {
		#			owner = {
		#				set_country_flag = tec_gene_elder_cured
		#			}
		#		}
		#	}
		#	option = {
		#		name = tec_gene_path.29052.b
		#		custom_tooltip = tec_gene_path.29052.b.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_genetics
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_neutral
		#		}
		#		hidden_effect = {
		#			owner = {
		#				set_country_flag = tec_reduced_auto_assimilation
		#			}
		#		}
		#	}
		#	option = {
		#		name = tec_gene_path.29052.c
		#		custom_tooltip = tec_gene_path.29052.c.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_gift
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_neutral
		#		}
		#		trigger = {	# Only if a valid syncretic species exist
		#			owner = {
		#				any_owned_species = {
		#					has_species_flag = syncretic_species@prev
		#				}
		#			}
		#		}
		#		hidden_effect = {
		#			owner = {
		#				random_owned_species = {
		#					limit = {
		#						has_species_flag = syncretic_species@prev
		#					}
		#					save_event_target_as = tec_new_main_species
		#				}
		#				change_dominant_species = {
		#					species = event_target:tec_new_main_species
		#				}
		#			}
		#		}
		#	}
		## /
	#}
	# tec_gene_path.20054 - overtuned - temporarily removed
	#situation_event = { # Gene 2A - 50%C - Clone army - Get rid of the traits
	#	id = tec_gene_path.29053
		#title = "tec_gene_path.29053.name"
		## Descs
		#	desc = {	# Regular
		#		text = "tec_gene_path.29053.desc"
		#		trigger = { always = yes }
		#	}
		## /
		#picture = GFX_evt_clones
		#is_triggered_only = yes
		#situation = this
		#location = target
		#
		#trigger = {
		#	owner = {
		#		has_origin = origin_clone_army
		#	}
		#}
		#
		#immediate = {
		#	hidden_effect = {
		#		set_situation_locked = yes
		#	}
		#	owner = {
		#		owner_main_species = {
		#			save_event_target_as = tec_clonearmy_species
		#		}
		#	}
		#}
		#after = {
		#	hidden_effect = {
		#		set_situation_locked = no
		#	}
		#}
		#
		## Options
		#	option = {
		#		name = tec_gene_path.29053.a
		#		custom_tooltip = tec_gene_path.29053.a.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_tec_genecrank
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_neutral
		#		}
		#		allow = {
		#			always = no
		#		}
		#		hidden_effect = {
		#			owner = {
		#				set_country_flag = tec_gene_elder_cured
		#			}
		#		}
		#	}
		#	option = {
		#		name = tec_gene_path.29053.b
		#		custom_tooltip = tec_gene_path.29053.b.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_genetics
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_neutral
		#		}
		#		hidden_effect = {
		#			owner = {
		#				set_country_flag = tec_reduced_auto_assimilation
		#			}
		#		}
		#	}
		## /
	#}
	#situation_event = { # Gene 2A - 75% - Room for improvement - Trait improvement announcement
	#	id = tec_gene_path.29075
		#title = "tec_gene_path.29075.name"
		## Descs
		#	desc = {	# Regular
		#		text = "tec_gene_path.29075.desc"
		#		trigger = { always = yes }
		#	}
		## /
		#picture = GFX_evt_tec_orange_strings
		#is_triggered_only = yes
		#situation = this
		#location = target
		#
		#immediate = {
		#	hidden_effect = {
		#		set_situation_locked = yes
		#	}
		#}
		#after = {
		#	hidden_effect = {
		#		set_situation_locked = no
		#	}
		#}
		#
		## Options
		#	option = {
		#		name = tec_gene_path.29075.a
		#		custom_tooltip = tec_gene_path.29075.a.tooltip
		#		icon = {
		#			icon = GFX_situation_approach_genetics
		#			icon_background = GFX_situation_approach_bg_yellow
		#			text = tec_icon_text_outcome_good
		#		}
		#	}
		## /
	#}
  # /
  # --------------- GENE T2 Finish
  # /
 # /
# /


# Biological B Biogenic
# ------------------------------------------------------------ tec_biogenic_path.2xx +
namespace = tec_biogenic_path
 # --------------- BIOGENIC T2
  #  --------------- BIOGENIC T2 Pick
	#country_event = { # T2A picked - Apex Evolution
  # /
  #  --------------- BIOGENIC T2 Situation
	#situation_event = { # Biogenic 2A - 25% - Forced Change - Startup
	#situation_event = { # Biogenic 2A - 50% - Direct Mutatios - Startup
	#situation_event = { # Biogenic 2A - 75% - Genomic Overcharge - Startup
	# Random Situation Events
	# Good events

	# Bad events

  # /
  #  --------------- BIOGENIC T2 Finish
	#country_event = { # T2A Situation finished

	#country_event = { # T2A Notification to other empires
  # /
 # /
# /

# Cybernetic path
# ------------------------------------------------------------ tec_cybernetic_path.2xx +
namespace = tec_cybernetic_path
 # --------------- CYB T2
  # --------------- CYB T2 Pick
	country_event = { # Cybernetic T2 Picked - Cybernetic Revolution
		id = tec_cybernetic_path.200
		title = "tec_cybernetic_path.200.name"
		# Descs
			desc = {
				text = "tec_cybernetic_path.200.desc"
				trigger = {
					is_hive_empire = no
					is_machine_empire = no
				}
			}
			desc = {
				text = "tec_cybernetic_path.200.desc_hive"
				trigger = {
					is_hive_empire = yes
				}
			}
			desc = {
				text = "tec_cybernetic_path.200.desc_machine"
				trigger = {
					is_machine_empire = yes
				}
			}
		# /
		picture = GFX_evt_cybernetics
		show_sound = event_synthetic_evolution
		trackable = yes

		is_triggered_only = yes

		immediate = {
			save_event_target_as = tec_temp_country
			event_target:tec_temp_country = {
				start_situation = {
					type = situation_tec_cybernetic_path_t2
					target = event_target:tec_temp_country.capital_scope
					effect = {
						save_event_target_as = new_situation
					}
				}
			}
		}

		# Options
			option = {
				name = "tec_cybernetic_path.200.a"
				custom_tooltip = tec_cybernetic_path.200.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_green
					text = tec_icon_text_approach_slow
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_locked = no
						set_situation_approach = situation_approach_tec_cybernetic_path_t2_slow
					}
				}
			}
			option = {
				name = "tec_cybernetic_path.200.c"
				custom_tooltip = tec_cybernetic_path.200.c.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_red
					text = tec_icon_text_approach_fast
				}
				hidden_effect = {
					event_target:new_situation = {
						set_situation_locked = no
						set_situation_approach = situation_approach_tec_cybernetic_path_t2_fast
					}
				}
			}
		# /
	}
  # /
  # --------------- CYB T2 Situation
	situation_event = { # Cyb 2A - 25% - First batch of traits
		id = tec_cybernetic_path.20025
		title = "tec_cybernetic_path.20025.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.20025.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_cybernetics
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}
		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_cybernetic_path.20025.a
				custom_tooltip = tec_cybernetic_path.20025.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
			}
		# /
	}
	situation_event = { # Cyb 2A - 50% - 2nd batch of traits
		id = tec_cybernetic_path.20050
		title = "tec_cybernetic_path.20050.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.20050.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_cybernetics
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}
		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_cybernetic_path.20050.a
				custom_tooltip = tec_cybernetic_path.20050.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
			}
		# /
	}
	situation_event = { # Cyb 2A - 75% - Second batch of traits
		id = tec_cybernetic_path.20075
		title = "tec_cybernetic_path.20075.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.20075.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_cybernetics
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
			}
		}
		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_cybernetic_path.20075.a
				custom_tooltip = tec_cybernetic_path.20075.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_yellow
					text = tec_icon_text_outcome_good
				}
			}
		# /
	}
	# Random situation events
	# Positives
	situation_event = { # Good 1 2A - Improved autoevolution - Increases speed
		id = tec_cybernetic_path.20011
		title = "tec_cybernetic_path.20011.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.20011.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_society_research
		show_sound = event_laboratory_sound
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				owner = {
					# Check organic species
					owner_main_species = {
						save_event_target_as = tec_target_species
					}
					# Check planet
					random_owned_planet = {
						limit = {
							exists = this
							any_owned_species = {
								exists = this
								is_same_species = event_target:tec_target_species
							}
						}
						save_event_target_as = tec_target_planet
					}
				}
			}
		}
		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_cybernetic_path.20011.a
				custom_tooltip = tec_cybernetic_path.20011.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_green
					text = tec_icon_text_outcome_good
				}
				hidden_effect = {
					if = {
						limit = {
							situation_progress < 95
						}
						add_situation_progress = 5
					}
					set_timed_situation_flag = {
						flag = tec_situation_bonus_speed
						years = 1
					}
				}
			}
		# /
	}
	situation_event = { # Good 2 2A - 5 pops gain a permanent bonus
		id = tec_cybernetic_path.20012
		title = "tec_cybernetic_path.20012.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.20012.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_society_research
		show_sound = event_laboratory_sound
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				owner = {
					# Check organic species
					owner_main_species = {
						save_event_target_as = tec_target_species
					}
					# Check planet
					random_owned_planet = {
						limit = {
							exists = this
							any_owned_species = {
								exists = this
								is_same_species = event_target:tec_target_species
							}
						}
						save_event_target_as = tec_target_planet
					}
				}
			}
		}
		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_cybernetic_path.20012.a
				custom_tooltip = tec_cybernetic_path.20012.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_green
					text = tec_icon_text_outcome_good
				}
				hidden_effect = {
					if = {
						limit = {
							situation_progress < 89
						}
						add_situation_progress = 10
					}
					event_target:tec_target_planet = {
						while = {
							count = 5
							random_owned_pop = {
								limit = {
									exists = this
									is_same_species = event_target:tec_target_species
									NOT = {
										has_modifier = tec_cyb_good_pop
									}
								}
								add_modifier = {
									modifier = tec_cyb_good_pop
								}
							}
						}
					}
				}
			}
		# /
	}
	# Negatives
	situation_event = { # Bad 1 2A - Rebels automodifies themselves - add crime
		id = tec_cybernetic_path.20021
		title = "tec_cybernetic_path.20021.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.20021.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_emergency_workers
		show_sound = event_life_support_fail
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				owner = {
					# Check organic species
					owner_main_species = {
						save_event_target_as = tec_target_species
					}
					# Check planet
					random_owned_planet = {
						limit = {
							exists = this
							any_owned_species = {
								exists = this
								is_same_species = event_target:tec_target_species
							}
						}
						save_event_target_as = tec_target_planet
					}
				}
			}
		}
		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_cybernetic_path.20021.a
				custom_tooltip = tec_cybernetic_path.20021.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_red
					text = tec_icon_text_outcome_bad
				}
				hidden_effect = {
					if = {
						limit = {
							situation_progress > 5
						}
						add_situation_progress = -5
					}
					event_target:tec_target_planet = {
						add_modifier = {
							modifier = pm_tec_cyb_rebel_planet
							years = 2
						}
					}
				}
			}
		# /
	}
	situation_event = { # Bad 2 2A - Terrorist attack implants
		id = tec_cybernetic_path.20022
		title = "tec_cybernetic_path.20022.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.20022.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_scientific_experiments
		show_sound = event_vivisection
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				owner = {
					# Check organic species
					owner_main_species = {
						save_event_target_as = tec_target_species
					}
					# Check planet
					random_owned_planet = {
						limit = {
							exists = this
							any_owned_species = {
								exists = this
								is_same_species = event_target:tec_target_species
							}
						}
						save_event_target_as = tec_target_planet
					}
				}
			}
		}
		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		# Options
			option = {
				name = tec_cybernetic_path.20022.a
				custom_tooltip = tec_cybernetic_path.20022.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_red
					text = tec_icon_text_outcome_bad
				}
				hidden_effect = {
					if = {
						limit = {
							situation_progress > 10
						}
						add_situation_progress = -10
					}
					event_target:tec_target_planet = {
						add_modifier = {
							modifier = pm_tec_cyb_crime_planet
							years = 1
						}
					}
				}
			}
		# /
	}
  # /
  # --------------- CYB T2 Finish
	country_event = { # Situation finished
		id = tec_cybernetic_path.205
		title = "tec_cybernetic_path.205.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.205.desc"
				trigger = { always = yes }
			}
		# /

		picture = GFX_evt_cybernetics
		show_sound = event_synthetic_evolution
		is_triggered_only = yes

		# Options
			option = {
				name = tec_cybernetic_path.205.a
				custom_tooltip = tec_cybernetic_path.205.a.tooltip
				icon = {
					icon = GFX_situation_approach_tec_cybernetics
					icon_background = GFX_situation_approach_bg_tec_blue
					text = tec_icon_text_outcome_good
				}
				hidden_effect = {
					save_event_target_as = tec_temp_cybernetic_owner
					enable_special_project = {
						name = TEC_FINAL_ADVANCED_CYBERNETIC_PROJECT
						location = capital_scope
						owner = root
					}
				}
			}
		# /
	}
	country_event = {
		id = tec_cybernetic_path.310
		title = "tec_cybernetic_path.310.name"
		# Descs
			desc = {	# Regular
				text = "tec_cybernetic_path.310.desc"
				trigger = { always = yes }
			}
		# /
		picture = GFX_evt_cybernetics
		show_sound = event_the_flesh_is_weak
		trackable = yes

		is_triggered_only = yes

		# Options
			option = {
				name = "tec_cybernetic_path.310.a"
				custom_tooltip = "tec_cybernetic_path.310.a.tooltip"
				hidden_effect = {
					# Path finished
					set_country_flag = tec_cybernetic_t2_path_finished
					# Alter species
					tec_create_advanced_cybernetic_species_effect = yes
					# TO DO create specific leader ascension trait handler
					every_owned_leader = {
						add_leader_traits_after_modification = yes
						remove_leader_traits_after_modification = yes
					}
					every_pool_leader = {
						add_leader_traits_after_modification = yes
						remove_leader_traits_after_modification = yes
					}
					# Flags
					set_country_flag = tec_allow_t2_cybernetics
					set_country_flag = tec_cybernetic_t2_assimilation
					
					fire_on_action = { on_action = tec_ascension_situation_finished }
				}
			}
		# /
	}
  # /

  # --------------- CYB T2 Util
	# Checks species level of upgrade - tec_cybernetic_path.900xx
	country_event = {	# From = species / this = country - on_modification_complete
		id = tec_cybernetic_path.90001
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			from = {	# Only for cybernetic species
				OR = {
					tec_is_cybernetic_species = yes
					root = {
						has_country_flag = tec_test_cybernetic_traits_t3
					}
				}
			}
		}

		immediate = {
			if = {	# Exist species with overclock but modified hasn't inherited
				limit = {
					any_owned_species = {
						exists = this
						OR = {
							is_same_species = from
							is_exact_same_species = from
						}
						is_variable_set = tec_overclock_level
					}
					from = {
						NOT = {
							is_variable_set = tec_overclock_level
						}
					}
				}
				if = {	# Country SHOULD have it leveled, but contingency in case it does not
					limit = {
						NOT = {
							is_variable_set = tec_overclock_level_country
						}
					}
					# Picks random species with overclock
					random_owned_species = {
						weights = {
							base = 1
							modifier = {	# Lets get the higher level
								factor = tec_overclock_level
							}
						}
						limit = {
							exists = this
							is_variable_set = tec_overclock_level
						}
						save_event_target_as = tec_overclocked_species
					}
					set_variable = {
						which = tec_overclock_level_country
						value = event_target:tec_overclocked_species.tec_overclock_level
					}
					# And sets it to the species
					from = {
						set_variable = {
							which = tec_overclock_level
							value = root.tec_overclock_level_country
						}
					}
				}
				else = {
					from = {
						set_variable = {
							which = tec_overclock_level
							value = root.tec_overclock_level_country
						}
					}
				}
			}
			else_if = {	# Country has higher overclock than species
				limit = {
					from = {
						check_variable = {
							which = tec_overclock_level
							value < root.tec_overclock_level_country
						}
					}
				}
				from = {
					set_variable = {
						which = tec_overclock_level
						value = root.tec_overclock_level_country
					}
				}
			}
			else_if = {	# Species has higher overclock than country
				limit = {
					from = {
						check_variable = {
							which = tec_overclock_level
							value > root.tec_overclock_level_country
						}
					}
				}
				set_variable = {
					which = tec_overclock_level_country
					value = from.tec_overclock_level
				}
			}
			else_if = {	# Country has overclock but species not
				limit = {
					is_variable_set = tec_overclock_level_country
					from = {
						NOT = {
							is_variable_set = tec_overclock_level
						}
						OR = {
							tec_is_cybernetic_species = yes
							root = {
								has_country_flag = tec_test_cybernetic_traits_t3
							}
						}
					}
				}
				from = {
					set_variable = {
						which = tec_overclock_level
						value = root.tec_overclock_level_country
					}
				}
			}
			else_if = {	# Species has overclock but country has not
				limit = {
					NOT = {
						is_variable_set = tec_overclock_level_country
					}
					from = {
						is_variable_set = tec_overclock_level
					}
				}
				set_variable = {
					which = tec_overclock_level_country
					value = from.tec_overclock_level
				}
			}
			# test
			#effect = {
			#	owner_main_species = {
			#		set_variable = {
			#			which = tec_overclock_level
			#			value = 2
			#		}
			#	}
			#}

			#effect = {
			#	set_variable = {
			#		which = tec_overclock_level_country
			#		value = 2
			#	}
			#}
		}
	}

	country_event = {	# BACKUP
		id = tec_cybernetic_path.99101
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			from = {	# Only for cybernetic species
				OR = {
					tec_is_cybernetic_species = yes
					root = {
						has_country_flag = tec_test_cybernetic_traits_t3
					}
				}
			}
			if = {	# Exist species with overclock but modified doesn't inherited
				limit = {
					any_owned_species = {
						exists = this
						is_variable_set = tec_overclock_level
						OR = {
							is_same_species = from
							is_exact_same_species = from
						}
					}
				}
				from = {
					NOT = {
						is_variable_set = tec_overclock_level
					}
					OR = {
						tec_is_cybernetic_species = yes
						root = {
							has_country_flag = tec_test_cybernetic_traits_t3
						}
					}
				}
			}
			if = {	# Country has overclock but species not
				limit = {
					is_variable_set = tec_overclock_level_country
				}
				from = {
					NOT = {
						is_variable_set = tec_overclock_level
					}
					OR = {
						tec_is_cybernetic_species = yes
						root = {
							has_country_flag = tec_test_cybernetic_traits_t3
						}
					}
				}
			}
			if = {	# Country has exported overclock
				limit = {
					is_variable_set = tec_overclock_level_country
				}
				check_variable = {
					which = tec_overclock_level_country
					value > 0
				}
				from = {
					OR = {
						tec_is_cybernetic_species = yes
						root = {
							has_country_flag = tec_test_cybernetic_traits_t3
						}
					}
				}
			}
			else = {	# Species export overclock
				from = {
					if = {
						limit = {
							is_variable_set = tec_overclock_level
						}
						check_variable = {
							which = tec_overclock_level
							value > 0
						}
					}
				}
			}
		}

		immediate = {
			if = {	# Exist species with overclock but modified doesn't inherited
				limit = {
					any_owned_species = {
						exists = this
						OR = {
							is_same_species = from
							is_exact_same_species = from
						}
						is_variable_set = tec_overclock_level
					}
					from = {
						NOT = {
							is_variable_set = tec_overclock_level
						}
					}
				}
				# Country SHOULD have it leveled, but contingency in case it does not
				if = {
					limit = {
						NOT = {
							is_variable_set = tec_overclock_level_country
						}
					}
					# Picks random species with overclock
					random_owned_species = {
						limit = {
							exists = this
							is_variable_set = tec_overclock_level
						}
						save_event_target_as = tec_overclocked_species
					}
					set_variable = {
						which = tec_overclock_level_country
						value = event_target:tec_overclocked_species.tec_overclock_level
					}
					# And sets it to the species
					from = {
						set_variable = {
							which = tec_overclock_level
							value = root.tec_overclock_level_country
						}
					}
				}
				else = {
					from = {
						set_variable = {
							which = tec_overclock_level
							value = root.tec_overclock_level_country
						}
					}
				}
			}
			else_if = {	# Country has overclock but species not
				limit = {
					is_variable_set = tec_overclock_level_country
					from = {
						NOT = {
							is_variable_set = tec_overclock_level
						}
						OR = {
							tec_is_cybernetic_species = yes
							root = {
								has_country_flag = tec_test_cybernetic_traits_t3
							}
						}
					}
				}
				from = {
					set_variable = {
						which = tec_overclock_level
						value = root.tec_overclock_level_country
					}
				}
			}
			else_if = {	# Species has overclock but country has not
				limit = {
					NOT = {
						is_variable_set = tec_overclock_level_country
					}
					from = {
						is_variable_set = tec_overclock_level
					}
				}
				set_variable = {
					which = tec_overclock_level_country
					value = from.tec_overclock_level
				}
			}
			else_if = {	# Species has higher overclock than country
				limit = {
					from = {
						check_variable = {
							which = tec_overclock_level
							value > root.tec_overclock_level_country
						}
					}
				}
				set_variable = {
					which = tec_overclock_level_country
					value = from.tec_overclock_level
				}
			}
			else_if = {	# Country has higher overclock than species
				limit = {
					from = {
						check_variable = {
							which = tec_overclock_level
							value < root.tec_overclock_level_country
						}
					}
				}
				from = {
					set_variable = {
						which = from.tec_overclock_level
						value = root.tec_overclock_level_country
					}
				}
			}
			# test
			#effect = {
			#	owner_main_species = {
			#		set_variable = {
			#			which = tec_overclock_level
			#			value = 2
			#		}
			#	}
			#}

			#effect = {
			#	set_variable = {
			#		which = tec_overclock_level_country
			#		value = 5
			#	}
			#}
		}
	}

	country_event = {	# BACKUP V2
		id = tec_cybernetic_path.99201
		hide_window = yes
		is_triggered_only = yes

		trigger = {
			from = {	# Only for cybernetic species
				OR = {
					tec_is_cybernetic_species = yes
					root = {
						has_country_flag = tec_test_cybernetic_traits_t3
					}
				}
			}
			if = {	# Exist species with overclock but modified doesn't inherited
				limit = {
					any_owned_species = {
						exists = this
						OR = {
							is_same_species = from
							is_exact_same_species = from
						}
						is_variable_set = tec_overclock_level
					}
				}
				from = {
					NOT = {
						is_variable_set = tec_overclock_level
					}
				}
			}
			if = {	# Country has higher overclock than species
				limit = {
					is_variable_set = tec_overclock_level_country
				}
				from = {
					check_variable = {
						which = tec_overclock_level
						value < root.tec_overclock_level_country
					}
				}
			}
			if = {	# Species has higher overclock than country
				limit = {
					from = {
						is_variable_set = tec_overclock_level
					}
				}
				check_variable = {
					which = tec_overclock_level
					value > root.tec_overclock_level_country
				}
			}
			if = {	# Country has overclock but species has not
				limit = {
					is_variable_set = tec_overclock_level_country
				}
				from = {
					NOT = {
						is_variable_set = tec_overclock_level
					}
				}
			}
			if = {	# Species has overclock but country has not
				limit = {
					NOT = {
						is_variable_set = tec_overclock_level_country
					}
				}
				from = {
					is_variable_set = tec_overclock_level
				}
			}
		}

		immediate = {
			if = {	# Exist species with overclock but modified doesn't inherited
				limit = {
					any_owned_species = {
						exists = this
						OR = {
							is_same_species = from
							is_exact_same_species = from
						}
						is_variable_set = tec_overclock_level
					}
					from = {
						NOT = {
							is_variable_set = tec_overclock_level
						}
					}
				}
				if = {	# Country SHOULD have it leveled, but contingency in case it does not
					limit = {
						NOT = {
							is_variable_set = tec_overclock_level_country
						}
					}
					# Picks random species with overclock
					random_owned_species = {
						weights = {
							base = 1
							modifier = {	# Lets get the higher level
								factor = tec_overclock_level
							}
						}
						limit = {
							exists = this
							is_variable_set = tec_overclock_level
						}
						save_event_target_as = tec_overclocked_species
					}
					set_variable = {
						which = tec_overclock_level_country
						value = event_target:tec_overclocked_species.tec_overclock_level
					}
					# And sets it to the species
					from = {
						set_variable = {
							which = tec_overclock_level
							value = root.tec_overclock_level_country
						}
					}
				}
				else = {
					from = {
						set_variable = {
							which = tec_overclock_level
							value = root.tec_overclock_level_country
						}
					}
				}
			}
			else_if = {	# Country has higher overclock than species
				limit = {
					from = {
						check_variable = {
							which = tec_overclock_level
							value < root.tec_overclock_level_country
						}
					}
				}
				from = {
					set_variable = {
						which = from.tec_overclock_level
						value = root.tec_overclock_level_country
					}
				}
			}
			else_if = {	# Species has higher overclock than country
				limit = {
					from = {
						check_variable = {
							which = tec_overclock_level
							value > root.tec_overclock_level_country
						}
					}
				}
				set_variable = {
					which = tec_overclock_level_country
					value = from.tec_overclock_level
				}
			}
			else_if = {	# Country has overclock but species not
				limit = {
					is_variable_set = tec_overclock_level_country
					from = {
						NOT = {
							is_variable_set = tec_overclock_level
						}
						OR = {
							tec_is_cybernetic_species = yes
							root = {
								has_country_flag = tec_test_cybernetic_traits_t3
							}
						}
					}
				}
				from = {
					set_variable = {
						which = tec_overclock_level
						value = root.tec_overclock_level_country
					}
				}
			}
			else_if = {	# Species has overclock but country has not
				limit = {
					NOT = {
						is_variable_set = tec_overclock_level_country
					}
					from = {
						is_variable_set = tec_overclock_level
					}
				}
				set_variable = {
					which = tec_overclock_level_country
					value = from.tec_overclock_level
				}
			}
			# test
			#effect = {
			#	owner_main_species = {
			#		set_variable = {
			#			which = tec_overclock_level
			#			value = 2
			#		}
			#	}
			#}

			#effect = {
			#	set_variable = {
			#		which = tec_overclock_level_country
			#		value = 5
			#	}
			#}
		}
	}
  # /
 # /
# /

# Bioware Path
# ------------------------------------------------------------ tec_synth_path.2xx +
namespace = tec_bioware_path
 # --------------- BIOWARE T2
  # --------------- BIOWARE T2 Pick

  # /
  # --------------- BIOWARE T2 Situation

  # /
  # --------------- BIOWARE T2 Finish

  # /
 # /
# /

# Synth path
# ------------------------------------------------------------ tec_synth_path.2xx +
namespace = tec_synth_path
 # --------------- SYNTH T2 SUBLIMATION
  # --------------- SYNTH T2 SUBLIMATION PICKED
	country_event = { # T2 picked
		id = tec_synth_path.200
		title = "tec_synth_path.200.name"
		desc = "tec_synth_path.200.desc"
		picture = GFX_evt_machine_sapience
		show_sound = event_synthetic_evolution
		trackable = yes

		is_triggered_only = yes

		option = {
			name = "tec_synth_path.200.a"
		}
	}
  # /
  # --------------- SYNTH T2 SUBLIMATION SITUATION

  # /
  # --------------- SYNTH T2 SUBLIMATION FINISH
	# 305
	country_event = { # T2 picked
		id = tec_synth_path.205
		title = "tec_synth_path.205.name"
		desc = "tec_synth_path.205.desc"
		picture = GFX_evt_machine_sapience
		show_sound = event_synthetic_evolution
		trackable = yes

		is_triggered_only = yes

		immediate = {
			hidden_effect = {
				set_country_flag = tec_synthetics_t2_completed
			}
		}
		option = {
			name = "tec_synth_path.205.a"
		}
	}
  # /
 # /
 # --------------- SYNTH T2 SUBLIMATION POSTMECHANIC

 # /
 # --------------- SYNTH T2 NANITES
  # --------------- SYNTH T2 NANITES PICKED

  # /
  # --------------- SYNTH T2 NANITES SITUATION

  # /
  # --------------- SYNTH T2 NANITES FINISH

  # /
 # /
 # --------------- SYNTH T2 NANITES POSTMECHANIC

 # /
# /


# Digital path
# ------------------------------------------------------------ tec_digital_path.2xx +
namespace = tec_digital_path
 # --------------- DIGITAL T2
  # --------------- DIGITAL T2 Pick

  # /
  # --------------- DIGITAL T2 Situation

  # /
  # --------------- DIGITAL T2 Finish

  # /
 # /
# /


# Psionic path A
# ------------------------------------------------------------ tec_psionic_path.2xx +
namespace = tec_psionic_path
 # --------------- PSIONIC T2
  # ---------- PSIONIC T2 pick
	country_event = {
		id = tec_psionic_path.200
		title = "tec_psionic_path.200.name"
		desc = "tec_psionic_path.200.desc"
		picture = GFX_evt_zro_2
		show_sound = event_mystic_reveal_light

		is_triggered_only = yes
		option = {
			name = "tec_psionic_path.200.a"
			custom_tooltip = tec_psionic_path.200.a.tooltip
			hidden_effect = {
				save_event_target_as = tec_target_country
				event_target:tec_target_country = {
					start_situation = {
						type = situation_tec_psionic_path_t2
						target = event_target:tec_target_country.capital_scope
						effect = {
							save_event_target_as = new_situation
						}
					}
				}
			}
		}
		
		after = {
			hidden_effect = {
				event_target:new_situation = {
					set_situation_locked = no
					set_situation_approach = situation_approach_tec_psionic_path_t2_neutral
				}
			}
		}

	}
  # /
  # ---------- PSIONIC T2 Situation
	situation_event = { # PSI T2 - 10% - Through the Veil
		id = tec_psionic_path.20010
		title = "tec_psionic_path.20010.name"
		desc = "tec_psionic_path.20010.desc"

		picture = GFX_evt_shroudwalker_enclave
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				owner_main_species = {
					save_event_target_as = tec_target_species
				}
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		option = {
			name = tec_psionic_path.15025.a
			custom_tooltip = tec_psionic_path.15025.a.tooltip
			icon = {
				icon = GFX_situation_approach_tec_mind
				icon_background = GFX_situation_approach_bg_green
				text = tec_icon_text_outcome_neutral
			}
		}
	}

	situation_event = { # PSI T2 - 20% - A Strange Singularity
		id = tec_psionic_path.20020
		title = "tec_psionic_path.20020.name"
		desc = "tec_psionic_path.20020.desc"

		picture = GFX_evt_zro_4
		is_triggered_only = yes
		situation = this
		show_sound = event_the_great_awakening
		location = event_target:tec_recently_ascended_planet

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				set_situation_flag = situation_tec_psionic_path_t2_unlock_approachs
				owner_main_species = {
					save_event_target_as = tec_target_species
				}
				if = {
					limit = {
						owner = {
							capital_scope = {
								num_pops > 10
								any_owned_species = {
									exists = this
									tec_is_total_psionic_species = yes
								}
							}
						}
					}
					owner = {
						capital_scope = {
							save_event_target_as = tec_psionic_target_planet
							random_owned_species = {
								limit = {
									exists = this
									tec_is_total_psionic_species = yes
								}
								save_event_target_as = tec_target_psionic_species
							}
							random_owned_pop = {
								limit = {
									exists = this
									species = {
										is_same_value = event_target:tec_target_psionic_species
									}
								}
								kill_pop = yes
							}
							add_deposit = d_tec_psionic_ascension_zone_1
							save_event_target_as = tec_recently_ascended_planet
							owner = {
								start_situation = {
									type = situation_tec_psionic_planet_ascension
									target = prev
									effect = {
										set_situation_flag = situation_tec_psionic_first_ascension_planet
									}
								}
							}
						}
					}
				}
				else = {
					owner = {
						random_owned_planet = {
							limit = {
								exists = this
								# lets avoid colonies being ravaged
								num_pops > 10
								any_owned_species = {
									exists = this
									tec_is_total_psionic_species = yes
								}
							}
							save_event_target_as = tec_psionic_target_planet
							random_owned_species = {
								limit = {
									exists = this
									tec_is_total_psionic_species = yes
								}
								save_event_target_as = tec_target_psionic_species
							}
							random_owned_pop = {
								limit = {
									exists = this
									species = {
										is_same_value = event_target:tec_target_psionic_species
									}
								}
								kill_pop = yes
							}
							add_deposit = d_tec_psionic_ascension_zone_1
							save_event_target_as = tec_recently_ascended_planet
							owner = {
								start_situation = {
									type = situation_tec_psionic_planet_ascension
									target = prev
									effect = {
										set_situation_flag = situation_tec_psionic_first_ascension_planet
									}
								}
							}
						}
					}
				}
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		option = {
			name = tec_psionic_path.20020.a
			custom_tooltip = tec_psionic_path.20020.a.tooltip
			icon = {
				icon = GFX_situation_approach_tec_mind
				icon_background = GFX_situation_approach_bg_green
				text = set_situation_approach_icon_text
			}
			set_situation_approach = situation_approach_tec_psionic_path_t2_slow
		}

		option = {
			name = tec_psionic_path.20020.b
			custom_tooltip = tec_psionic_path.20020.b.tooltip
			icon = {
				icon = GFX_situation_approach_tec_mind
				icon_background = GFX_situation_approach_bg_red
				text = set_situation_approach_icon_text
			}
			set_situation_approach = situation_approach_tec_psionic_path_t2_fast
		}
	}

	situation_event = { # PSI T2 - 60% - Veiled Secrets
		id = tec_psionic_path.20060
		title = "tec_psionic_path.20060.name"
		desc = "tec_psionic_path.20060.desc"

		picture = GFX_evt_zro_2
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				owner_main_species = {
					save_event_target_as = tec_target_species
				}
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		option = {
			name = tec_psionic_path.20060.a
			custom_tooltip = tec_psionic_path.20060.a.tooltip
			icon = {
				icon = GFX_situation_approach_tec_mind
				icon_background = GFX_situation_approach_bg_green
				text = tec_icon_text_outcome_neutral
			}
		}
	}

	situation_event = { # PSI T2 - 80% - That which remains
		id = tec_psionic_path.20080
		title = "tec_psionic_path.20080.name"
		desc = {
			text = tec_psionic_path.20080.desc.hastech
			trigger = {
				owner = {
					OR = {
						has_tech_option = tech_mine_zro
						has_technology = tech_mine_zro
					}
				}
			}
		}
		desc = {
			text = tec_psionic_path.20080.desc.notech
			trigger = {
				owner = {
					NOR = {
						has_tech_option = tech_mine_zro
						has_technology = tech_mine_zro
					}
				}
			}
		}
		picture = GFX_evt_zro_2
		is_triggered_only = yes
		situation = this
		location = target

		immediate = {
			hidden_effect = {
				set_situation_locked = yes
				owner_main_species = {
					save_event_target_as = tec_target_species
				}
			}
		}

		after = {
			hidden_effect = {
				set_situation_locked = no
			}
		}

		option = {
			name = tec_psionic_path.20080.a
			custom_tooltip = tec_psionic_path.20080.a.tooltip
			icon = {
				icon = GFX_situation_approach_tec_mind
				icon_background = GFX_situation_approach_bg_green
				text = tec_icon_text_outcome_good
			}

			trigger = {
				hidden_trigger = {
					owner = {
						NOT = {
							has_technology = tech_mine_zro
							has_tech_option = tech_mine_zro
						}
					}
				}
			}

			owner = {
				give_technology = {
					tech = tech_mine_zro
				}
			}
			add_situation_progress = -50
		}

		option = {
			name = tec_psionic_path.20080.b
			custom_tooltip = tec_psionic_path.20080.a.tooltip
			icon = {
				icon = GFX_situation_approach_tec_mind
				icon_background = GFX_situation_approach_bg_green
				text = tec_icon_text_outcome_good
			}

			trigger = {
				hidden_trigger = {
					owner = {
						NOR = {
							has_technology = tech_mine_zro
							has_tech_option = tech_mine_zro
						}
					}
				}
			}
			owner = {
				add_tech_option_or_research_effect = {
					TECH = tech_mine_zro
					PROGRESS = 0.25
					CATEGORY = society_research
				}
			}
			add_situation_progress = -20
		}

		option = {
			name = tec_psionic_path.20080.c
			custom_tooltip = tec_psionic_path.20080.a.tooltip
			icon = {
				icon = GFX_situation_approach_tec_mind
				icon_background = GFX_situation_approach_bg_green
				text = tec_icon_text_outcome_neutral
			}
		}
	}
  # /
  # ---------- PSIONIC T2 Finish
	# Situation finished
	country_event = { # You are told the secrets of ascension
		id = tec_psionic_path.205
		title = "tec_psionic_path.205.name"
		desc = "tec_psionic_path.205.desc"
		picture = GFX_evt_surreal_visions
		show_sound = event_psionic

		is_triggered_only = yes

		immediate = {
			hidden_effect = {
				set_country_flag = tec_psionics_t2_completed
				set_country_flag = tec_psionics_t2_deluxe_shroud
				set_country_flag = tec_psionics_t2_extra_leader_traits
				fire_on_action = { on_action = tec_ascension_situation_finished }
			}
		}
		option = {
			name = "tec_psionic_path.205.a"
			custom_tooltip = "tec_psionic_path.205.a.tooltip"
		}
	}
  # /
 # /
# /


# Psychic
# ------------------------------------------------------------ tec_psychic_path.2xx +
namespace = tec_psychic_path
 # --------------- PSYCHIC T2
  # --------------- PSYCHIC T2 Pick

  # /
  # --------------- PSYCHIC T2 Situation

  # /
  # --------------- PSYCHIC T2 Finish

  # /
 # /
# /


# Ethereal
# ------------------------------------------------------------ tec_ethereal_path.2xx +
namespace = tec_ethereal_path
# /