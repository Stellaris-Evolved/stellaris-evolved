# --------------------------------------------------------------
#		These events control origins
#		Some sub-origin events may be created
#		Stellaris Evolved
# --------------------------------------------------------------


namespace = tec_origin

#MASTER EVENT
event = {
	id = tec_origin.1
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	
	trigger = { has_global_flag = stellarisevolved }
	
	immediate = {
		# Origins and fixes
		every_playable_country = {
			if = {
				limit = {
					has_global_flag = stellarisevolved
				}
				# Mod Origins
					#Exocolonist	# 100
					if = {
						limit = {
							is_ai = no
							has_origin = origin_tec_exocolonist
						}
						country_event = {
							id = tec_origin.110
						}
					}
					if = {
						limit = {
							is_ai = yes
							has_origin = origin_tec_exocolonist
						}
						country_event = {
							id = tec_origin.111
						}
					}
					#Bioservant		# 200
					if = {
						limit = {
							has_origin = origin_tec_bioservant
						}
						country_event = {
							id = tec_origin.210
						}
					}
					#Machinesurvivors		# 300/3xxx
					#	country_event = {
					#		id = tec_origin.310
					#	}
					#Xenosurvivors			# 400/4xxx
					#	country_event = {
					#		id = tec_origin.410
					#	}
					#Fratricide				# 500/5xxx
					#	country_event = {
					#		id = tec_origin.510
					#	}
					#Terraformgifted		# 600/6xxx
					#	country_event = {
					#		id = tec_origin.610
					#	}
					#Slave to the system	# 700/7xxx
					if = {
						limit = {
							has_origin = origin_tec_slavetothesystem
						}
						country_event = {
							id = tec_origin.710
						}
					}
					# Reborn in metal		# 800/8xxx
					if = {
						limit = {
							has_origin = origin_tec_robosapiens
						}
						country_event = {
							id = tec_origin.810
						}
					}
					# Clone-nation			# 900/9xxx
					if = {
						limit = {
							has_origin = origin_tec_clones
						}
						country_event = {
							id = tec_origin.910
						}
					}
					# Aquatic things		# 1000/10xxx
				# /
				# Vanilla rebalance events - tec_rebalance
					

					# Distributes ascension traits for fallen empires
					
					# Mechanist automation rebalance
					if = {
						limit = {
							tec_is_automated_empire = yes
						}
						country_event = {
							id = tec_rebalance.10050
						}
					}
					# Ringworld rebalance
					if = {
						limit = {
							has_origin = origin_shattered_ring
						}
						country_event = {
							id = tec_rebalance.10100
						}
					}
					#Prosperous Unification rebalance
					if = {
						limit = {
							has_origin = origin_default
						}
						country_event = {
							id = tec_rebalance.10210
						}
					}
					# Machine consolidation rebalance
					if = {
						limit = {
							has_origin = origin_machine
						}
						country_event = {
							id = tec_rebalance.10310
						}
					}
					# Shroudwalker
						# Managed by tech research, not gamestart!!!
					# Syncretic evolution
						#if = {
						#	limit = {
						#		has_origin = origin_syncretic_evolution
						#	}
						#	country_event = {
						#		id = tec_rebalance.10510
						#	}
						#}
					# Adjust gestalt ruler levels
					if = {	# Gestalt ruler starts with 2 extra levels
						limit = {
							has_ethic = ethic_gestalt_consciousness
						}
						ruler = {
							add_skill_without_trait_selection = 2
						}
					}
					
					# Machine organic traits identifier
					country_event = {	# checker for on_press_begin with 10021 too
						id = tec_rebalance.10020
					}
					# Special traits handler handler
					country_event = {
						id = tec_rebalance.10025
					}
					# Fixes aquatic species
					country_event = {
						id = tec_rebalance.160
					}
				# /
				# Others
					if = {
						limit = {
							tec_is_aiauth_empire = yes
						}
						country_event = {
							id = tec_aiauth.1
						}
					}
				# /
			}
		}
		# Galaxy generation
		# Distribution of new megas
			#	planet_event = {	#Ruined elysiums
			#		id = tec_galaxy.100
			#	}
		# /

		# Marauders tweaks
			#
		# /

		# Create hidden countries

		 # Shroud patrons
			create_country = {
				name = "NAME_EATER_OF_WORLDS"
				type = tec_eater
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"orange"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					set_country_flag = suppress_first_contact_comms
					save_global_event_target_as = tec_eow_country
				}
			}
			create_country = {
				name = "NAME_COMPOSER_OF_STRANDS"
				type = tec_composer
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"light_green"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					set_country_flag = suppress_first_contact_comms
					save_global_event_target_as = tec_cos_country
				}
			}
			create_country = {
				name = "NAME_INSTRUMENT_OF_DESIRE"
				type = tec_desire
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"pink"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					set_country_flag = suppress_first_contact_comms
					save_global_event_target_as = tec_iod_country
				}
			}
			create_country = {
				name = "NAME_WHISPERS_OF_THE_VOID"
				type = tec_whispers
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"indigo"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					set_country_flag = suppress_first_contact_comms
					save_global_event_target_as = tec_wov_country
				}
			}
			create_country = {
				name = "NAME_END_OF_THE_CYCLE"
				type = tec_cycle
				flag = {
					icon = {
						category = "special"
						file = "the_shroud.dds"
					}
					background= {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors={
						"black"
						"black"
						"null"
						"null"
					}
				}
				effect = {
					set_country_flag = suppress_first_contact_comms
					save_global_event_target_as = tec_eotc_country
				}
			}
		 # /
		# /
	}
}


# ------------------------
#	EXOCOLONIST - # 100
# Setup
country_event = {	# No ais
	id = tec_origin.110
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_origin = origin_tec_exocolonist
		NOT = {
			has_country_flag = exocolonist_origin
		}
	}

	immediate = {
		set_global_flag = stellarisevolved	# extra set to be sure it's active
		set_country_flag = exocolonist_origin
		hidden_effect = {
			# Check if secondary species exist
			random_owned_species = {
				limit = {
					NOT = {
						is_same_value = owner_main_species
					}
				}
				save_event_target_as = secondary_species
				root = {	# just in case
					create_saved_leader = {
						key = tec_secondary_species_leader
						class = envoy
						species = prev
					}
				}
			}

			# Changes country type, to prevent overkill
			if = {
				limit = {
					is_ai = yes
				}
				set_country_type = default_exocolonist_ai
			}
			else = {
				set_country_type = default_exocolonist
			}

			# initial resources
			add_resource = {
				energy = 1000 
			}
			add_resource = {
				alloys = 250 
			}
			add_resource = {
				influence = 100 
			}

			# Initial system lucky wheel
			random_list = {	# NOTE : CHANGES MUST BE DONE 1 DAY AFTER THE START, so players can't cheese-restart
				60 = { # Good initial system - boring thing	
					random_owned_planet = {	# Buffed main planet
						set_planet_size = 22
					}
		
					random = {	# Extra planet
						chance = 50
						random_planet_within_border = {
							limit = {
								OR = {
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_molten
									is_planet_class = pc_frozen
									is_planet_class = pc_toxic
								}
							}
							set_planet_size = 18
							if = {
								limit = { root = { ideal_planet_class = pc_arid } }
								change_pc = pc_arid
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_desert } }
								change_pc = pc_desert
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_tropical } }
								change_pc = pc_tropical
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_continental } }
								change_pc = pc_continental
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_ocean } }
								change_pc = pc_ocean
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_tundra } }
								change_pc = pc_tundra
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_arctic } }
								change_pc = pc_arctic
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_alpine } }
								change_pc = pc_alpine
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_savannah } }
								change_pc = pc_savannah
							}
							else = {
								change_pc = rl_habitable_normal
							}
							reroll_planet = yes
						}
					}
					
					random = {	# Rich System
						chance = 50
						random_planet_within_border = { #Extra resources
							limit = {
								is_star = yes
							}
							set_planet_flag = starting_mining_target
							set_planet_flag = starting_deposit
							set_deposit = d_energy_5
						}
						while = {
							count = 2
							random_planet_within_border = {
								limit = {
									OR = {
										is_asteroid = yes
										is_planet_class = pc_barren
										is_planet_class = pc_barren_cold
										is_planet_class = pc_toxic
										is_planet_class = pc_frozen
									}
								}
								set_planet_flag = starting_mining_target
								set_planet_flag = starting_deposit
								set_deposit = d_minerals_5
							}
						}
						random_planet_within_border = {
							limit = {
								OR = {
									is_asteroid = yes
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_toxic
									is_planet_class = pc_frozen
									is_planet_class = pc_gas_giant
								}
							}
							reroll_deposits = yes
							set_planet_flag = starting_mining_target
							set_planet_flag = starting_deposit
							locked_random_list = {
								# Exotic Gas
								10 = {
									add_deposit = d_exotic_gases_2
								}
								
								# Rare Crystals
								10 = {
									add_deposit = d_rare_crystals_2
								}
								
								# Volatile Motes
								10 = {
									add_deposit = d_volatile_motes_2
								}
							}
						}
					}
				}
				#	10 = {	# Inhabited system
				#	}
				#	10 = {	# Ruined system
				#	}
				#	10 = {	# Destroyed system
				#	}
				#	5 = {	# Perfect system
				#	}
				#	5 = {	# Spicy system
				#	}

			}

			# Marks 3 systems nearby as suitable colonization sites, and one system nearby as spawn point of the fleet
			capital_scope = { # Marks the capital
				solar_system = {
					set_star_flag = tec_exo_initial_system_@root
					save_event_target_as = tec_exo_initial_system
				}
				set_planet_flag = tec_exo_capital_@root
				save_event_target_as = tec_exocolonist_initial_@root
				save_event_target_as = tec_exocolonist_initial
			}
		
			# Mark guarantees
			if = {
				limit = {
					num_guaranteed_colonies >= 2
				}
				closest_system = {
					limit = {
						distance = {
							source = event_target:tec_exocolonist_initial_@root
							use_bypasses = no
							min_jumps = 1
							max_jumps = 5
						}
						NOR = {
							exists = owner
							has_star_flag = hostile_system
							has_star_flag = tec_exo_colony_1_@root
						}
						has_star_flag = neighbor_t1_first_colony				
					}
					set_star_flag = tec_exo_colony_1_@root
				}
				closest_system = {
					limit = {
						distance = {
							source = event_target:tec_exocolonist_initial_@root
							use_bypasses = no
							min_jumps = 1
							max_jumps = 5
						}
						NOR = {
							exists = owner
							has_star_flag = hostile_system
							has_star_flag = tec_exo_colony_2_@root
						}
						has_star_flag = neighbor_t2_second_colony
					}
					set_star_flag = tec_exo_colony_2_@root
				}
			}
			else_if = {
				limit = {
					num_guaranteed_colonies = 1
				}
				closest_system = {
					limit = {
						distance = {
							source = event_target:tec_exocolonist_initial_@root
							use_bypasses = no
							min_jumps = 1
							max_jumps = 5
						}
						NOR = {
							exists = owner
							has_star_flag = hostile_system
							has_star_flag = tec_exo_colony_1_@root
						}
						has_star_flag = neighbor_t1_first_colony
					}
					set_star_flag = tec_exo_colony_1_@root
				}
			}

			# Colonization Fleet pinpoint system spawn - at 3
			closest_system = {
				limit = {
					NOR = {
						exists = owner
						has_star_flag = hostile_system
						has_star_flag = neighbor_t1_first_colony
						has_star_flag = neighbor_t2_second_colony
						has_star_flag = tec_exo_initial_system_@root
						any_ship_in_system = {
							owner = {
								is_hostile_to = root
							}
						}
					}
					distance = {
						source = event_target:tec_exocolonist_initial_@root
						use_bypasses = no
						min_jumps = 5
						max_jumps = 8
					}
				}
				set_star_flag = tec_exo_pinpoint_@root

				random_system_planet = {
					limit = {
						solar_system = {
							is_same_value = prevprev
						}
					}
					set_planet_flag = tec_exo_pinpoint_planet_@root
					save_event_target_as = tec_exo_pinpoint_planet_@root
					# Ark
					create_fleet = {
						effect = {
							set_owner = root
							create_ship = {
								random_existing_design = tec_ark_colonizer
								colonizer_species = root.owner_main_species
							}
							last_created_ship = {
								set_name = "TEC_ARK_SHIP_NAME"
							}
							set_fleet_stance = evasive
							set_location = event_target:tec_exo_pinpoint_planet_@root
						}
					}
	
					while = {
						count = 2
						#Colonizers - moved to later
						# armada - 6 2x3 corvettes
						create_fleet = {
							set_take_point = yes
							effect = {
								set_owner = root
	
								while = {
									count = 3
									create_ship = {
										name = random
										random_existing_design = corvette
									}
								}
	
								owner = {
									create_leader = {
										class = commander
										name = random
										species = root.owner_main_species
									}
								}
								set_leader = last_created_leader
	
								set_location = event_target:tec_exo_pinpoint_planet_@root
							}
						}
						# Construction ships
						create_fleet = {
							effect = {
								set_owner = root
								create_ship = {
									name = random
									random_existing_design = constructor
								}
								set_fleet_stance = evasive
								set_location = event_target:tec_exo_pinpoint_planet_@root
								
							}
						}
					}
					# moves the initial research ship to the location
					root = {
						random_owned_fleet = {
							limit = {
								any_controlled_ship = {
									is_ship_class = shipclass_science_ship
								}
							}
							set_fleet_stance = evasive
							set_location = event_target:tec_exo_pinpoint_planet_@root
						}
						random_controlled_ship = {
							limit = {
								is_ship_class = shipclass_science_ship
							}
							fleet = {
								set_location = event_target:tec_exo_pinpoint_planet_@root
							}
						}
					}
					while = {
						count = 2
						#Science ships
						create_fleet = {
							effect = {
								set_owner = root
								create_ship = {
									name = random
									random_existing_design = science
								}
								set_fleet_stance = evasive
								set_location = event_target:tec_exo_pinpoint_planet_@root
								owner = {
									create_leader = {
										class = scientist
										sub_type = survey
										name = random
										species = root.owner_main_species
									}
								}
								set_leader = last_created_leader
							}
						}
					}
				}
				save_event_target_as = tec_exo_pinpoint_@root
			}
			
			# Remove initial colony planet, ships and stations
			random_owned_planet = {
				limit = {
					owner = {
						has_origin = origin_tec_exocolonist
					}
				}
				# recheck
				set_planet_flag = tec_exo_capital_@root
				this.solar_system = {
					every_ship_in_system = {
						limit = {
							NOT = {
								is_ship_class = shipclass_science_ship
							}
							owner = {
								has_origin = origin_tec_exocolonist
							}
						}
						fleet = {
							destroy_fleet = this
						}
					}
				}
				remove_all_districts = yes
				remove_all_buildings = yes
				clear_deposits = yes
				clear_blockers = yes
				destroy_colony = yes
				reroll_planet = yes
				solar_system = {
					every_system_planet = {
						set_surveyed = {
							surveyed = no
							surveyor = root
						}
					}
				}
			}

			random_owned_fleet = {
				limit = {
					any_controlled_ship = {
						is_ship_class = shipclass_science_ship
					}
				}
				# this works when launched on a science ship directly...
				event_target:tec_exocolonist_initial = {
					solar_system = {
						every_system_planet = {
							set_surveyed = {
								surveyed = no
								surveyor = root
							}
						}
					}
				}
			}

			# Adds variables and special projects to the country
			set_variable = {
				which = "tec_exo_colonists"
				value = 30 #25
			}
			if = {
				limit = {
					exists = event_target:secondary_species
				}
				change_variable = {
					which = "tec_exo_secondary"
					value = 5
				}
			}
			set_country_flag = tec_exo_initial_ready
		}
		every_controlled_ship = {
			add_modifier = {
				modifier = tec_stop_arkfleet
			}
		}

		root = {
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						random_existing_design = constructor
					}
					set_fleet_stance = evasive
					set_location = root.capital_scope
				}
			}
			last_created_fleet = {
				hidden_effect = {
					fleet_event = {
						id = tec_origin.112
						days = 1
					}
				}
			}
		}
		country_event = {	# Lore
			id = tec_origin.120
		}
	}
}
country_event = {	# Ais (temp)
	id = tec_origin.111
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ai = yes
		has_origin = origin_tec_exocolonist
		NOT = {
			has_country_flag = exocolonist_origin
		}
	}

	immediate = {
		set_global_flag = stellarisevolved	# extra set to be sure it's active
		set_country_flag = exocolonist_origin
		hidden_effect = {
			# Check if secondary species exist
			random_owned_species = {
				limit = {
					NOT = {
						is_same_value = owner_main_species
					}
				}
				save_event_target_as = secondary_species
				root = {	# just in case
					create_saved_leader = {
						key = tec_secondary_species_leader
						class = envoy
						species = prev
					}
				}
			}

			# initial resources
			add_resource = {
				energy = 1000 
			}
			add_resource = {
				alloys = 250 
			}
			add_resource = {
				influence = 100 
			}

			# Initial resources
			add_resource = {
				energy = 2000 
			}
			add_resource = {
				minerals = 2500 
			}
			add_resource = {
				alloys = 1250 
			}

			if = {
				limit = {
					OR = {
						is_lithoid_empire = yes
						is_catalytic_empire = no
					}
				}
				add_resource = { minerals = 1500 }
			}
			if = {
				limit = {
					OR = {
						is_lithoid_empire = no
						is_catalytic_empire = yes
					}
				}
				add_resource = { food = 1500 }
			}

			if = {
				limit = {
					country_uses_consumer_goods = yes
				}
				add_resource = {
					consumer_goods = 2000 
				}
			}

			# Initial system lucky wheel
			random_list = {
				60 = { # Good initial system - boring thing	
					random_owned_planet = {	# Buffed main planet
						set_planet_size = 22
					}
		
					random = {	# Extra planet
						chance = 50
						random_planet_within_border = {
							limit = {
								OR = {
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_molten
									is_planet_class = pc_frozen
									is_planet_class = pc_toxic
								}
							}
							set_planet_size = 18
							if = {
								limit = { root = { ideal_planet_class = pc_arid } }
								change_pc = pc_arid
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_desert } }
								change_pc = pc_desert
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_tropical } }
								change_pc = pc_tropical
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_continental } }
								change_pc = pc_continental
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_ocean } }
								change_pc = pc_ocean
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_tundra } }
								change_pc = pc_tundra
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_arctic } }
								change_pc = pc_arctic
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_alpine } }
								change_pc = pc_alpine
							}
							else_if = {
								limit = { root = { ideal_planet_class = pc_savannah } }
								change_pc = pc_savannah
							}
							else = {
								change_pc = rl_habitable_normal
							}
							reroll_planet = yes
						}
					}
					
					random = {	# Rich System
						chance = 50
						random_planet_within_border = { #Extra resources
							limit = {
								is_star = yes
							}
							set_planet_flag = starting_mining_target
							set_planet_flag = starting_deposit
							set_deposit = d_energy_5
						}
						while = {
							count = 2
							random_planet_within_border = {
								limit = {
									OR = {
										is_asteroid = yes
										is_planet_class = pc_barren
										is_planet_class = pc_barren_cold
										is_planet_class = pc_toxic
										is_planet_class = pc_frozen
									}
								}
								set_planet_flag = starting_mining_target
								set_planet_flag = starting_deposit
								set_deposit = d_minerals_5
							}
						}
						random_planet_within_border = {
							limit = {
								OR = {
									is_asteroid = yes
									is_planet_class = pc_barren
									is_planet_class = pc_barren_cold
									is_planet_class = pc_toxic
									is_planet_class = pc_frozen
									is_planet_class = pc_gas_giant
								}
							}
							reroll_deposits = yes
							set_planet_flag = starting_mining_target
							set_planet_flag = starting_deposit
							locked_random_list = {
								# Exotic Gas
								10 = {
									add_deposit = d_exotic_gases_2
								}
								
								# Rare Crystals
								10 = {
									add_deposit = d_rare_crystals_2
								}
								
								# Volatile Motes
								10 = {
									add_deposit = d_volatile_motes_2
								}
							}
						}
					}
				}
				#	10 = {	# Inhabited system
				#	}
				#	10 = {	# Ruined system
				#	}
				#	10 = {	# Destroyed system
				#	}
				#	5 = {	# Perfect system
				#	}
				#	5 = {	# Spicy system
				#	}

			}

			# Adds variables and special projects to the country
			set_variable = {
				which = "tec_exo_colonists"
				value = 30 #25
			}
			if = {
				limit = {
					exists = event_target:secondary_species
				}
				change_variable = {
					which = "tec_exo_secondary"
					value = 5
				}
			}
			set_country_flag = tec_exo_initial_ready
		}

		capital_scope = {
			remove_all_buildings = yes
			remove_all_districts = yes
			if = {
				limit = {
					any_owned_species = {
						NOT = {
							is_same_value = owner_main_species
						}
					}
				}
				while = {
					limit = {
						any_owned_pop = {
							species = {
								NOT = {
									is_same_value = owner_main_species
								}
							}
						}
					}
					random_owned_pop = {
						limit = {
							species = {
								NOT = {
									is_same_value = owner_main_species
								}
							}
						}
						kill_pop = yes
					}
				}
			}
			while = {
				limit = {
					num_pops > 2
				}
				random_owned_pop = {
					kill_pop = yes
				}
			}

			solar_system = {
				spawn_planet = {
					class = "pc_tec_arkship"
					location = prev
					orbit_location = yes
					orbit_angle_offset = 225 #45
					orbit_distance_offset = 20
					size = 4
					has_ring = no
		
					init_effect = {
						set_name = "TEC_ARK_PLANET_NAME"
						set_planet_entity = {
							picture = pc_habitat
							entity = "tec_arkship_entity"
							graphical_culture = from
						}
						set_surveyed = {
							surveyed = yes
							surveyor = root
						}
						clear_blockers = yes
		
						set_planet_flag = megastructure
						set_planet_flag = habitat
						create_colony = {
							owner = root.owner
						}
						set_capital = yes
						set_planet_flag = tec_arkship_of_@root
						prevprev = {
							set_planet_flag = tec_arkship_planet_of_@prev
						}
					}
				}
			}
			set_planet_flag = tec_has_arkship
			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
		
	}
}
fleet_event = {	# clears the system...
	id = tec_origin.112
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		owner = {
			has_origin = origin_tec_exocolonist
		}
	}
	immediate = {
		hidden_effect = {
			root = {
				solar_system = {
					every_system_planet = {
						set_surveyed = {
							surveyed = no
							surveyor = root.owner
						}
					}
					star = {
						set_surveyed = {
							surveyed = no
							surveyor = root.owner
						}
					}
					set_surveyed = {
						surveyed = no
						surveyor = root.owner
					}
				}
			}
		}
	}
	after = {
		hidden_effect = {
			delete_fleet = this
		}
	}
}

# lore events
country_event = {	# Initial message
	id = tec_origin.120
	title = tec_origin.120
	is_triggered_only = yes

	diplomatic_title = BLANK_STRING
	diplomatic = yes
	force_open = yes
	
	picture_event_data = {
		portrait = root.leader
		planet_background = pc_pulsar
		room = crisis_room
	}

	trigger = {
		has_origin = origin_tec_exocolonist	
	}

	desc = {
		trigger = {
			has_origin = origin_tec_exocolonist
		}
		text = "tec_origin.120.desc"
	}

	option = {
		name = tec_origin.120.a
		custom_tooltip = tec_origin.120.a.tooltip
		hidden_effect = {
			set_country_flag = tec_exo_hypertravel
			country_event = {
				id = tec_origin.121
			}
		}
	}

	option = {
		name = tec_origin.120.b
		custom_tooltip = tec_origin.120.b.tooltip
		hidden_effect = {
			set_country_flag = tec_exo_menace
			country_event = {
				id = tec_origin.121
			}
		}
	}

	option = {
		name = tec_origin.120.c
		custom_tooltip = tec_origin.120.c.tooltip
		hidden_effect = {
			set_country_flag = tec_exo_colonization
			country_event = {
				id = tec_origin.121
			}
		}
	}
}

country_event = {	# Continuation
	id = tec_origin.121
	title = tec_origin.120
	is_triggered_only = yes

	diplomatic_title = BLANK_STRING
	diplomatic = yes
	force_open = yes
	
	picture_event_data = {
		portrait = root.leader
		planet_background = pc_pulsar
		room = crisis_room
	}

	trigger = {
		has_origin = origin_tec_exocolonist	
	}

	desc = {
		trigger = {
			has_origin = origin_tec_exocolonist
			has_country_flag = tec_exo_hypertravel
		}
		text = "tec_origin.121.hyp.desc"
	}
	desc = {
		trigger = {
			has_origin = origin_tec_exocolonist
			has_country_flag = tec_exo_menace
		}
		text = "tec_origin.121.menace.desc"
	}
	desc = {
		trigger = {
			has_origin = origin_tec_exocolonist
			has_country_flag = tec_exo_colonization
		}
		text = "tec_origin.121.col.desc"
	}

	option = {
		name = tec_origin.121.hyp.a
		trigger = {
			hidden_trigger = {
				has_country_flag = tec_exo_hypertravel
			}
		}
		hidden_effect = {
			country_event = {
				id = tec_origin.122
			}
		}
	}
	option = {
		name = tec_origin.121.hyp.b
		trigger = {
			hidden_trigger = {
				has_country_flag = tec_exo_hypertravel
			}
		}
		hidden_effect = {
			country_event = {
				id = tec_origin.122
			}
		}
	}

	option = {
		name = tec_origin.121.menace.a
		trigger = {
			hidden_trigger = {
				has_country_flag = tec_exo_menace
			}
		}
		hidden_effect = {
			country_event = {
				id = tec_origin.122
			}
		}
	}
	option = {
		name = tec_origin.121.menace.b
		trigger = {
			hidden_trigger = {
				has_country_flag = tec_exo_menace
			}
		}
		hidden_effect = {
			country_event = {
				id = tec_origin.122
			}
		}
	}

	option = {
		name = tec_origin.121.col.a
		trigger = {
			hidden_trigger = {
				has_country_flag = tec_exo_colonization
			}
		}
		hidden_effect = {
			country_event = {
				id = tec_origin.122
			}
		}
	}
	option = {
		name = tec_origin.121.col.b
		trigger = {
			hidden_trigger = {
				has_country_flag = tec_exo_colonization
			}
		}
		hidden_effect = {
			country_event = {
				id = tec_origin.122
			}
		}
	}
}

country_event = {	# Continuation - unfreezes the fleet and mark poi
	id = tec_origin.122
	title = tec_origin.120
	is_triggered_only = yes

	diplomatic_title = BLANK_STRING
	diplomatic = yes
	force_open = yes
	
	picture_event_data = {
		portrait = root.leader
		planet_background = pc_pulsar
		room = crisis_room
	}

	trigger = {
		has_origin = origin_tec_exocolonist	
	}

	desc = {
		trigger = {
			has_origin = origin_tec_exocolonist
		}
		text = "tec_origin.122.desc"
	}

	option = {
		name = tec_origin.122.a
		custom_tooltip = tec_origin.122.a.tooltip
	}

	after = {
		begin_event_chain = {
			event_chain = "tec_exo_chain_1"
			target = event_target:tec_exo_main_target
		}

		hidden_effect = {
			every_controlled_ship = {
				limit = {
					has_modifier = tec_stop_arkfleet
				}
				remove_modifier = tec_stop_arkfleet
			}
			closest_system = {
				limit = {
					has_star_flag = tec_exo_initial_system_@root
				}
				random_system_planet = {
					limit = {
						has_planet_flag = tec_exo_capital_@root
					}
					save_event_target_as = tec_exo_main_target
				}
			}
			create_point_of_interest = {
				id = tec_exocolonist_target_1
				name = "tec_exo_initial_poi"
				desc = "tec_exo_initial_poi_desc"
				event_chain = "tec_exo_chain_1"
				location = event_target:tec_exocolonist_initial_@root
			}
		}
	}
}

# If the colonized planet is not the main target - warns the player , if yes, continues
planet_event = {
	id = tec_origin.123
	title = tec_origin.120
	is_triggered_only = yes
	diplomatic_title = tec_origin.123.tittle
	diplomatic = yes
	force_open = yes

	show_sound = {
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist	
			}
			NOT = {
				has_planet_flag = tec_exo_capital_@owner
			}
		}
		sound = event_red_alert
	}

	show_sound = {
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist	
			}
			has_planet_flag = tec_exo_capital_@owner
		}
		sound = event_mystic_reveal
	}
	
	picture_event_data = {
		portrait = root.owner.leader
		planet_background = pc_pulsar
		room = crisis_room
	}

	trigger = {
		owner = {
			has_origin = origin_tec_exocolonist
			OR = {
				is_country_type = default_exocolonist
				is_country_type = default_exocolonist_ai
			}
		}
	}

	# The planet is not the main target
	desc = {
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist	
			}
			NOT = {
				has_planet_flag = tec_exo_capital_@owner
			}
		}
		text = "tec_origin.123.nocapital.desc"
	}

	option = {	# Cancel colonization
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist	
			}
			NOT = {
				has_planet_flag = tec_exo_capital_@owner
			}
		}
		name = tec_origin.123.nocapital.a
		custom_tooltip = tec_origin.123.nocapital.a.tooltip
		hidden_effect = {
			create_fleet = {
				effect = {
					set_owner = root.owner
					create_ship = {
						random_existing_design = tec_ark_colonizer
						colonizer_species = root.owner.owner_main_species
					}
					set_fleet_stance = evasive
					set_location = root
				}
			}
			last_created_fleet = {
				set_name = "TEC_ARK_SHIP_NAME"
			}
			destroy_colony = yes
		}
	}

	option = {	# Continue colonization
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist	
			}
			NOT = {
				has_planet_flag = tec_exo_capital_@owner
			}
		}
		name = tec_origin.123.nocapital.b
		custom_tooltip = tec_origin.123.nocapital.b.tooltip
		hidden_effect = {
			planet_event = {
				id = tec_origin.125
			}
		}
	}

	# The planet is the main target
	desc = {
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist	
			}
			has_planet_flag = tec_exo_capital_@owner
		}
		text = "tec_origin.123.main.desc"
	}

	option = {	# Converts the country on default
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist	
			}
			has_planet_flag = tec_exo_capital_@owner
		}
		name = tec_origin.123.main.a
		custom_tooltip = tec_origin.122.main.a.tooltip
		hidden_effect = {
			planet_event = {
				id = tec_origin.124
			}
		}
	}
}

planet_event = { # On colonization, exocolonists become regular
	id = tec_origin.124
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		owner = {
			OR = {
				is_country_type = default_exocolonist
				is_country_type = default_exocolonist_ai
			}
		}
	}

	immediate = {
		owner = {
			remove_point_of_interest = tec_exocolonist_target_1
			end_event_chain = tec_exo_chain_1
		}

		create_colony = {
			owner = THIS.owner
		}

		owner = {
			set_country_flag = first_colony
		}
		
		if = {
			limit = {
				owner = {
					has_origin = origin_tec_exocolonist 
					OR = {
						is_country_type = default_exocolonist_ai
						is_country_type = default_exocolonist
					}
					has_country_flag = tec_exo_initial_ready
				}
			}
			owner = {
				remove_country_flag = tec_exo_initial_ready
				# Back to mediocrity
				set_country_type = default

				# Initial resources
				add_resource = {
					energy = 2000 
				}
				add_resource = {
					minerals = 2500 
				}
				add_resource = {
					alloys = 1250 
				}
				add_resource = {
					influence = 300 
				}
				if = {
					limit = {
						OR = {
							is_lithoid_empire = yes
							is_catalytic_empire = no
						}
					}
					add_resource = { minerals = 1500 }
				}
				if = {
					limit = {
						OR = {
							is_lithoid_empire = no
							is_catalytic_empire = yes
						}
					}
					add_resource = { food = 1500 }
				}

				if = {
					limit = {
						country_uses_consumer_goods = yes
					}
					add_resource = {
						consumer_goods = 2000 
					}
				}
				
			}
			planet_event = {
				id = tec_origin.125
			}

			# Adds pops
			create_pop = {
				species = owner_main_species
			}
			if = {
				limit = {
					owner = {
						OR = {
							has_valid_civic = civic_machine_servitor
							has_valid_civic = civic_machine_assimilator
						}
					}
				}
				create_pop = {
					species = supplementary_species_@root
				}
			}

		}
	}
}

#Main Colony established
planet_event = {
	id = tec_origin.125
	hide_window = no
	title = exocolonist_hurray
	is_triggered_only = yes
	show_sound = event_mystic_reveal
	picture = GFX_evt_big_landing_ship
	
	trigger = {
		owner = {
			has_origin = origin_tec_exocolonist
		}
	}

	desc = {
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist
			}
			NOT = {
				has_planet_flag = tec_exo_capital_@root
			}
		}
		text = tec_origin.125.nocapital.desc
	}
	desc = {
		trigger = {
			owner = {
				has_origin = origin_tec_exocolonist
			}
			has_planet_flag = tec_exo_capital_@root
		}
		text = tec_origin.125.capital.desc
	}

	option = {
		trigger = {
			hidden_trigger = {
				owner = {
					has_origin = origin_tec_exocolonist
				}
				NOT = {
					has_planet_flag = tec_exo_capital_@root
				}
			}
		}
		name = tec_origin.125.nocapital.a
		custom_tooltip = tec_origin.125.nocapital.a.tooltip
	}

	option = {
		trigger = {
			hidden_trigger = {
				owner = {
					has_origin = origin_tec_exocolonist
				}
				has_planet_flag = tec_exo_capital_@root
			}
		}
		name = tec_origin.125.capital.a
		custom_tooltip = tec_origin.125.capital.a.tooltip
		hidden_effect = {
			begin_event_chain = {
				event_chain = "tec_exo_chain_2"
				target = THIS
			}
			set_variable = {
				which = exocolonist_colonized_systems
				value = 2
			}
			while = {
				count = 2
				create_fleet = {
					effect = {
						set_owner = root
						create_ship = {
							name = random
							random_existing_design = colonizer
							colonizer_species = root.owner_main_species
						}
						set_fleet_stance = evasive
						set_location = prev
					}
				}
										
			}
			# Mark guarantees
			closest_system = {
				limit = {
					has_star_flag = tec_exo_colony_1_@root				
				}
				save_event_target_as = tec_exo_colony_1_@root
				random_system_planet = {
					limit = {
						can_colonize = {
							who = root
							status = yes
						}
						habitability = {
							who = root
							value > 0.4
						}
					}
					set_planet_flag = tec_exo_d_p_1_@root
					save_event_target_as = tec_exo_d_p_1_@root
				}
			}
			
			closest_system = {
				limit = {
					has_star_flag =	tec_exo_colony_2_@root
				}
				save_event_target_as = tec_exo_colony_2_@root
				random_system_planet = {
					limit = {
						can_colonize = {
							who = root
							status = yes
						}
						habitability = {
							who = root
							value > 0.4
						}
					}
					set_planet_flag = tec_exo_d_p_2_@root
					save_event_target_as = tec_exo_d_p_2@root
				}
			}

			create_point_of_interest = {
				id = exocolonist_colony_2	#probe_search_poi.1
				name = "exocolonist_2_poi"	#"probe_search_1_poi"
				desc = "exocolonist_2_poi_desc"
				event_chain = "tec_exo_chain_2"
				location = event_target:tec_exo_d_p_1_@root
			}
			create_point_of_interest = {
				id = exocolonist_colony_3	#probe_search_poi.1
				name = "exocolonist_3_poi"	#"probe_search_1_poi"
				desc = "exocolonist_3_poi_desc"
				event_chain = "tec_exo_chain_2"
				location = event_target:tec_exo_d_p_2_@root
			}
		}
	}

	after = {
		solar_system = {
			spawn_planet = {
				class = "pc_tec_arkship"
				location = prev
				orbit_location = yes
				orbit_angle_offset = 225 #45
				orbit_distance_offset = 20
				size = 4
				has_ring = no
	
				init_effect = {
					set_name = "TEC_ARK_PLANET_NAME"
					set_planet_entity = {
						picture = pc_habitat
						entity = "tec_arkship_entity"
						graphical_culture = from
					}
					set_surveyed = {
						surveyed = yes
						surveyor = FROM
					}
					set_all_comms_surveyed = yes
					clear_blockers = yes
	
					set_planet_flag = megastructure
					set_planet_flag = habitat
					create_colony = {
						owner = root.owner
					}
					set_capital = yes
					set_planet_flag = tec_arkship_of_@root
					root = {
						set_planet_flag = tec_arkship_planet_of_@prev
					}
				}
			}
		}
		set_planet_flag = tec_has_arkship
		if = {
			limit = { has_orbital_station = yes }
			orbital_station = {
				dismantle = yes
			}
		}
	}
}

#Remove POI on colonization
planet_event = {
	id = tec_origin.119
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		owner = {
			has_event_chain = tec_exo_chain_2
		}
		OR = {
			has_planet_flag = tec_exo_d_p_1_@root.owner
			has_planet_flag = tec_exo_d_p_2_@root.owner
		}
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					has_planet_flag = tec_exo_d_p_1_@root.owner
					solar_system = {
						any_system_planet = {
							has_planet_flag = tec_exo_d_p_1_@root.owner
						}
					}
				}
			}
			owner = {
				remove_point_of_interest = exocolonist_colony_2
				change_variable = {
					which = exocolonist_colonized_systems
					value = -1
				}
				if = {
					limit = {
						check_variable = {
							which = exocolonist_colonized_systems
							value = 0
						}
					}
					end_event_chain = tec_exo_chain_2
					clear_variable = exocolonist_colonized_systems
				}
			}
			solar_system = {
				set_star_flag = former_exocolonist_target
			}
		}
		if = {
			limit = {
				OR = {
					has_planet_flag = tec_exo_d_p_2_@root.owner
					solar_system = {
						any_system_planet = {
							has_planet_flag = tec_exo_d_p_2_@root.owner
						}
					}
				}
			}
			owner = {
				remove_point_of_interest = exocolonist_colony_3
				change_variable = {
					which = exocolonist_colonized_systems
					value = -1
				}
				if = {
					limit = {
						check_variable = {
							which = exocolonist_colonized_systems
							value = 0
						}
					}
					end_event_chain = tec_exo_chain_2
					clear_variable = exocolonist_colonized_systems
				}
			}
			solar_system = {
				set_star_flag = former_exocolonist_target
			}
		}
	}
}

# Unlocks the de-stasis decisions


# After unfreezing everyone, decides what to do with the ark

# Ark is used as permanent mega

# Ark is recycled

# Art is repurposed

# Finito, for now


# ------------------------
#	BIOSERVANT - # 200
country_event = {
	id = tec_origin.210
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_origin = origin_tec_bioservant
			has_origin = origin_tec_bioservantempire
			has_origin = origin_tec_hive_bioservant
		}
		NOR = {
			has_country_flag = bioservantcrafters_empire
			has_country_flag = bioservantorigin_empire
			has_country_flag = hive_bioservant_empire
		}
	}

	immediate = {
		set_global_flag = stellarisevolved	# extra set to be sure it's active
		hidden_effect = {
			random_owned_planet ={
				limit = { is_capital = yes }
				if = {
					limit = {
						owner = {
							has_origin = origin_tec_bioservant
						}
					}
					owner = { set_country_flag = bioservantcrafters_empire }
					add_building = building_tec_bioservant_plant_1
					set_planet_flag = bioservant_assembly_flag
					add_district = {
						district_type = district_generator
						ignore_cap = yes
					}
				}
				else_if = {
					limit = {
						owner = {
							has_origin = origin_tec_bioservantempire
						}
					}
					owner = { set_country_flag = bioservantorigin_empire }
					owner = {
						tec_create_built_bioservant_species = yes
					}
					while = {
						limit = { num_pops < 34 }
						create_pop = {
							species = owner_main_species
							ethos = random
						}
					}
					add_building = building_tec_bioservant_plant_1
					add_district = {
						district_type = district_generator
						ignore_cap = yes
					}
					add_deposit = d_tec_previous_ruins
					add_deposit = d_tec_previous_ruins
					add_deposit = d_tec_previous_ruins
					add_deposit = d_metal_boneyard
					add_deposit = d_tec_underground_biocomplex
				}
				if = {
					limit = {
						owner = {
							has_origin = origin_tec_hive_bioservant
						}
					}
					owner = { set_country_flag = hive_bioservant_empire }
					owner = {
					#	tec_create_built_bioservant_species = yes
					}
					while = {
						count = 2
						create_pop = {
							species = owner_main_species
						}
					}
					add_building = building_tec_hive_bioservant_plant_1
					remove_building = building_spawning_pool
					set_planet_flag = bioservant_assembly_flag
					add_district = {
						district_type = district_generator
						ignore_cap = yes
					}
					add_deposit = d_tec_previous_ruins
					add_deposit = d_tec_previous_ruins
					add_deposit = d_tec_previous_ruins
					add_deposit = d_metal_boneyard
					add_deposit = d_tec_underground_biocomplex
				}
				
			}
		}
	}
}



# ------------------------
#	X - # XXX


# ------------------------
#	SLAVE TO THE SYSTEM - # 700
country_event = {
	id = tec_origin.710
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_origin = origin_tec_slavetothesystem
		}
		NOT = {
			has_country_flag = slavetothesystem_empire
		}
	}

	immediate = {
		set_global_flag = stellarisevolved	# extra set to be sure it's active
		hidden_effect = {
			random_owned_planet ={
				limit = { is_capital = yes }
				if = {
					limit = {
						owner = {
							has_origin = origin_tec_slavetothesystem
						}
					}
					owner = {
						set_country_flag = slavetothesystem_empire 
					}
				#	while = {
				#		limit = { num_pops > 8 }
				#		random_owned_pop = {
				#			limit = {
				#				NOR = {
				#					is_pop_category = ruler
				#					is_pop_category = specialist
				#				}
				#			}
				#			kill_pop = yes }
				#		}
					remove_all_districts = yes
					remove_building = building_factory_1
					while = {
						count = 4
						create_pop = {
							species = owner_species
						}
					}
					add_building = building_robot_assembly_plant
					add_district = district_city
					add_district = district_city
					add_district = district_city
					add_district = district_generator
					add_district = district_generator
					add_district = district_generator
					add_district = district_mining
					add_district = district_mining
					add_district = district_mining
					add_district = district_farming
					add_district = district_farming
					add_building = building_factory_1
				}
			}
			give_technology = {
				tech = tech_robotic_workers
				message = no
			}
			give_technology = {
				tech = tech_droid_workers
				message = no
			}
			give_technology = {
				tech = tech_sapient_ai
				message = no
			}
			give_technology = {
				tech = tech_synthetic_workers
				message = no
			}
			give_technology = {
				tech = tech_synthetic_leaders
				message = no
			}
		}
	}
}

# ------------------------
#	REBORN IN METAL - ROBOSAPIENS - # 800
country_event = {
	id = tec_origin.810
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_origin = origin_tec_robosapiens
		}
		NOT = {
			has_country_flag = robosapiens_empire
		}
	}

	immediate = {
		set_global_flag = stellarisevolved	# extra set to be sure it's active
		hidden_effect = {
			random_owned_planet ={
				limit = { is_capital = yes }
				if = {
					limit = {
						owner = {
							has_origin = origin_tec_robosapiens
						}
					}
					owner = {
						set_country_flag = robosapiens_empire
					}
			#start with less pops as synths are kinda op
					while = {
						limit = { num_pops > 25 }
						random_owned_pop = {
							limit = {
								NOR = {
									is_pop_category = ruler
									is_pop_category = specialist
								}
							}
							kill_pop = yes
							}
						}
					add_building = building_robot_assembly_plant
					remove_district = district_farming
					remove_district = district_farming
					remove_district = district_farming
				}
			}
			give_technology = {
				tech = tech_robotic_workers
				message = no
			}
			give_technology = {
				tech = tech_droid_workers
				message = no
			}
			give_technology = {
				tech = tech_sapient_ai
				message = no
			}
			give_technology = {
				tech = tech_synthetic_workers
				message = no
			}
			give_technology = {
				tech = tech_synthetic_leaders
				message = no
			}
		}
	}
}


# ------------------------
#	CLONE-NATION - # 900
country_event = {
	id = tec_origin.910
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			has_origin = origin_tec_clones
		}
		NOT = {
			has_country_flag = clonenation_empire
		}
	}

	immediate = {
		set_global_flag = stellarisevolved	# extra set to be sure it's active
		hidden_effect = {
			if = {
				limit = {
					has_origin = origin_tec_clones
				}
				set_country_flag = clonenation_empire
				every_owned_leader = {
					add_leader_traits_after_modification = yes
				}
				# building is part of `tec_start_add_assembly_building`
				# techs are part of `tec_start_techs.1`
			}
		}
	}
}

# ------------------------
#	AQUATIC BOOGALOO - # 1000
country_event = { # Flood origins with anglers - Nuked
	id = tec_origin.1001
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_has_nuked_world_origin = yes
		tec_is_aquatic_empire = yes
		any_owned_species = {
			tec_is_aquatic_species = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				tec_is_wet_planet_exceptions = {
					owner = prev
				}
				tec_is_flooded = no
			}
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			tec_cache_planet_scope_triggers = { force = yes }
		}
	}
}

country_event = { # Flood origins with anglers - Hives
	id = tec_origin.1002
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_has_hive_world_origin = yes
		tec_is_aquatic_empire = yes
		any_owned_species = {
			tec_is_aquatic_species = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				tec_is_wet_planet_exceptions = {
					owner = prev
				}
				tec_is_flooded = no
			}
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			tec_cache_planet_scope_triggers = { force = yes }
		}
	}
}

country_event = { # Flood origins with anglers - Machines
	id = tec_origin.1003
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_has_machine_world_origin = yes
		tec_is_aquatic_empire = yes
		any_owned_species = {
			tec_is_aquatic_species = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				tec_is_wet_planet_exceptions = {
					owner = prev
				}
				tec_is_flooded = no
			}
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			tec_cache_planet_scope_triggers = { force = yes }
		}
	}
}

country_event = { # Flood origins with anglers - Gaias
	id = tec_origin.1004
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_has_gaia_world_origin = yes
		tec_is_aquatic_empire = yes
		any_owned_species = {
			tec_is_aquatic_species = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				tec_is_wet_planet_exceptions = {
					owner = prev
				}
				tec_is_flooded = no
			}
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			tec_cache_planet_scope_triggers = { force = yes }
		}
	}
}

country_event = { # Flood origins with anglers - rings
	id = tec_origin.1005
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_is_aquatic_empire = yes
		capital_scope = {
			tec_is_ringworld = yes
		}
		any_owned_species = {
			tec_is_aquatic_species = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				tec_is_ringworld = yes
				tec_is_flooded = no
			}
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			tec_cache_planet_scope_triggers = { force = yes }
		}
	}
}

country_event = { # Flood origins with anglers - elysiums
	id = tec_origin.1006
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_is_aquatic_empire = yes
		capital_scope = {
			tec_is_elysium = yes
		}
		any_owned_species = {
			tec_is_aquatic_species = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				tec_is_elysium = yes
				tec_is_flooded = no
			}
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			tec_cache_planet_scope_triggers = { force = yes }
		}
	}
}

country_event = { # Flood origins with anglers - habitats
	id = tec_origin.1007
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		tec_is_aquatic_empire = yes
		capital_scope = {
			tec_is_habitat = yes
		}
		any_owned_species = {
			tec_is_aquatic_species = yes
		}
	}

	immediate = {
		every_owned_planet = {
			limit = {
				tec_is_habitat = yes
				tec_is_flooded = no
			}
			add_modifier = {
				modifier = flooded_habitat
				days = -1
			}
			tec_cache_planet_scope_triggers = { force = yes }
		}
	}
}

# -----------------
# Artificial Planet - 1100

country_event = {
	id = tec_origin.1101
	hide_window = yes
	
	is_triggered_only = yes
	trigger = {
		root = {
			tec_autocolonizes_artificial_worlds = yes
		}
		exists = from.planet
	}
	
	immediate = {
		from.planet = {
			every_moon = {
				limit = { 
					is_colony = no
					is_colonizable = yes
					tec_autocolonizable_artificial_worlds = yes
				}
				create_colony = {
					owner = root
					species = root.owner_main_species
				}
				tec_cache_planet_scope_triggers = { force = yes }
			}
		}
	}
}

# On planet class change
planet_event = {
	id = tec_origin.1102
	hide_window = yes
	
	is_triggered_only = yes
	trigger = {
		is_colony = no
		exists = space_owner
		space_owner = {
			tec_autocolonizes_artificial_worlds = yes
		}
		tec_autocolonizable_artificial_worlds = yes
	}
	
	immediate = {
		create_colony = {
			owner = space_owner
			species = space_owner.owner_main_species
		}
		tec_cache_planet_scope_triggers = { force = yes }
	}
}