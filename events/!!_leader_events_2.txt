# events\!!_leader_events_2.txt

############################
#
# Leader Events
#
############################

namespace = leader

# Fired by on_added_to_leader_pool
# A leader is added to the leader pool, available for recruitment
# scope: country, from: leader
# Add traits from civics
country_event = {
	id = leader.100
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		always = no
		NOT = { has_country_flag = spawning_renowned_leader }
	}

	immediate = {
		
		# EVOLVED NOTE: Handled by tec_leaders_replace.106
		# Champions of the Empire
		## Adds a random common trait
		#if = {
		#	limit = {
		#		has_tradition = tr_aptitude_champions_of_the_empire
		#	}
		#	from = {
		#		add_trait_no_notify = "random_common"
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.101
		# Aristocratic Elite
		# 20% Chance for a random positive trait and a random negative trait
		#if = {
		#	limit = {
		#		has_valid_civic = civic_aristocratic_elite
		#	}
		#	from = {
		#		random_list = {
		#			80 = {  }
		#			20 = {
		#				add_trait_no_notify = "random_common"
		#				add_trait_no_notify = "random_negative"
		#				# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Check made in paragon_2.2200.
		#				change_background_job = noble
		#			}
		#		}
		#	}
		#}
		# EVOLVED NOTE: Handled by tec_leaders_replace.102
		## Technocracy
		## Adds a random expertise trait
		#if = {
		#	limit = {
		#		has_valid_civic = civic_technocracy
		#		from = { leader_class = scientist }
		#	}
		#	from = {
		#		add_random_expertise_trait_effect = yes
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.103
		## Crusader Spirit
		## Adds the Crusader trait
		#if = {
		#	limit = {
		#		has_valid_civic = civic_crusader_spirit
		#		from = { leader_class = commander }
		#	}
		#	from = {
		#		add_trait_no_notify = leader_trait_crusader
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.104
		## Letters of Marque
		## Adds the Corsair trait
		#if = {
		#	limit = {
		#		has_civic = civic_crusader_spirit_corporate
		#		from = { leader_class = commander }
		#	}
		#	from = {
		#		add_trait_no_notify = leader_trait_corsair
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.107
		## Tactical Algorithms
		## Adds the Tactical Algorithms trait
		#if = {
		#	limit = {
		#		has_civic = civic_machine_tactical_algorithms
		#		from = { leader_class = commander }
		#	}
		#	from = {
		#		add_trait_no_notify = leader_trait_tactical_algorithms
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.108
		# Storm Chasers
		# Adds the Storm Rider trait
		#if = {
		#	limit = {
		#		has_origin = origin_storm_chasers
		#	}
		#	from = {
		#		switch = {
		#			trigger = leader_class
		#			commander = {
		#				add_trait_no_notify = leader_trait_storm_rider_commander
		#				}
		#			scientist = {
		#				add_trait_no_notify = leader_trait_storm_rider_scientist
		#			}
		#			official = {
		#				add_trait_no_notify = leader_trait_storm_rider_official
		#			}
		#		}
		#	}
		#}
	}
}

# Fired by on_game_start_country
# scope: country
# Add traits from civics
country_event = {
	id = leader.110
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		always = no
	}

	immediate = {
		# EVOLVED NOTE: Handled by tec_leaders_replace.101
		## Aristocratic Elite
		## 20% Chance for a random positive trait and a random negative trait
		#if = {
		#	limit = {
		#		has_valid_civic = civic_aristocratic_elite
		#	}
		#	every_owned_leader = {
		#		random_list = {
		#			80 = {  }
		#			20 = {
		#				add_trait_no_notify = "random_common"
		#				add_trait_no_notify = "random_negative"
		#				# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Check made in paragon_2.2200.
		#				change_background_job = noble
		#			}
		#		}
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.105
		## Remnants
		## Adds a Archaeostudies Expertise trait
		#if = {
		#	limit = {
		#		has_ancrel = yes
		#		has_origin = origin_remnants
		#	}
		#	every_owned_leader = {
		#		limit = {
		#			leader_class = scientist
		#			OR = {
		#				is_councilor_type = councilor_research
		#				is_councilor_type = councilor_gestalt_cognitive
		#			}
		#		}
		#		add_trait_no_notify = leader_trait_expertise_archaeostudies
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.102
		## Static Research Analysis
		## Adds a random Expertise trait
		#if = {
		#	limit = {
		#		is_machine_empire = yes
		#		has_valid_civic = civic_machine_predictive_analysis
		#	}
		#	every_owned_leader = {
		#		limit = {
		#			is_councilor_type = councilor_gestalt_cognitive
		#		}
		#		add_random_expertise_trait_effect = yes
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.102
		## Technocracy
		## Adds a random Expertise trait
		#if = {
		#	limit = {
		#		has_valid_civic = civic_technocracy
		#	}
		#	every_owned_leader = {
		#		limit = {
		#			leader_class = scientist
		#		}
		#		add_random_expertise_trait_effect = yes
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.103
		## Crusader Spirit
		## Adds the Crusader trait
		#if = {
		#	limit = {
		#		has_valid_civic = civic_crusader_spirit
		#	}
		#	every_owned_leader = {
		#		limit = {
		#			leader_class = commander
		#		}
		#		add_trait_no_notify = leader_trait_crusader
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.104
		## Letters of Marque
		## Adds the Corsair trait
		#if = {
		#	limit = { has_civic = civic_crusader_spirit_corporate }
		#	every_owned_leader = {
		#		limit = {
		#			leader_class = commander
		#		}
		#		add_trait_no_notify = leader_trait_corsair
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.107
		## Tactical Algorithms
		## Adds the Tactical Algorithms trait
		#if = {
		#	limit = {
		#		has_civic = civic_machine_tactical_algorithms
		#	}
		#	every_owned_leader = {
		#		limit = {
		#			leader_class = commander
		#		}
		#		add_trait_no_notify = leader_trait_tactical_algorithms
		#	}
		#}

		# EVOLVED NOTE: Handled by tec_leaders_replace.108
		# Storm Chasers
		# Adds the Storm Rider trait
		#if = {
		#	limit = {
		#		has_origin = origin_storm_chasers
		#	}
		#	every_owned_leader = {
		#		switch = {
		#			trigger = leader_class
		#			commander = {
		#				add_trait_no_notify = leader_trait_storm_rider_commander
		#			}
		#			scientist = {
		#				add_trait_no_notify = leader_trait_storm_rider_scientist
		#			}
		#			official = {
		#				add_trait_no_notify = leader_trait_storm_rider_official
		#			}
		#		}
		#	}
		#}
	}
}


# New heir appointed
leader_event = {
	id = leader.200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
	}

	immediate = {
		# Set age to be younger than normal.
		set_variable_to_random_value = {
			which = heir_age_mod
			min = -10
			max = 0
			rounded = yes
		}
		add_age = heir_age_mod

		####################
		# CLASS RANDOMISER #
		####################

		# Set skill level to 1
		set_skill = 1

		if = {
			limit = {
				owner = {
					OR = {
						# Commander
						has_valid_civic = civic_crusader_spirit_corporate
						has_tradition = tr_supremacy_war_games
						has_valid_civic = civic_distinguished_admiralty
						has_valid_civic = civic_crusader_spirit
						# Official
						has_valid_civic = civic_aristocratic_elite
						has_tradition = tr_domination_colonial_viceroys
						# Scientist
						has_valid_civic = civic_technocracy
							# Evolved
						has_valid_civic = civic_tec_regular_science_directorate
						has_valid_civic = civic_tec_corporate_scientific_corp
						has_valid_civic = civic_tec_corporate_innovative
						has_tradition = tr_discovery_science_division
						# Current Ruler's Class
						has_valid_civic = civic_philosopher_king
					}
				}
			}

			# All classes have a base weight of 10.
			# Civics that boost only one class add 40.
			# Civics that boost two classes add 20 to each class.
			# Traditions that boost a class add 20.

			#noinspection ParadoxScriptMissingExpression
			random_list = {
				inline_script = {
					script = iterators/tec_iterate_leader_class
					code = "
						0 = {
							modifier = {
								add = value:heir_class_weight_$leader_class$
							}
							change_leader_class = $leader_class$
							add_skill_without_trait_selection = owner.modifier:$leader_class$_initial_skill
						}
					"
				}
			}
		}
		tec_leader_add_starting_skill = yes
		##########
		# TRAITS #
		##########

		# Initial Traits, set after determining class.
		add_trait_no_notify = trait_imperial_heir
		add_trait_no_notify = "random_common"

		# Chance for a negative trait.
		random_list = {
			95 = { }
			5 = {
				add_trait_no_notify = "random_common"
				add_trait_no_notify = "random_negative"
				# Variable "leader_pending_negative_traits_unmodified" doesn't exist yet, can't reduce it yet. Checked now made in paragon_2.2200.
				modifier = {
					factor = 0
					owner = { has_valid_civic = civic_philosopher_king }
				}
			}
		}

		# Under One Rule
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_legendary_leader_imperial
						ruler = { has_trait = leader_trait_legendary_offspring }
					}
				}
			}
			add_trait_no_notify = leader_trait_legendary_offspring
		}

		# NOTE: now handled in the tec_leaders_replace events

		## Technocracy
		#if = {
		#	limit = {
		#		owner = {
		#			has_valid_civic = civic_technocracy
		#		}
		#		leader_class = scientist
		#	}
		#	add_random_expertise_trait_effect = yes
		#}
		#
		## Crusader Spirit
		#if = {
		#	limit = {
		#		owner = {
		#			has_valid_civic = civic_crusader_spirit
		#		}
		#		leader_class = commander
		#	}
		#	add_trait_no_notify = leader_trait_crusader
		#}
		#
		## Letters of Marque
		#if = {
		#	limit = {
		#		owner = {
		#			has_valid_civic = civic_crusader_spirit_corporate
		#		}
		#		leader_class = commander
		#	}
		#	add_trait_no_notify = leader_trait_corsair
		#}

		# Storm Chasers
		# Adds the Storm Rider trait
		#if = {
		#	limit = {
		#		owner = {
		#			has_origin = origin_storm_chasers
		#		}
		#	}
		#	switch = {
		#		trigger = leader_class
		#		commander = {
		#			add_trait_no_notify = leader_trait_storm_rider_commander
		#		}
		#		scientist = {
		#			add_trait_no_notify = leader_trait_storm_rider_scientist
		#		}
		#		official = {
		#			add_trait_no_notify = leader_trait_storm_rider_official
		#		}
		#	}
		#}

		# TODO: Rodah do we keep below, it is currently handled above in the random selection
		#if = {
		#	limit = {	# EVOLVED Paragon TO DO add civics using this as requirement
		#		owner = {
		#			OR = {
		#				has_civic = civic_technocracy
		#				has_civic = civic_tec_regular_science_directorate
		#			}
		#		}
		#	}
		#	change_leader_class = scientist
		#}
	}
}

# Add Imperial Ruler trait on changing to Imperial authority.
country_event = {
	id = leader.201
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = default
		is_imperial_authority = yes
		exists = ruler
	}

	immediate = {
		ruler = {
			if = {
				limit = {
					NOT = { has_trait = trait_imperial_heir }
				}
				add_trait = trait_imperial_heir
			}
		}
	}
}

#Fired by on_monthly_pulse_country
# Favors from leader_trait_ambassador_favor_maker
#country_event = {
#	id = leader.300

#country_event = { # Mutual Support
#	id = leader.310
